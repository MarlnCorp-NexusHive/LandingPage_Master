// Unified Language System for Marln Website
// This script ensures consistent language switching across ALL pages

(function() {
    'use strict';
    
    const DEFAULT_LANG = 'en';
    const SUPPORTED_RTL = new Set(['ar']);
    
    // Language System Initializing...
    
    // Enhanced error handling
    function logError(message, error) {
        console.warn('๐ Language System:', message, error);
    }
    
    // Comprehensive embedded translations for ALL pages
    const EMBEDDED = {
        ar: {
            // Header Navigation
            header: { 
                home: "ุงูุฑุฆูุณูุฉ",
                about: "ูู ูุญู", 
                services: "ุงูุฎุฏูุงุช", 
                company: "ุงูุดุฑูุฉ",
                contact: "ุงุชุตู ุจูุง",
                insights: "ุฑุคู"
            },
            
            // Dropdown Menus
            dropdown: {
                services: {
                    aiConsulting: "ุงูุงุณุชุดุงุฑุงุช ุงููุฏุนููุฉ ุจุงูุฐูุงุก ุงูุงุตุทูุงุนู",
                    engineering: "ุฎุฏูุงุช ุงูููุฏุณุฉ",
                    dataAnalytics: "ุชุญููู ุงูุจูุงูุงุช",
                    corporateTraining: "ุงูุชุฏุฑูุจ ุงููุคุณุณู"
                },
                company: {
                    profile: "ุงูููู ุงูุชุนุฑููู ูุดุฑูุฉ Marln",
                    csr: "ุงููุณุคูููุฉ ุงูุงุฌุชูุงุนูุฉ ููุดุฑูุงุช (CSR)",
                    partners: "ุงูุดุฑูุงุก ุงูุชููููู",
                    industry: "ุงูุตูุงุนุฉ"
                }
            },
            
            // Common Elements
            common: {
                contactUs: "ุชูุงุตู ูุนูุง",
                scheduleMeeting: "ุงุญุฌุฒ ุงุฌุชูุงุนุงู",
                speakToTeam: "ุชุญุฏุซ ุฅูู ูุฑูููุง",
                sendMessage: "ุฃุฑุณู ุงูุฑุณุงูุฉ",
                namePlaceholder: "ุงูุงุณู*",
                emailPlaceholder: "ุงูุจุฑูุฏ ุงูุฅููุชุฑููู*",
                messagePlaceholder: "ุฃุฎุจุฑูุง ุนู ูุดุฑูุนู",
                ourProducts: "ููุชุฌุงุชูุง ุงูุฐููุฉ",
                yourName: "ุงุณูู",
                yourEmail: "ุจุฑูุฏู ุงูุฅููุชุฑููู",
                companyName: "ุงุณู ุงูุดุฑูุฉ",
                tellUsAboutProject: "ุฃุฎุจุฑูุง ุนู ูุดุฑูุนู"
            },
            
            // Index Page Specific
            index: {
                hero: {
                    title: "ุฑุคูุฉ ุดุงููุฉ 360ยฐ. ุชุฃุซูุฑ ุฃูุตู",
                    subtitle: "ุชุนุฑู ุนูู Nexushive CRM: ูุธุงู ุฅุฏุงุฑุฉ ุนูุงูุงุช ุงูุนููุงุก ุงูุฐูู ุงูุฐู ูุณุชุจู ุงูุงุญุชูุงุฌ."
                },
                stats: {
                    countries: { title: "ุงูุฏูู ุงููุฎุฏููุฉ", num: "25+" },
                    deployments: { title: "ุนูููุงุช ูุดุฑ ุนูู ูุณุชูู ุงููุคุณุณุงุช", num: "50+" },
                    certifications: { title: "ุงูุดูุงุฏุงุช ุงููุญุตูุฉ", num: "10+" },
                    experts: { title: "ุงูุฎุจุฑุงุก", num: "25+" }
                },
                clients: {
                    title: "ุงูุนููุงุก ุงูุฐูู ูุฎุฏููู",
                    startups: { title: "ุงูุดุฑูุงุช ุงููุงุดุฆุฉ", text: "ุงูุฃููุงุฑ ุงููุจูุฑุฉ ุชุณุชุญู ุชูููุฐุงู ุฌุฑูุฆุงู. ูุชุนุงูู ูุน ุงููุคุณุณูู ุงูุทููุญูู ูุชุญููู ุงูููุงููู ุงูุฃูููุฉ ุฅูู ุนูุงูุงุช ุชุฌุงุฑูุฉ ูููุฉ ููุงุจูุฉ ููุชูุณุน โ ูุตููุฉ ูุชุชุฌุงูุฒ ุงูุถูุถุงุก ูุชููุฏ ุงููุณุชูุจู." },
                    smvs: { title: "ุงููุดุงุฑูุน ุงูุตุบูุฑุฉ ูุงููุชูุณุทุฉ", text: "ุงูุดุฑูุงุช ูู ูุฑุญูุฉ ุงูููู ุชุญุชุงุฌ ุฃูุซุฑ ูู ูุฌุฑุฏ ุฒุฎู โ ุชุญุชุงุฌ ุฅูู ุงุณุชุฑุงุชูุฌูุฉ ุญุงุฏุฉ ููููุฉ ุฌุฐุงุจุฉ ูุฅุทูุงู ููุฒุชูุง ุงูุชุงููุฉ. ูุณุงุนุฏ ุงููุดุงุฑูุน ุงูุตุบูุฑุฉ ูุงููุชูุณุทุฉ ุนูู ุงูุชุญูู ุฅูู ุฑูุงุฏ ุณูู." },
                    corporates: { title: "ุงูุดุฑูุงุช ุงููุจุฑู", text: "ูููุคุณุณุงุช ุงูุถุฎูุฉ ุงูุชู ุชุชุนุงูู ูุน ุฃุณูุงู ูุนูุฏุฉุ ูุตูุบ ุณุฑุฏูุงุช ุนูุงูุฉ ุชุฌุงุฑูุฉ ุนุงููุฉ ุงูุชุฃุซูุฑ ูุฃูุธูุฉ ุชุตููู ุชุนุฒุฒ ุงูุณูุทุฉ ูุงูุซูุฉ ูุงูุงุจุชูุงุฑ." },
                    government: { title: "ุงููุทุงุน ุงูุญูููู", text: "ูู ุงูุชุญูู ุงูุฑููู ุฅูู ุฅุดุฑุงู ุงูููุงุทูููุ ูุชุนุงูู ูุน ุงูุฌูุงุช ุงูุญููููุฉ ูุฅูุดุงุก ุญููู ุชูุงุตู ูุงุถุญุฉ ูุณููุฉ ุงููุตูู ูููุงูุจุฉ ูููุณุชูุจู." },
                    productsButton: "ููุชุฌุงุชูุง"
                },
                services: {
                    title: "ุฎุจุฑุงุชูุง",
                    sectionTitle: "ุฎุจุฑุงุชูุง",
                    item1: { title: "ุฅุนุงุฏุฉ ููุฏุณุฉ ุงูุนูููุงุช", text: "ูุญูู ููุนูุฏ ุชุตููู ููุญุณู ุณูุฑ ุนููู ุงูููุงุฌู ููุนููุงุก ูุชุญุณูู ุงูููุงุกุฉ ูุฅุฒุงูุฉ ุงูุนูุงุฆู ูููุงุกูุฉ ุงูุนูููุงุช ูุน ุงุณุชุฑุงุชูุฌูุฉ CRM ุงูุญุฏูุซุฉ." },
                    item2: { title: "ุชุฎุตูุต ุงูููุชุฌุงุช", text: "ูู ุนูู ูุฑูุฏ โ ููุฌุจ ุฃู ูููู ูุธุงู CRM ูุฐูู. ูุฎุตุต ุงูููุตุงุช ูุชูุงุฆู ุงุญุชูุงุฌุงุชู ุจุฏูุฉ ูุน ูุญุฏุงุช ูุชุฏูููุงุช ููุงุฌูุงุช ูุงุจูุฉ ููุชูุณุน ูุน ูุฑููู ูุฃูุฏุงูู." },
                    item3: { title: "ุงููุดุฑ", text: "ูู ุงูุชุฌุฑูุจู ุฅูู ุงูุฅุทูุงู ุงููุงููุ ูุถูู ุฅุทูุงู CRM ุณูุณ. ูุฏูุฑ ุฅุนุฏุงุฏ ุงูุจูุฆุงุช ูุงูุงุฎุชุจุงุฑุงุช ูุชุฃููู ุงููุณุชุฎุฏู ูุฅุฏุงุฑุฉ ุงูุชุบููุฑ ูุถูุงู ุฃูู ุชุนุทู ูุฃุนูู ุงุนุชูุงุฏ." },
                    item4: { title: "ุฏุนู ุงูุนููุงุก", text: "ุจุนุฏ ุงูุฅุทูุงู ูุจูู ูุนู. ูุถูู ูุฑูู ุงูุฏุนู ุงููุฎุตุต ูุฏููุง ุญูุงู ุณุฑูุนุงู ูููุดููุงุช ูุชุญุณููุงู ูุณุชูุฑุงู ููุฃุฏุงุก ูุทูู ุนูุฑ ุงูููุตุฉ โ ุญุชู ูุฑูุฒ ูุฑููู ุนูู ุงูููู." }
                },
                cta: {
                    titleHtml: "ุฑุคูุชู. ุฏูุชูุง.<span>ูุจูููุง ุจุงูุดูู ุงูุตุญูุญ ููุฐ ุงูููู ุงูุฃูู.</span>",
                    text: "ุญูุซ ุชูุชูู ุงูุงุณุชุฑุงุชูุฌูุฉ ุจุงูุฅุจุฏุงุน โ ููุฑุงุฑุงุช ุฃุฐูู ูุชูููุฐ ุฃุณุฑุน ููุชุงุฆุฌ ุฃุฌุฑุฃ.",
                    button: "ุชุญุฏุซ ุฅูู ูุฑูููุง"
                },
                agile: {
                    title: "ูููุฌูุชูุง ุงูุฑุดููุฉ",
                    step1: { title: "ุงูุงุณุชูุดุงู ูุงูุจุญุซ", text: "ูุจู ุฃู ูุจููุ ูุตุบู. ูู ููุงุจูุงุช ุฃุตุญุงุจ ุงููุตูุญุฉ ุฅูู ุชุญููู ุงูุณูู ูุฑุคู ุงููุณุชุฎุฏูุ ููุดู ุงูุชุญุฏูุงุช ุงูุญููููุฉ โ ูุง ุงูุธุงูุฑุฉ ููุท โ ููุญููู ุงูุงูุชุฑุงุถุงุช ุฅูู ุจูุงูุงุช ูุงุจูุฉ ููุชูููุฐ." },
                    step2: { title: "ููุญุฉ ุงูุชุตููู", text: "ููุชูู ุงูุชุตูุฑ ุจุงูุชูููุฐ. ูุญููู ุงูููุงููู ุฅูู ุญููู ููููุณุฉ ุนุจุฑ ุงูููุฐุฌุฉ ุงูุณุฑูุนุฉ ูููุงุญุธุงุช ุฃุตุญุงุจ ุงููุตูุญุฉ ูุงูุชุญุณููุงุช ุงููุชูุฑุฑุฉ." },
                    step3: { title: "ุฏูุฑุงุช ุชุทููุฑ ูุงุฎุชุจุงุฑ ูุชูุฑุฑุฉ", text: "ุฏูุฑุงุช ุชุทููุฑ ุณุฑูุนุฉ ููุฑููุฉ ุจุงุฎุชุจุงุฑุงุช ูุงูุนูุฉ ูุถูุงู ุฃู ูู ุชุญุฏูุซ ูุญูู ุชูุฏูุงู ููููุณุงู." },
                    step4: { title: "ุงูููุชุฌ ุงูุฃููู ุงููุงุจู ููุฅุทูุงู (MVP)", text: "ุณุฑุนุฉ ูุน ุงุณุชุฑุงุชูุฌูุฉ. ุฃุทูู ููุชุฌุงู ุฃุณุงุณูุงู ุฌุงูุฒุงู ููุณูู ูู ุฃุณุงุจูุน. ุชุญูู ูู ุงูุทูุจุ ุงุฌูุน ุจูุงูุงุช ุงููุณุชุฎุฏู ุงูุญููููุฉุ ูุตูู ุจุฏูุฉ ูุจู ุงูุงุณุชุซูุงุฑ ุงููุจูุฑ." },
                    step5: { title: "ุงูุฅูุชุงุฌ", text: "ูุญููู ุงูููุงุฐุฌ ุงููุตูููุฉ ุฅูู ุญููู ูููุฉ ุฌุงูุฒุฉ ููุณูู โ ูุตููุฉ ููุชูุณุน ูุงูุฃูุงู ูุงูุฃุฏุงุก ุงูุณูุณ. ููุชุฌูุ ูุญููุงู ุจุงููุงูู." }
                },
                products: { 
                    title: "ููุชุฌุงุชูุง ุงูุฐููุฉ",
                    viewAll: "ุนุฑุถ ุฌููุน ุงูููุชุฌุงุช",
                    button: "ุชุนุฑู ุนูู ุงููุฒูุฏ",
                    sectionTitle: "ููุชุฌุงุชูุง ุงูุฐููุฉ",
                    // Individual product details
                    magicpalm: {
                        title: "ูุงุณุญ Marln Magicpalm",
                        description: "ุฌูุงุฒ ุจูููุชุฑู ุนุงูู ุงูุฌูุฏุฉ ููู ุงููุฏ ูููุฑ ูุตุงุฏูุฉ ุขููุฉ ููุบุงูุฉ ุจุฏูู ููุณ ููุชุญูู ูู ุงููุตูู ูุงููุฏููุนุงุช ูุงูุชุญูู ูู ุงููููุฉ ุนุจุฑ ุงูุตูุงุนุงุช ุงููุฎุชููุฉ.",
                        tags: ["ุงูุจูููุชุฑู", "ุงููุฏููุนุงุช", "ุงููุงุณุญ ุงูุถูุฆู"],
                        button: "ุงูุฃุฌูุฒุฉ"
                    },
                    crm: {
                        title: "ูุธุงู ุฅุฏุงุฑุฉ ุนูุงูุงุช ุงูุนููุงุก",
                        description: "ุญู ุดุงูู ูุฅุฏุงุฑุฉ ุนูุงูุงุช ุงูุนููุงุก ูุจุณุท ุนูููุงุช ุงููุจูุนุงุช ูุงูุชุณููู ูุฎุฏูุฉ ุงูุนููุงุก ูุชุนุฒูุฒ ุงูููู ุงูุชุฌุงุฑู.",
                        tags: ["ุฅุฏุงุฑุฉ ุนูุงูุงุช ุงูุนููุงุก", "ุงููุจูุนุงุช", "ุงูุนููุงุก"],
                        button: "ุชุนุฑู ุนูู ุงููุฒูุฏ"
                    },
                    lms: {
                        title: "ููุตุฉ ุฅุฏุงุฑุฉ ุงูุชุนูู",
                        description: "ูุธุงู ุฅุฏุงุฑุฉ ุชุนูู ูุชูุฏู ูููุฑ ุชุฌุงุฑุจ ุชุนููููุฉ ุฌุฐุงุจุฉ ูุน ุฅุฏุงุฑุฉ ุดุงููุฉ ููุฏูุฑุงุช ูุงูุชุชุจุน ููุฏุฑุงุช ุงูุชุญููู.",
                        tags: ["ุฅุฏุงุฑุฉ ุงูุชุนูู", "ุงูุชุนูู", "ุงูุชุนููู"],
                        button: "ุชุนุฑู ุนูู ุงููุฒูุฏ"
                    },
                    egs: {
                        title: "ูุธุงู ุงูุญูููุฉ ุงููุคุณุณูุฉ",
                        description: "ูุธุงู ุญูููุฉ ูุคุณุณูุฉ ูููุฑ ุฅุดุฑุงูุงู ุดุงููุงู ูุฅุฏุงุฑุฉ ุงููุฎุงุทุฑ ูุงููุฑุงูุจุฉ ุงูุงูุชุซุงููุฉ ููุนูููุงุช ุงููุคุณุณูุฉ ูุงุณุนุฉ ุงููุทุงู.",
                        tags: ["ุงูุญูููุฉ ุงููุคุณุณูุฉ", "ุงูุญูููุฉ", "ุงููุคุณุณุงุช"],
                        button: "ุชุนุฑู ุนูู ุงููุฒูุฏ"
                    },
                    talkbright: {
                        title: "Marln TalkBright",
                        description: "ููุตุฉ ุซูุฑูุฉ ูุฏุนููุฉ ุจุงูุฐูุงุก ุงูุงุตุทูุงุนู ุชุญูู ุงูุชุญุถูุฑ ูุงูุชุญุงู IELTS ูู ุฎูุงู ุงูุชุบุฐูุฉ ุงูุฑุงุฌุนุฉ ุงูุฐููุฉ ูุงูุชุญููู ูู ุงูููุช ุงููุนูู ููุณุงุฑุงุช ุงูุชุนูู ุงูุดุฎุตูุฉ ูููุงุฑุงุช ุงูุชุญุฏุซ ูุงููุชุงุจุฉ ูุงููุฑุงุกุฉ ูุงูุงุณุชูุงุน.",
                        tags: ["IELTS", "ูุฏุนูู ุจุงูุฐูุงุก ุงูุงุตุทูุงุนู", "ุงูุชุนููู"],
                        button: "ุชุนุฑู ุนูู ุงููุฒูุฏ"
                    }
                },
                why: {
                    title: "ููุงุฐุง ุชุฎุชุงุฑ Marlnุ",
                    subtitle: "ูุญู ูุคูู ุจุฃู ุงูุชููุฒ ุงูุชููู ูุฌุจ ุฃู ูููู ูู ูุชูุงูู ุงูุฌููุน.",
                    item1: { title: "ุฎุจุฑุฉ 10+ ุณููุงุช", text: "ุนูุฏ ูู ุงูุฎุจุฑุฉ ูู ุชุทููุฑ ุงูุจุฑุงูุฌ ูุงูุฐูุงุก ุงูุงุตุทูุงุนู ูุงูุชุญูู ุงูุฑููู." },
                    item2: { title: "ููุฌ ูุฑุฏู", text: "ูุง ุญููู ุนุงูุฉ ููุฌููุน. ูู ุนููู ูุญุตู ุนูู ุญู ูุฎุตุตุ ูุชูุงูู ูุน ุฃูุฏุงูู ูุญุฌูู ูุซูุงูุชู." },
                    item3: { title: "ุงูุชูููููุฌูุง ุงููุชูุฏูุฉ", text: "ูุณุชุฎุฏู ุฃุญุฏุซ ุงูุชูููุงุช ูุงูุฃุฏูุงุช ูุถูุงู ุฃู ุญูููู ูุชุทูุฑุฉ ููุณุชูุจููุฉ." },
                    item4: { title: "ุงูุชูุงูู ุงูุณูุณ", text: "ุญููููุง ุชุชูุงูู ุจุณูููุฉ ูุน ุฃุฏูุงุชู ูุชุฏููุงุช ุนููู ุงูููุฌูุฏุฉ." },
                    item5: { title: "ุงูุงูุชุซุงู", text: "ุงูุงูุชุซุงู ุฌุฒุก ุฃุณุงุณู ูููุณ ูุงุญูุงู." },
                    item6: { title: "ุงููุชุงุฆุฌ ุงููุถูููุฉ", text: "ููุชุฒู ุจุชุญููู ุงููุชุงุฆุฌ ุงููุฑุฌูุฉ ูุถูุงู ุฑุถุง ุงูุนููุงุก." }
                },
                ai: {
                    title: "ุงูุฐูุงุก ุงูุงุตุทูุงุนู ุงูุฐู ูุนูู ุญูุซ ููู",
                    subtitle: "ุณูุงุก ูุงู ุฐูู ูู CRMs ุงูุฐููุฉุ ุฃู UX ุงูุชููููุฉุ ุฃู ุงูุฑุคู ูู ุงูููุช ุงููุนูู โ ูุญู ูุฏูุฌ ุงูุฐูุงุก ุงูุงุตุทูุงุนู ููุชุฃุซูุฑ ุงูุชุฌุงุฑู ุงูุญูููู.",
                    features: {
                        title: "ููุฒุงุช ุงูุฐูุงุก ุงูุงุตุทูุงุนู",
                        subtitle: "ุงูุฐูุงุก ุงูุงุตุทูุงุนู ุงูุฐู ูุนูู ุญูุซ ููู. ุณูุงุก ูุงู ุฐูู ูู CRMs ุงูุฐููุฉุ ุฃู UX ุงูุชููููุฉุ ุฃู ุงูุฑุคู ูู ุงูููุช ุงููุนูู โ ูุญู ูุฏูุฌ ุงูุฐูุงุก ุงูุงุตุทูุงุนู ููุชุฃุซูุฑ ุงูุชุฌุงุฑู ุงูุญูููู.",
                        item1: { title: "ุงูุชุญููู ุงูุชูุจุคู", text: "ุงูุธุฑ ูุง ุณูุญุฏุซ ุจุนุฏ ุฐูู โ ูุจู ุญุฏูุซู. ุฃูุธูุชูุง ุชุญูู ุงูุจูุงูุงุช ุฅูู ุจุตูุฑุฉุ ููุง ูุณุงุนุฏู ุนูู ุงุชุฎุงุฐ ูุฑุงุฑุงุช ูุณุชููุฑุฉ ููุชุทูุนุฉ ูููุณุชูุจู." },
                        item2: { title: "ุงูุฐูุงุก ุงูุงุตุทูุงุนู ุงูุชูููู", text: "ุงูุฐูุงุก ุงูุงุตุทูุงุนู ุงูุฐู ูุชููู ูุน ุงุญุชูุงุฌุงุชู ุงููุชุบูุฑุฉ ููุชุทูุฑ ูุน ุนููู." },
                        item3: { title: "ุงูุฃุชูุชุฉ ุงูุฐููุฉ", text: "ุฃุชูุชุฉ ุงูููุงู ุงููุชูุฑุฑุฉ ูุงููุนูุฏุฉ ูุชุญุฑูุฑ ูุฑููู ููุชุฑููุฒ ุนูู ุงูุนูู ุงูุฅุจุฏุงุนู." }
                    }
                },
                contact: {
                    title: "ุงุจุฏุฃ ูุดุฑูุนู ุงูุขู",
                    subtitle: "ุฃุญุณูุช!",
                    description: "ุณูุชูุงุตู ูุนู ูู ุงูุณุงุนุงุช ุงููุงุฏูุฉ ุฃู ููููู ุฌุฏููุฉ ููุนุฏ ุงูุขู.",
                    scheduleButton: "ุฌุฏููุฉ ููุนุฏ",
                    form: {
                        name: "ุงูุงุณู*",
                        email: "ุงูุจุฑูุฏ ุงูุฅููุชุฑููู*",
                        message: "ุฃุฎุจุฑูุง ุนู ูุดุฑูุนู",
                        submit: "ุฅุฑุณุงู ุงูุฑุณุงูุฉ"
                    },
                    info: {
                        title: "ุฃุฑุณู ููุง ุจุฑูุฏุงู ุฅููุชุฑูููุงู",
                        email: "contact@marlncorp.com",
                        manager: {
                            name: "ุดุงุฏูุฉ ุฒูู ุงูุฏูู",
                            position: "ุงููุฏูุฑ ุงูุชูููุฐู"
                        }
                    }
                },
                footer: {
                    social: "ุฑูุงุจุท ุงูุชูุงุตู ุงูุงุฌุชูุงุนู",
                    linkedin: "ููููุฏ ุฅู",
                    instagram: "ุฅูุณุชุบุฑุงู",
                    email: "ุงูุจุฑูุฏ ุงูุฅููุชุฑููู",
                    certifications: "ุงูุดูุงุฏุงุช",
                    womenOwned: "ูููููุฉ ูููุณุงุก (WBENC)",
                    fda: "ุฅุฏุงุฑุฉ ุงูุบุฐุงุก ูุงูุฏูุงุก 21 CFR ุงูุฌุฒุก 11",
                    gdpr: "ุงูุชุซุงู GDPR",
                    iso9001: "ISO 9001:2015",
                    iso20000: "ISO 20000-1:2018",
                    iso27001: "ISO 27001:2022",
                    offices: "ุงูููุงุชุจ",
                    contactUs: "ุงุชุตู ุจูุง"
                },
                faq: {
                    title: "ุงูุฃุณุฆูุฉ ุงูุดุงุฆุนุฉ",
                    questions: {
                        q1: {
                            question: "ูุง ูู ุงูุฎุฏูุงุช ุงูุชู ุชูุฏููุง Marln Corpุ",
                            answer: "ููุฏู ุญูููุงู ุดุงููุฉ ุชุดูู ุงูุนูุงูุงุช ุงูุชุฌุงุฑูุฉุ ูุชุตููู ูุงุฌูุงุช ุงููุณุชุฎุฏูุ ูุชุทููุฑ ุงูููุชุฌุงุชุ ูุฃูุธูุฉ ุฅุฏุงุฑุฉ ุนูุงูุงุช ุงูุนููุงุกุ ูุงูุชุญูู ุงูุฑููู โ ูุฎุตุตุฉ ููุดุฑูุงุช ุงููุงุดุฆุฉ ูุงููุคุณุณุงุช ูุงูุฌูุงุช ุงูุญููููุฉ."
                        },
                        q2: {
                            question: "ูู ุชุนูููู ููุท ุนูู ุจูุงุก ุนูุงูุงุช ุชุฌุงุฑูุฉ ุฌุฏูุฏุฉุ ุฃู ุฃูุถุงู ุนูู ุฅุนุงุฏุฉ ุงูุชุตูููุ",
                            answer: "ููุงููุง. ูุณุงุนุฏ ูู ุฅูุดุงุก ุนูุงูุงุช ุชุฌุงุฑูุฉ ูู ุงูุตูุฑุ ูููููุง ุฃูุถุงู ูุชุฎุตุตูู ูู ุงูุชุฌุฏูุฏ ุงูุงุณุชุฑุงุชูุฌู ููุนูุงูุงุช ุงูุชุฌุงุฑูุฉ ููุดุฑูุงุช ุงูุชู ุชุชุทูุน ุฅูู ุงูุชุทูุฑ ุฏูู ููุฏุงู ุฌููุฑูุง."
                        },
                        q3: {
                            question: "ููู ุชุฎุชูู ุนูููุฉ ุนูููู ุนู ุงูููุงูุงุช ุงูุฃุฎุฑูุ",
                            answer: "ูู Marln Corpุ ูุจุฏุฃ ูู ูุดุฑูุน ุจุจุญุซ ุนููู ููุญุงุฐุงุฉ ุชุฌุงุฑูุฉ. ูุฌูุน ุจูู ุงูุชูููุฑ ุงูุชุตูููู ูุงููููุฌูุฉ ุงูุฑุดููุฉ ูุงูุฎุจุฑุฉ ุงููุนุชูุฏุฉ ูุชูุฏูู ุญููู ููุณุช ุฅุจุฏุงุนูุฉ ูุญุณุจ โ ุจู ูุงุจูุฉ ููุชูุณุน ูุงุณุชุฑุงุชูุฌูุฉ."
                        },
                        q4: {
                            question: "ูุง ูู ุงูุตูุงุนุงุช ุงูุชู ุชุฎุฏููููุงุ",
                            answer: "ุนูููุง ุนุจุฑ ูุฌุงูุงุช ูุชุนุฏุฏุฉ ุชุดูู ุงูุชูููููุฌูุง ุงููุงููุฉุ ูุชูููููุฌูุง ุงูุชุนูููุ ูุงูุชุฌุงุฑุฉ ุงูุฅููุชุฑูููุฉุ ูุงููุทุงุน ุงูุนุงูุ ูุจุฑุงูุฌ ุงูุฎุฏูุฉ ูุฎุฏูุฉุ ูุงูุนูุงูุงุช ุงูุชุฌุงุฑูุฉ ูููุนูุดุฉ โ ูุน ุชูููู ุนูููุฉ ุนูููุง ูุชุชูุงุณุจ ูุน ุงุญุชูุงุฌุงุช ูู ุตูุงุนุฉ."
                        },
                        q5: {
                            question: "ูู ุชูุฏููู ุงูุฏุนู ูุงูุตูุงูุฉ ุจุนุฏ ุงูุฅุทูุงูุ",
                            answer: "ูุนู. ุณูุงุก ูุงู ุฐูู ูุดุฑ ุฃูุธูุฉ ุฅุฏุงุฑุฉ ุนูุงูุงุช ุงูุนููุงุกุ ุฃู ุฅุฏุงุฑุฉ ุฃุตูู ุงูุนูุงูุฉ ุงูุชุฌุงุฑูุฉุ ุฃู ุฏุนู ุงูุชุตููู ุงููุณุชูุฑ โ ููุฏู ุดุฑุงูุงุช ุทูููุฉ ุงูุฃูุฏ ููุญูุงุธ ุนูู ุฃูุธูุชู ูุนูุงูุชู ุงูุชุฌุงุฑูุฉ ุชุนูู ุจูุง ุนููุจ."
                        },
                        q6: {
                            question: "ูุง ูู ุงูุฌุฏูู ุงูุฒููู ุงููููุฐุฌู ููุดุฑูุนููุ",
                            answer: "ุชุฎุชูู ุงูุฌุฏุงูู ุงูุฒูููุฉ ูููุดุงุฑูุน ุจูุงุกู ุนูู ุงููุทุงู. ุนูู ุณุจูู ุงููุซุงูุ ูุดุฑูุน ุงููููุฉ ุงูุชุฌุงุฑูุฉ ูุณุชุบุฑู ุนุงุฏุฉู 3-5 ุฃุณุงุจูุนุ ุจูููุง ุชูููุฐ ุฃูุธูุฉ ุฅุฏุงุฑุฉ ุนูุงูุงุช ุงูุนููุงุก ุฃู ุฅุทูุงู ุงูููุชุฌุงุช ูููู ุฃู ูุณุชุบุฑู 6-12 ุฃุณุจูุนุงู. ูุนูู ูุนู ูุฅูุดุงุก ุฌุฏูู ุฒููู ูุงูุนู."
                        },
                        q7: {
                            question: "ููู ูุจุฏุฃุ",
                            answer: "ุจุณูุท โ ููุท ุชูุงุตู ูุนูุง ูุณูููู ูุฑูููุง ุจุฌุฏููุฉ ููุงููุฉ ุงูุชุดุงู ูููู ุฃูุฏุงูู ูุชุญุฏูุงุชู ูููู ูููููุง ุชูุฏูู ุงูุญู ุงูููุงุณุจ."
                        }
                    }
                }
            },
            
            // About Us Page Specific
            about: {
                hero: {
                    title: "ูู ูุญู",
                    subtitle: "ุดุฑูุฉ Marln Corp - ุดุฑููู ุงูููุซูู ูู ุงูุชุญูู ุงูุฑููู ูุงูุงุจุชูุงุฑ",
                    description: "ูุญู ุดุฑูุฉ ุงุณุชุดุงุฑุงุช ุชูููุฉ ุฑุงุฆุฏุฉ ูุชุฎุตุตุฉ ูู ุชุทููุฑ ุงูุจุฑุงูุฌ ูุงูุฐูุงุก ุงูุงุตุทูุงุนู ูุงูุชุญูู ุงูุฑููู. ูููุชูุง ูู ุชูููู ุงูุดุฑูุงุช ูู ุฌููุน ุงูุฃุญุฌุงู ูุชุญููู ุฅููุงูุงุชูุง ุงููุงููุฉ ูู ุฎูุงู ุญููู ุชูููุฉ ูุจุชูุฑุฉ ููุฎุตุตุฉ."
                },
                story: {
                    title: "ูุตุชูุง",
                    text: "ุชุฌุณุฏ ูููุฉ \"Marln\" ุฑูุงูุฉ ูููุฉ ุชุชูุญูุฑ ุญูู ุงูุตูุงุช ุงูุชู ุชุนูุณ ุงูุชุฒุงู ุงูุดุฑูุฉ ุจุชูููู ุงููุณุงุก ูู ุงูุชูููููุฌูุง ูุชุนุฒูุฒ ุจูุฆุฉ ูุชููุนุฉ ูุดุงููุฉ.",
                    marlnLetters: {
                        m: {
                            title: "ุงูุชูุฌูู",
                            description: "M ุชุนูู ุงูุชูุฌููุ ููุง ูุจุฑุฒ ุชูุงูู Marln ูู ุฏุนู ูุชูุฌูู ุงููุณุงุก ูู ุฑุญูุงุชูู ุงูููููุฉ."
                        },
                        a: {
                            title: "ุงูููุงุตุฑุฉ",
                            description: "A ุชูุซู ุงูููุงุตุฑุฉุ ุญูุซ ุชุฏุงูุน Marln ุจูุดุงุท ุนู ุชูุฏู ุงููุณุงุก ูู ุงูุชูููููุฌูุง."
                        },
                        r: {
                            title: "ุงููุฑููุฉ",
                            description: "R ุชุนูู ุงููุฑููุฉุ ููุง ูุนูุณ ุงูููุฉ ูุงูุนุฒููุฉ ูููุณุงุก ุงูููุงุชู ูุชูููู ูู ุชุญุฏูุงุช ุงููุดูุฏ ุงูุชูููููุฌู."
                        },
                        l: {
                            title: "ุงูููุงุฏุฉ",
                            description: "L ุชุนูู ุงูููุงุฏุฉุ ููุง ูุคูุฏ ุนูู ุฃูููุฉ ุงูููุงุฏุฉ ุงููุณุงุฆูุฉ ุฏุงุฎู ุงูููุธูุฉ ููู ุงููุทุงุน ุงูุชูููููุฌู."
                        },
                        n: {
                            title: "ุงูุฑุนุงูุฉ",
                            description: "N ุชุฌุณุฏ ุงูุฑุนุงูุฉุ ููุง ููุซู ุงูุชุฒุงู Marln ุจุฅูุดุงุก ูุฌุชูุน ุฏุงุนู ูููุณุงุก ูู ุงูุชูููููุฌูุง."
                        }
                    },
                    stats: "ุงููููุ ูุฎุฏู ุนููุงุก ูู ุฃูุซุฑ ูู 10 ุฏููุ ูุน ุฃูุซุฑ ูู 50 ูุดุฑ ูุคุณุณู ููุฑูู ูู ุฃูุซุฑ ูู 200 ุฎุจูุฑ. ุงูุชุฒุงููุง ุจุงูุงุจุชูุงุฑ ูุงูุฌูุฏุฉ ูุชูููู ุงููุณุงุก ุฌุนููุง ุดุฑููุงู ููุซููุงู ููุดุฑูุงุช ูู ุฌููุน ุฃูุญุงุก ุงูุนุงูู ูุน ุชุนุฒูุฒ ูุถูุฉ ุงููุณุงุก ูู ุงูุชูููููุฌูุง."
                },
                mission: {
                    title: "ูููุชูุง",
                    text1: "ูู Marlnุ ูููุชูุง ูู ุชูููู ุงูุดุฑูุงุช ุจุญููู ุชูููููุฌูุฉ ูุจุชูุฑุฉ ุชุฑูุฒ ุนูู ุงูุฅูุณุงู ุชุฏูุน ุงูุชุญูู ุงูุฑููู ูุชุทูู ุงูุนูุงู ููููู.",
                    text2: "ูู ุฎูุงู ููุฌูุง ุงูุงุณุชุดุงุฑู ุงููุฑุชูุฒ ุนูู ุงูุตูุงุนุฉุ ูุณุงุนุฏ ุงูุนููุงุก ุนูู ุญู ุชุญุฏูุงุช ุงูููู ูุน ุงูุงุณุชุนุฏุงุฏ ููุฑุต ุงูุบุฏ."
                },
                sixBoxes: {
                    title: "ููุงุฐุง ุชุฎุชุงุฑ Marlnุ",
                    item1: { title: "ุฎุจุฑุฉ 10+ ุณููุงุช", text: "ุนูุฏ ูู ุงูุฎุจุฑุฉ ูู ุชุทููุฑ ุงูุจุฑุงูุฌ ูุงูุฐูุงุก ุงูุงุตุทูุงุนู ูุงูุชุญูู ุงูุฑููู." },
                    item2: { title: "ููุฌ ูุฑุฏู", text: "ูุง ุญููู ุนุงูุฉ ููุฌููุน. ูู ุนููู ูุญุตู ุนูู ุญู ูุฎุตุตุ ูุชูุงูู ูุน ุฃูุฏุงูู ูุญุฌูู ูุซูุงูุชู." },
                    item3: { title: "ุงูุชูููููุฌูุง ุงููุชูุฏูุฉ", text: "ูุณุชุฎุฏู ุฃุญุฏุซ ุงูุชูููุงุช ูุงูุฃุฏูุงุช ูุถูุงู ุฃู ุญูููู ูุชุทูุฑุฉ ููุณุชูุจููุฉ." },
                    item4: { title: "ุงูุชูุงูู ุงูุณูุณ", text: "ุญููููุง ุชุชูุงูู ุจุณูููุฉ ูุน ุฃุฏูุงุชู ูุชุฏููุงุช ุนููู ุงูููุฌูุฏุฉ." },
                    item5: { title: "ุงูุงูุชุซุงู", text: "ุงูุงูุชุซุงู ุฌุฒุก ุฃุณุงุณู ูููุณ ูุงุญูุงู." },
                    item6: { title: "ุงููุชุงุฆุฌ ุงููุถูููุฉ", text: "ููุชุฒู ุจุชุญููู ุงููุชุงุฆุฌ ุงููุฑุฌูุฉ ูุถูุงู ุฑุถุง ุงูุนููุงุก." }
                },
                legalCompliance: {
                    title: "ุงูุงูุชุซุงู ุงููุงูููู ูุงูุชูุธููู",
                    subtitle: "ูุถูู ุฃู ุนููู ููุชุฒู ุจุฌููุน ุงููุชุทูุจุงุช ุงููุงููููุฉ ูุงูุชูุธูููุฉ ุงููุนููู ุจูุง.",
                    description: "ููุฏู ุฎุฏูุงุช ุดุงููุฉ ููุงูุชุซุงู ุงููุงูููู ูุงูุชูุธููู ูุถูุงู ุฃู ุนููู ูุนูู ุถูู ุงูุฅุทุงุฑ ุงููุงูููู ุงูุตุญูุญ."
                }
            },
            
            // Industry Page Specific
            industry: {
                title: "ุญููู ุงูุตูุงุนุฉ",
                automotive: {
                    title: "ุงูุณูุงุฑุงุช",
                    desc: "ุชุชุทูุฑ ุตูุงุนุฉ ุงูุณูุงุฑุงุช ุจุงุณุชูุฑุงุฑ ูุน ุธููุฑ ุชูููุงุช ุฌุฏูุฏุฉ ูุซู ุงููุฑูุจุงุช ุงููุณุชููุฉ ูุงููุฑูุจุงุช ุงูููุฑุจุงุฆูุฉ ูุฃูุธูุฉ ุงููุณุงุนุฏุฉ ุงููุชูุฏูุฉ ููุณุงุฆู (ADAS)."
                },
                banking: {
                    title: "ุงูุฎุฏูุงุช ุงููุตุฑููุฉ",
                    desc: "ุญููู ุงูุชูุธูู ุงูุชููู ุงููุตุฑูู ูููู ุญุงุณู ูู ุงูุตูุงุนุฉ ุงููุตุฑููุฉ. ุชุญุชุงุฌ ุงูุจููู ุฅูู ุงูุฃุดุฎุงุต ุงูููุงุณุจูู ูุชุทููุฑ ูุชูููุฐ ูุตูุงูุฉ ุฃูุธูุชูุง ุงูุชูููุฉ."
                },
                consumerGoods: {
                    title: "ุงูุณูุน ูุงูุฎุฏูุงุช ุงูุงุณุชููุงููุฉ",
                    desc: "ูููู ูุดุฑูุฉ Marln Corp ูุณุงุนุฏุฉ ุดุฑูุงุช CGS ูู ุงูุนุซูุฑ ุนูู ูุญุชุฑููู ูุคูููู ุจูุฐู ุงูููุงุฑุงุช ุงููุทููุจุฉ."
                },
                communications: {
                    title: "ุงูุงุชุตุงูุงุช ูุงูุฅุนูุงู",
                    desc: "ุฅูุชุงุฌ ูุชุญุฑูุฑ ุงูููุฏูู: ูุน ุชุฒุงูุฏ ุงูุทูุจ ุนูู ูุญุชูู ุงูููุฏูู ุนุจุฑ ููุตุงุช ูุฎุชููุฉุ ุฃุตุจุญุช ููุงุฑุงุช ุฅูุชุงุฌ ูุชุญุฑูุฑ ุงูููุฏูู ุฐุงุช ูููุฉ ูุชุฒุงูุฏุฉ."
                },
                healthcare: {
                    title: "ุงูุฑุนุงูุฉ ุงูุตุญูุฉ",
                    desc: "ุงูุณุฌูุงุช ุงูุตุญูุฉ ุงูุฅููุชุฑูููุฉ (EHR) ูุชูููููุฌูุง ุงููุนูููุงุช ุงูุตุญูุฉ (HIT): ุงูููุงุกุฉ ูู ุฃูุธูุฉ EHR ูุฃุฏูุงุช HIT ุถุฑูุฑูุฉ ูุฅุฏุงุฑุฉ ุณุฌูุงุช ุงููุฑุถู ูุถูุงู ุงูุงูุชุซุงู."
                },
                hiTech: {
                    title: "ุงูุชูููุฉ ุงูุนุงููุฉ",
                    desc: "ุชุนุชูุฏ ุดุฑูุงุช ุงูุชูููุฉ ุงูุนุงููุฉ ุจุดูู ูุจูุฑ ุนูู ุงููุญุชุฑููู ุงูููุฑุฉ ุฐูู ุงูุฎุจุฑุฉ ูู ูุฌุงูุงุช ุชูููุฉ ูุฎุชููุฉ ูุชุทููุฑ ูุชูููุฐ ูุตูุงูุฉ ุงูููุชุฌุงุช ูุงูุฎุฏูุงุช ุงููุจุชูุฑุฉ."
                },
                lifeSciences: {
                    title: "ุนููู ุงูุญูุงุฉ",
                    desc: "ุชุนุชูุฏ ุดุฑูุงุช ุนููู ุงูุญูุงุฉ ุนูู ูุฌููุนุฉ ูุชููุนุฉ ูู ุงููุญุชุฑููู ุงูููุฑุฉ ุฐูู ุงูุฎุจุฑุฉ ูู ูุฌุงูุงุช ุชูููุฉ ูุฎุชููุฉ ูุฅุญุฑุงุฒ ุชูุฏู ูู ุงูุทุจ ูุงูุชูููููุฌูุง ุงูุญูููุฉ."
                },
                publicService: {
                    title: "ุงูุฎุฏูุฉ ุงูุนุงูุฉ",
                    desc: "ุงููุทุงุน ุงูุนุงู ูุนุชูุฏ ุจุดูู ูุชุฒุงูุฏ ุนูู ุงูุชูููููุฌูุง ูุชุญููู ุฃูุฏุงููุ ููุฐุง ุงูุทูุจ ุนูู ุงูููุงุฑุงุช ุงูุชูููุฉ ุณูููู ููุท ูู ุงูุณููุงุช ุงููุงุฏูุฉ."
                },
                retail: {
                    title: "ุงูุชุฌุฒุฆุฉ",
                    desc: "ุชุนุชูุฏ ุดุฑูุงุช ุงูุชุฌุฒุฆุฉ ูู ุฌููุน ุงูุฃุญุฌุงู ุนูู ูุฌููุนุฉ ูุชููุนุฉ ูู ุงูููุงุฑุงุช ุงูุชูููุฉ: ุฃูุธูุฉ ููุงุท ุงูุจูุน (POS) ูุฅุฏุงุฑุฉ ุงููุฎุฒูู ูุฅุฏุงุฑุฉ ุณูุณูุฉ ุงูุชูุฑูุฏ."
                },
                travel: {
                    title: "ุงูุณูุฑ ูุงูุณูุงุญุฉ",
                    desc: "ุชุชุทูุจ ุตูุงุนุฉ ุงูุณูุฑ ูุงูุณูุงุญุฉ ูุฌููุนุฉ ูุชููุนุฉ ูู ุงูููุงุฑุงุช ุงูุชูููุฉ ูุฅุฏุงุฑุฉ ุงูุญุฌูุฒุงุช ูุฃูุธูุฉ ุฅุฏุงุฑุฉ ุงูุนููุงุก ูุงูุชุญูููุงุช."
                }
            },
            
            // AI Powered Consulting Page Specific
            aiConsulting: {
                hero: {
                    title: "ุชูููู ุนููู ุจุฎุฏูุงุช ุงูุงุณุชุดุงุฑุงุช ุงููุฏุนููุฉ ุจุงูุฐูุงุก ุงูุงุตุทูุงุนู"
                },
                services: {
                    strategicPlanning: {
                        title: "ุงูุชุฎุทูุท ุงูุงุณุชุฑุงุชูุฌู ููุฃุนูุงู",
                        description: "ูู Marln Corpุ ูุคูู ุจุฃู ูู ูุดุฑูุน ูุงุฌุญ ูุจุฏุฃ ุจุฎุทุฉ ุตูุจุฉ. ุณูุนูู ูุฑูู ุงูุฎุจุฑุงุก ูุฏููุง ุนู ูุซุจ ูุนู ูุชุทููุฑ ุงุณุชุฑุงุชูุฌูุฉ ุฃุนูุงู ุดุงููุฉ ูุตููุฉ ุฎุตูุตุงู ูุงุญุชูุงุฌุงุชู. ูุฑูุฒ ุนูู ุชุญููู ุงูุณูู ูุงููููู ุงูุชูุงูุณู ูุงูุชุฎุทูุท ุงููุงูู ูุถูุงู ุฃู ุนููู ููุนุฏ ูููุฌุงุญ. ุฏุนูุง ูุณุงุนุฏู ูู ุงูุชููู ูู ูุณุงุฑู ูุญู ุงูููู ูุงูุงุณุชุฏุงูุฉ."
                    },
                    operationalEfficiency: {
                        title: "ุชุญุณูู ุงูููุงุกุฉ ุงูุชุดุบูููุฉ",
                        description: "ุชุญุณูู ุงูููุงุกุฉ ุงูุชุดุบูููุฉ ุฃูุฑ ุจุงูุบ ุงูุฃูููุฉ ูุฃู ุนูู ูุชุทูุน ุฅูู ุชุนุฒูุฒ ุงูุฅูุชุงุฌูุฉ ูุชูููู ุงูุชูุงููู. ูู Marln Corpุ ูููู ุนูููุงุชู ุงูุญุงููุฉ ููุญุฏุฏ ูุฌุงูุงุช ุงูุชุญุณูู. ูุทุจู ูุณุชุดุงุฑููุง ุงุณุชุฑุงุชูุฌูุงุช ุชุจุณุท ุงูุนูููุงุช ูุชุญุณู ุงูููุงุฑุฏ ูุชูุนุฒุฒ ูู ุงูููุงูุฉ ุฃุฑุจุงุญู. ุงูุชุดู ููู ูููููุง ุชุญููู ุนูููุงุชู ูุชุญููู ููุงุกุฉ ูุฑุจุญูุฉ ุฃูุจุฑ."
                    },
                    financialManagement: {
                        title: "ุงุณุชุดุงุฑุงุช ุงูุฅุฏุงุฑุฉ ุงููุงููุฉ",
                        description: "ุงูุฅุฏุงุฑุฉ ุงููุงููุฉ ุงููุนุงูุฉ ูู ููุชุงุญ ุงูุนูู ุงููุฒุฏูุฑ. ุชูุฏู Marln Corp ุฎุฏูุงุช ุงุณุชุดุงุฑูุฉ ูุงููุฉ ูุชุฎุตุตุฉ ูุตููุฉ ููุณุงุนุฏุชู ูู ุฅุฏุงุฑุฉ ุฃููุงูู ุจุดูู ุฃูุถูุ ูู ุงูููุฒุงููุฉ ูุงูุชููุนุงุช ุฅูู ุฅุฏุงุฑุฉ ุงูุชุฏูู ุงูููุฏู. ุณููุฏู ูู ูุณุชุดุงุฑููุง ุฐูู ุงูุฎุจุฑุฉ ุงูุฃุฏูุงุช ูุงูุฑุคู ุงููุงุฒูุฉ ูุงุชุฎุงุฐ ูุฑุงุฑุงุช ูุงููุฉ ูุณุชููุฑุฉ ุชุฏูุน ุงูููู ูุงูุงุณุชุฏุงูุฉ."
                    },
                    marketingStrategy: {
                        title: "ุชุทููุฑ ุงุณุชุฑุงุชูุฌูุฉ ุงูุชุณููู",
                        description: "ูู ุงูุณูู ุงูุชูุงูุณู ุงููููุ ุงูุชูุงู ุงุณุชุฑุงุชูุฌูุฉ ุชุณููู ูููุฉ ุฃูุฑ ุถุฑูุฑู. ูู Marln Corpุ ูุชุฎุตุต ูู ุชุทููุฑ ุงุณุชุฑุงุชูุฌูุงุช ุชุณููู ูุฎุตุตุฉ ุชุชุฑุฏุฏ ูุน ุฌูููุฑู ุงููุณุชูุฏู. ูุฌุฑู ูุฑูููุง ุจุญุซุงู ูุชุญูููุงู ุดุงููุงู ููุณูู ูุฅูุดุงุก ุญููุงุช ุชุฏูุน ุงููุดุงุฑูุฉ ูุงูุชุญููู. ุฏุนูุง ูุณุงุนุฏู ูู ุฑูุน ุนูุงูุชู ุงูุชุฌุงุฑูุฉ ูุงููุตูู ุฅูู ุฃูุฏุงู ุนููู."
                    },
                    humanResources: {
                        title: "ุญููู ุงูููุงุฑุฏ ุงูุจุดุฑูุฉ",
                        description: "ุฅุฏุงุฑุฉ ุงูููุงุฑุฏ ุงูุจุดุฑูุฉ ุจูุนุงููุฉ ุฃูุฑ ุญููู ูุฃู ููุธูุฉ. ุชูุฏู Marln Corp ุฎุฏูุงุช ุงุณุชุดุงุฑูุฉ ุดุงููุฉ ููููุงุฑุฏ ุงูุจุดุฑูุฉุ ุจูุง ูู ุฐูู ุงูุชุณุงุจ ุงูููุงูุจ ูุชุทููุฑ ุงูููุธููู ูุฅุฏุงุฑุฉ ุงูุงูุชุซุงู. ูุฑูุฒ ููุฌูุง ุนูู ุฎูู ุซูุงูุฉ ุนูู ุฅูุฌุงุจูุฉ ูุชุนุฒูุฒ ูุดุงุฑูุฉ ุงูููุธููู ูุถูุงู ุฃู ูุฑููู ูุชุญูุณ ูููุชุฌ. ุชุนุงูู ูุนูุง ููุญุตูู ุนูู ุญููู ูุนุงูุฉ ููููุงุฑุฏ ุงูุจุดุฑูุฉ."
                    },
                    technologyIntegration: {
                        title: "ุฎุฏูุงุช ุชูุงูู ุงูุชูููููุฌูุง",
                        description: "ูู ุนุงูู ุฑููู ูุชุฒุงูุฏุ ุฏูุฌ ุงูุชูููููุฌูุง ูู ุนููู ุฃูุฑ ุจุงูุบ ุงูุฃูููุฉ ูููุฌุงุญ. ุชูุฏู Marln Corp ุฎุฏูุงุช ุชูุงูู ุงูุชูููููุฌูุง ุงูุชู ุชุณุงุนุฏู ูู ุงูุงุณุชูุงุฏุฉ ูู ุฃุญุฏุซ ุงูุฃุฏูุงุช ูุงูุจุฑุงูุฌ ูุชุญุณูู ุงูููุงุกุฉ ูุชุนุฒูุฒ ุชุฌุฑุจุฉ ุงูุนููุงุก. ุณูุฑุดุฏู ูุณุชุดุงุฑููุง ุฎูุงู ุนูููุฉ ุงุฎุชูุงุฑ ูุชูููุฐ ุญููู ุงูุชูููููุฌูุง ุงูููุงุณุจุฉ ูุงุญุชูุงุฌุงุช ุนููู."
                    }
                },
                legalCompliance: {
                    title: "ุงููุงููููุฉ ูุงูุงูุชุซุงู",
                    regulatoryCompliance: {
                        title: "ุชูููู ุงูุงูุชุซุงู ุงูุชูุธููู",
                        complianceAudits: "ุชุฏููู ุงูุงูุชุซุงู: ุฅุฌุฑุงุก ุชุฏููู ุดุงูู ูุชูููู ุงูุงูุชุซุงู ุงูุญุงูู ููููุงููู ูุงูููุงุฆุญ ูุงููุนุงููุฑ ุงูุตูุงุนูุฉ ุงููุนููู ุจูุง.",
                        gapAnalysis: "ุชุญููู ุงููุฌูุงุช: ุชุญุฏูุฏ ุงููุฌูุงุช ูู ุฃุทุฑ ุงูุงูุชุซุงู ุงูููุฌูุฏุฉ ูุชูุฏูู ุชูุตูุงุช ููุฅุตูุงุญ."
                    },
                    policyDevelopment: {
                        title: "ุชุทููุฑ ูุชูููุฐ ุงูุณูุงุณุงุช",
                        policyFramework: "ุฅูุดุงุก ุฅุทุงุฑ ุงูุณูุงุณุงุช: ุชุทููุฑ ุณูุงุณุงุช ูุฅุฌุฑุงุกุงุช ุงูุชุซุงู ุดุงููุฉ ูุตููุฉ ุฎุตูุตุงู ูุงุญุชูุงุฌุงุช ุงูููุธูุฉ ููุชุทูุจุงุชูุง ุงูุชูุธูููุฉ.",
                        policyImplementation: "ุฏุนู ุชูููุฐ ุงูุณูุงุณุงุช: ุงููุณุงุนุฏุฉ ูู ุฅุทูุงู ูุชูุงุตู ุงูุณูุงุณุงุช ุงูุฌุฏูุฏุฉ ูุถูุงู ุงูููู ูุงูุงูุชุฒุงู ูู ุฌููุน ุฃูุญุงุก ุงูููุธูุฉ."
                    },
                    trainingAwareness: {
                        title: "ุจุฑุงูุฌ ุงูุชุฏุฑูุจ ูุงูุชูุนูุฉ",
                        complianceTraining: "ุชุฏุฑูุจ ุงูุงูุชุซุงู: ุชุตููู ูุชูุฏูู ุจุฑุงูุฌ ุชุฏุฑูุจ ููููุธููู ุญูู ุงูููุงุฆุญ ุฐุงุช ุงูุตูุฉ ูุณูุงุณุงุช ุงูุงูุชุซุงู ูุงููุนุงููุฑ ุงูุฃุฎูุงููุฉ.",
                        awarenessCampaigns: "ุญููุงุช ุงูุชูุนูุฉ: ุชูููุฐ ูุจุงุฏุฑุงุช ุชูุนูุฉ ูุณุชูุฑุฉ ูุชุนุฒูุฒ ุซูุงูุฉ ุงูุงูุชุซุงู ุฏุงุฎู ุงูููุธูุฉ."
                    },
                    riskManagement: {
                        title: "ุฅุฏุงุฑุฉ ุงููุฎุงุทุฑ ูุงูุชุฎููู",
                        riskAssessment: "ุชูููู ุงููุฎุงุทุฑ: ุฅุฌุฑุงุก ุชููููุงุช ุงููุฎุงุทุฑ ูุชุญุฏูุฏ ุงููุฎุงุทุฑ ุงููุงููููุฉ ูุงูุงูุชุซุงููุฉ ุงููุญุชููุฉ ูุชุทููุฑ ุงุณุชุฑุงุชูุฌูุงุช ุงูุชุฎููู.",
                        incidentResponse: "ุชุฎุทูุท ุงูุงุณุชุฌุงุจุฉ ููุญูุงุฏุซ: ุฅูุดุงุก ุฎุทุท ุงุณุชุฌุงุจุฉ ููุญูุงุฏุซ ููุงูุชูุงูุงุช ุงููุญุชููุฉ ููุงูุชุซุงูุ ูุน ุชุญุฏูุฏ ุฎุทูุงุช ุงูุชุญููู ูุงูุฅุจูุงุบ ูุงูุฅุตูุงุญ."
                    },
                    contractManagement: {
                        title: "ุฅุฏุงุฑุฉ ุงูุนููุฏ",
                        contractReview: "ูุฑุงุฌุนุฉ ุงูุนููุฏ ูุงูุชูุงูุถ: ุชูุฏูู ุฎุฏูุงุช ููุฑุงุฌุนุฉ ูุตูุงุบุฉ ูุงูุชูุงูุถ ุจุดุฃู ุงูุนููุฏ ูุถูุงู ุงูุงูุชุซุงู ุงููุงูููู ูุญูุงูุฉ ุงููุตุงูุญ ุงูุชูุธูููุฉ.",
                        contractSystems: "ุฃูุธูุฉ ุฅุฏุงุฑุฉ ุงูุนููุฏ: ุชูููุฐ ูุฅุฏุงุฑุฉ ุฃูุธูุฉ ูุชุชุจุน ูุฅุฏุงุฑุฉ ุงูุงูุชุฒุงูุงุช ุงูุชุนุงูุฏูุฉ ูุงูุงูุชุซุงู."
                    },
                    dataProtection: {
                        title: "ุงูุชุซุงู ุญูุงูุฉ ุงูุจูุงูุงุช ูุงูุฎุตูุตูุฉ",
                        dataPrivacy: "ุชููููุงุช ุฎุตูุตูุฉ ุงูุจูุงูุงุช: ุชูููู ุงูุงูุชุซุงู ูููุงููู ุญูุงูุฉ ุงูุจูุงูุงุช (ูุซู GDPR ูCCPA) ูุชูุฏูู ุฅุฑุดุงุฏุงุช ุญูู ููุงุฑุณุงุช ุงูุชุนุงูู ูุน ุงูุจูุงูุงุช.",
                        privacyPolicy: "ุชุทููุฑ ุณูุงุณุฉ ุงูุฎุตูุตูุฉ: ุฅูุดุงุก ุฃู ุชุญุฏูุซ ุณูุงุณุงุช ุงูุฎุตูุตูุฉ ูุถูุงู ุงูุดูุงููุฉ ูุงูุงูุชุซุงู ูููุงุฆุญ ุงููุนููู ุจูุง."
                    },
                    monitoringReporting: {
                        title: "ุงููุฑุงูุจุฉ ูุงูุฅุจูุงุบ",
                        complianceMonitoring: "ุจุฑุงูุฌ ูุฑุงูุจุฉ ุงูุงูุชุซุงู: ุฅูุดุงุก ุฃูุธูุฉ ูุฑุงูุจุฉ ูุถูุงู ุงูุงูุชุซุงู ุงููุณุชูุฑ ูููุชุทูุจุงุช ุงูุชูุธูููุฉ ูุงูุณูุงุณุงุช ุงูุฏุงุฎููุฉ.",
                        reportingDocumentation: "ุงูุฅุจูุงุบ ูุงูุชูุซูู: ุงููุณุงุนุฏุฉ ูู ุฅุนุฏุงุฏ ุงูุชูุงุฑูุฑ ููููุฆุงุช ุงูุชูุธูููุฉ ูุงูุญูุงุธ ุนูู ุชูุซูู ุดุงูู ูุฃูุดุทุฉ ุงูุงูุชุซุงู."
                    },
                    legalResearchAdvisory: {
                        title: "ุฎุฏูุงุช ุงูุจุญุซ ุงููุงูููู ูุงูุงุณุชุดุงุฑูุฉ",
                        legalResearch: "ุงูุจุญุซ ุงููุงูููู: ุฅุฌุฑุงุก ุจุญุซ ุญูู ุงูููุงููู ูุงูููุงุฆุญ ูุงูุณูุงุจู ุงููุถุงุฆูุฉ ุฐุงุช ุงูุตูุฉ ูุชูุฏูู ุฅุฑุดุงุฏุงุช ูุงููููุฉ ูุณุชููุฑุฉ.",
                        advisoryServices: "ุงูุฎุฏูุงุช ุงูุงุณุชุดุงุฑูุฉ: ุชูุฏูู ุงุณุชุดุงุฑุงุช ูุงููููุฉ ูุณุชูุฑุฉ ูุฏุนู ูุถูุงู ุงูุงูุชุซุงู ูููุงุฆุญ ุงููุชุบูุฑุฉ ููุนุงูุฌุฉ ุงููุถุงูุง ุงููุงููููุฉ ุงููุญุฏุฏุฉ."
                    },
                    thirdPartyRisk: {
                        title: "ุฅุฏุงุฑุฉ ูุฎุงุทุฑ ุงูุทุฑู ุงูุซุงูุซ",
                        vendorCompliance: "ุชููููุงุช ุงูุชุซุงู ุงูููุฑุฏูู: ุชูููู ููุฑุฏู ุงูุทุฑู ุงูุซุงูุซ ูุงูุดุฑูุงุก ููุงูุชุซุงู ูููุนุงููุฑ ุงููุงููููุฉ ูุงูุชูุธูููุฉ.",
                        dueDiligence: "ุนูููุงุช ุงูุนูุงูุฉ ุงููุงุฌุจุฉ: ุชูููุฐ ุนูููุงุช ุงูุนูุงูุฉ ุงููุงุฌุจุฉ ูุชูููู ุงููุฎุงุทุฑ ุงููุงููููุฉ ุงููุญุชููุฉ ุงููุฑุชุจุทุฉ ุจุนูุงูุงุช ุงูุทุฑู ุงูุซุงูุซ."
                    }
                }
            },
            
            // Engineering Services Page Specific
            engineering: {
                hero: {
                    title: "ุญููู ูุฎุฏูุงุช ุงูููุฏุณุฉ",
                    description: "ุฎุฏูุงุช ููุฏุณูุฉ ุดุงููุฉ ุชุญูู ุฃููุงุฑู ุฅูู ุญููู ุชูููุฉ ูุจุชูุฑุฉ ููุงุจูุฉ ููุชุทููุฑ ููููุฉ. ูู ุงูููููู ุฅูู ุงููุดุฑุ ููุฏู ุงูุชููุฒ ูู ูู ูุดุฑูุน."
                },
                solutions: {
                    title: "ุญููููุง",
                    tailoredDevelopment: {
                        title: "ุชุทููุฑ ุงูุชุทุจููุงุช ุงููุฎุตุตุฉ",
                        description: "ุชุตููู ุงูุชุทุจููุงุช ุจุฏูุฉ ูุงุญุชูุงุฌุงุช ุนูููุ ุชููุฒ ุญููููุง ุนูุงูุชู ุงูุชุฌุงุฑูุฉ ูู ุงููุดูุฏ ุงูุฑูููุ ููุง ูุถูู ุชุฃุซูุฑุงู ุฏุงุฆูุงู ูุน ุงูุชููุฒ ุงููุฎุตุต."
                    },
                    crossPlatform: {
                        title: "ุชุทููุฑ ุชุทุจููุงุช ุงููุงุชู ุงููุญููู ุนุจุฑ ุงูููุตุงุช",
                        description: "ูุณุน ูุทุงู ูุตููู ูุน ุชุทุจููุงุชูุง ุนุจุฑ ุงูููุตุงุชุ ุงููุตููุฉ ููุดุงุฑูุฉ ุฌูููุฑ ุฃูุณุน. ูุฏู ุชุฌุงุฑุจ ุขุณุฑุฉ ุนุจุฑ ุงูุฃุฌูุฒุฉ ูุงูููุตุงุช ููููู ุงููุชุณุงุฑุน."
                    },
                    strategicPlanning: {
                        title: "ุงูุชุฎุทูุท ุงูุงุณุชุฑุงุชูุฌู ููุฃุนูุงู",
                        description: "ูู Marln Corpุ ูุคูู ุจุฃู ูู ูุดุฑูุน ูุงุฌุญ ูุจุฏุฃ ุจุฎุทุฉ ุตูุจุฉ. ุณูุนูู ูุฑูู ุงูุฎุจุฑุงุก ูุฏููุง ุนู ูุซุจ ูุนู ูุชุทููุฑ ุงุณุชุฑุงุชูุฌูุฉ ุฃุนูุงู ุดุงููุฉ ูุตููุฉ ุฎุตูุตุงู ูุงุญุชูุงุฌุงุชู. ูุฑูุฒ ุนูู ุชุญููู ุงูุณูู ูุงููููู ุงูุชูุงูุณู ูุงูุชุฎุทูุท ุงููุงูู ูุถูุงู ุฃู ุนููู ููุนุฏ ูููุฌุงุญ. ุฏุนูุง ูุณุงุนุฏู ูู ุงูุชููู ูู ูุณุงุฑู ูุญู ุงูููู ูุงูุงุณุชุฏุงูุฉ."
                    },
                    operationalEfficiency: {
                        title: "ุชุญุณูู ุงูููุงุกุฉ ุงูุชุดุบูููุฉ",
                        description: "ุชุญุณูู ุงูููุงุกุฉ ุงูุชุดุบูููุฉ ุฃูุฑ ุจุงูุบ ุงูุฃูููุฉ ูุฃู ุนูู ูุชุทูุน ุฅูู ุชุนุฒูุฒ ุงูุฅูุชุงุฌูุฉ ูุชูููู ุงูุชูุงููู. ูู Marln Corpุ ูููู ุนูููุงุชู ุงูุญุงููุฉ ููุญุฏุฏ ูุฌุงูุงุช ุงูุชุญุณูู. ูุทุจู ูุณุชุดุงุฑููุง ุงุณุชุฑุงุชูุฌูุงุช ุชุจุณุท ุงูุนูููุงุช ูุชุญุณู ุงูููุงุฑุฏ ูุชูุนุฒุฒ ูู ุงูููุงูุฉ ุฃุฑุจุงุญู. ุงูุชุดู ููู ูููููุง ุชุญููู ุนูููุงุชู ูุชุญููู ููุงุกุฉ ูุฑุจุญูุฉ ุฃูุจุฑ."
                    },
                    technologyIntegration: {
                        title: "ุฎุฏูุงุช ุชูุงูู ุงูุชูููููุฌูุง",
                        description: "ูู ุนุงูู ุฑููู ูุชุฒุงูุฏุ ุฏูุฌ ุงูุชูููููุฌูุง ูู ุนููู ุฃูุฑ ุจุงูุบ ุงูุฃูููุฉ ูููุฌุงุญ. ุชูุฏู Marln Corp ุฎุฏูุงุช ุชูุงูู ุงูุชูููููุฌูุง ุงูุชู ุชุณุงุนุฏู ูู ุงูุงุณุชูุงุฏุฉ ูู ุฃุญุฏุซ ุงูุฃุฏูุงุช ูุงูุจุฑุงูุฌ ูุชุญุณูู ุงูููุงุกุฉ ูุชุนุฒูุฒ ุชุฌุฑุจุฉ ุงูุนููุงุก. ุณูุฑุดุฏู ูุณุชุดุงุฑููุง ุฎูุงู ุนูููุฉ ุงุฎุชูุงุฑ ูุชูููุฐ ุญููู ุงูุชูููููุฌูุง ุงูููุงุณุจุฉ ูุงุญุชูุงุฌุงุช ุนููู."
                    }
                },
                aiSolutions: {
                    title: "ุญููู ุงูุจูุงูุงุช ุจุงูุฐูุงุก ุงูุงุตุทูุงุนู ุงูุชูููุฏู",
                    dataPreparation: {
                        title: "ุฅุนุฏุงุฏ ุงูุจูุงูุงุช",
                        description: "ุนุฒุฒ ุจููุฉ ุงูุจููุฉ ุงูุชุญุชูุฉ ููุฐูุงุก ุงูุงุตุทูุงุนู/ุงูุชุนูู ุงูุขูู ูู ุฎูุงู ุชูุญูุฏ ุฎุท ุฃูุงุจูุจ ุงูุจูุงูุงุช ุนูู ุงูุจูู ุงููุนูุงุฑูุฉ ุงูุญุฏูุซุฉ ูุซู DataBricks ู Snowflake. ุฅุนุฏุงุฏ ุงูุจูุงูุงุช/ุงูุชุณููุฉ ูุตูุงูุฉ ุงููุชุงููุฌ ูู ูุฌุงูุงุช ูููููุง ุงููุณุงุนุฏุฉ ูููุง."
                    },
                    aiStrategy: {
                        title: "ุชุทููุฑ ุงุณุชุฑุงุชูุฌูุฉ ุงูุฐูุงุก ุงูุงุตุทูุงุนู ูุงูุฎุทุฉ",
                        description: "ุชุตููู ููุงุฐุฌ ุงูุฐูุงุก ุงูุงุตุทูุงุนู ุงูุชูููุฏู ุงููุชุทูุฑุฉ ูุชุทูุจ ุญููู ุจูุงูุงุช ุนุงููุฉ ุงูุฌูุฏุฉ. ุชุดูู ูุฐู ูุฌููุนุฉ ูู ุงูุงุณุชุฑุงุชูุฌูุงุชุ ูู ุชูุธูู ูุฌููุนุงุช ุงูุจูุงูุงุช ุงูุฐูุจูุฉ ุงููุชููุนุฉ ุฅูู ุชุญุณูู ุงูุจูุงูุงุช ูู ุฎูุงู ุงูุถุจุท ุงูุฏููู ูุงูุชุญุณูู ูุชูุถููุงุช ุงูุฅูุณุงู."
                    },
                    aiModelDevelopment: {
                        title: "ุชุทููุฑ ููุงุฐุฌ ุงูุฐูุงุก ุงูุงุตุทูุงุนู/ุงูุชุนูู ุงูุขูู ูุน ุญููู ุงูุจูุงูุงุช ููุฐูุงุก ุงูุงุตุทูุงุนู ุงูุชูููุฏู",
                        description: "ุฃูุถู ุญููู ุงูุจูุงูุงุช ูููุงุฐุฌ ุงูุฐูุงุก ุงูุงุตุทูุงุนู ุงูุชูููุฏู ุงูุฑุงุฆุฏุฉ ุชุดูู ูุฌููุนุงุช ุงูุจูุงูุงุช ุงูุฐูุจูุฉ ุงููุชููุนุฉุ ูุชุญุณูู ุงูุจูุงูุงุช ุงููุถุจูุท ุจุฏูุฉุ ูุชุญุณูู ุชูุถููุงุช ุงูุฅูุณุงูุ ูุงููุฑู ุงูุญูุฑุงุก ููุฃูุงูุ ูุงูุชูููู ุงูุดุงูู ูููููุฐุฌ."
                    },
                    promptEngineering: {
                        title: "ููุฏุณุฉ ุงูุฑุณุงุฆู",
                        description: "ุฃุทูู ุงูุนูุงู ููุฅููุงูุงุช ุงููุงููุฉ ููุฐูุงุก ุงูุงุตุทูุงุนู/ุงูุชุนูู ุงูุขูู ูุน ุฎุฏูุงุช ููุฏุณุฉ ุงูุฑุณุงุฆู ุงููุชุฎุตุตุฉ ูู Marln. ูู Marlnุ ูุชุฎุตุต ูู ููุฏุณุฉ ุงูุฑุณุงุฆูุ ููู ุนูููุฉ ุญูููุฉ ุชุถุจุท ููุงุฐุฌ ุงูุฐูุงุก ุงูุงุตุทูุงุนู/ุงูุชุนูู ุงูุขูู ุจุฏูุฉ ููุญุตูู ุนูู ูุชุงุฆุฌ ุฐุงุช ุตูุฉ ุณูุงููุงู. ุฃูุฏุงู ุงูุนูู."
                    },
                    fineTuning: {
                        title: "ุถุจุท ุงูููุงุฐุฌ ุงููุบููุฉ ุงููุจูุฑุฉ ุจุฏูุฉ",
                        description: "ุฃุทูู ุงูุนูุงู ููุฅููุงูุงุช ุงููุงููุฉ ููุฐูุงุก ุงูุงุตุทูุงุนู/ุงูุชุนูู ุงูุขูู ูุน ุฎุฏูุงุช ุงูุถุจุท ุงูุฏููู ุงููุชุฎุตุตุฉ ูู Marln. ูู Marlnุ ูุชุฎุตุต ูู ุถุจุท ูุฌููุนุฉ ูุงุณุนุฉ ูู ููุงุฐุฌ ุงูุฐูุงุก ุงูุงุตุทูุงุนู/ุงูุชุนูู ุงูุขููุ ุจุฏุกุงู ูู ููุงุฐุฌ ุงูุชุนูู ุงูุขูู ุงูุชูููุฏูุฉ ูุตููุงู ุฅูู ููุงุฐุฌ ุงููุบุฉ ุงููุจูุฑุฉ (LLMs) ุงููุชุทูุฑุฉ."
                    },
                    intelligentAssistants: {
                        title: "ุงููุณุงุนุฏูู ุงูุฃุฐููุงุก",
                        description: "ุงุนุชูุฏ ููุฉ ููุงุฐุฌ ุงูุฐูุงุก ุงูุงุตุทูุงุนู ุงููุชุทูุฑุฉ ูุซู GPT-3 ูู OpenAI ูBERT ูุงููุฒูุฏ ูุน ุฎุฏูุงุช ุงููุณุงุนุฏ ุงูุฐูู ูู Marln."
                    }
                },
                qualityEngineering: {
                    title: "ููุฏุณุฉ ุงูุฌูุฏุฉ",
                    testAutomation: {
                        title: "ุฃุชูุชุฉ ุงูุงุฎุชุจุงุฑ",
                        description: "ูุชููุฒ ูู ุงุฎุชุจุงุฑ ุงูุฃุชูุชุฉุ ููุง ูุจุณุท ุฏูุฑุฉ ุชุทููุฑ ุงูุจุฑุงูุฌ ุงูุฎุงุตุฉ ุจู ูุฒูุงุฏุฉ ุงูููุงุกุฉ ูุชุณุฑูุน ุงูููุช ูููุตูู ุฅูู ุงูุณูู."
                    },
                    performanceTesting: {
                        title: "ุงุฎุชุจุงุฑ ุงูุฃุฏุงุก",
                        description: "ูุถูู ุฎุจุฑุงุก ุงุฎุชุจุงุฑ ุงูุฃุฏุงุก ูุฏููุง ุชุดุบูู ุชุทุจููุงุชู ุจุฃูุตู ุฃุฏุงุกุ ููุง ูููุฑ ุชุฌุฑุจุฉ ุณูุณุฉ ููุณุชุฎุฏููู."
                    },
                    securityTesting: {
                        title: "ุงุฎุชุจุงุฑ ุงูุฃูุงู",
                        description: "ุงุญู ุฃุตููู ุงูุฑูููุฉ ูุน ุฎุฏูุงุช ุงุฎุชุจุงุฑ ุงูุฃูุงู ูุฏููุง. ูุญู ูุญุฏุฏ ููุงุท ุงูุถุนู ููุญูู ุชุทุจููุงุชู ูู ุงูุชูุฏูุฏุงุช. ุงููุฑู ุงูุญูุฑุงุก ูุงุฎุชุจุงุฑ ุงูุงุฎุชุฑุงู ูู ุจุนุถ ุงูุฎุฏูุงุช ุงูุชู ููุฏููุง."
                    },
                    globalizationTesting: {
                        title: "ุงุฎุชุจุงุฑ ุงูุนูููุฉ",
                        description: "ูุชุฎุตุต ูู ุงุฎุชุจุงุฑ ุงูุนูููุฉุ ููุง ูุถูู ุฃู ููุชุฌุงุชู ูุตููุฉ ููุฎุชูู ุงูุฃุณูุงู ูุงูุซูุงูุงุช ูุงููุบุงุช ูุชุนุฒูุฒ ูุฌูุฏู ุงูุนุงููู."
                    },
                    complianceTesting: {
                        title: "ุงุฎุชุจุงุฑ ุงูุงูุชุซุงู ูุงูุชูุธูู",
                        description: "ุงุฎุชุจุงุฑ ุงูุงูุชุซุงู ูุงูุชูุธูู ูู ุชุฎุตุตูุง. ูุญู ูุถูู ุฃู ุชุทุจููุงุชู ุชูุจู ุฌููุน ุงููุชุทูุจุงุช ุงูุชูุธูููุฉ ูุงููุนุงููุฑ ุงูุตูุงุนูุฉ."
                    },
                    functionalityTesting: {
                        title: "ุงุฎุชุจุงุฑ ุงููุธุงุฆู",
                        description: "ุงุฎุชุจุงุฑ ุงููุธุงุฆู ูู ุชุฎุตุตูุง. ูุญู ููููู ุจุฏูุฉ ููุฒุงุช ุจุฑุงูุฌู ูุถูุงู ุชูุจูุฉ ุชููุนุงุช ุงููุณุชุฎุฏู."
                    },
                    usabilityTesting: {
                        title: "ุงุฎุชุจุงุฑ ุณูููุฉ ุงูุงุณุชุฎุฏุงู ูุฅููุงููุฉ ุงููุตูู",
                        description: "ูุฑูุฒ ุนูู ุชุฌุฑุจุฉ ุงููุณุชุฎุฏู ูุน ุงุฎุชุจุงุฑ ุณูููุฉ ุงูุงุณุชุฎุฏุงู ูุฅููุงููุฉ ุงููุตููุ ููุง ูุถูู ุฃู ููุชุฌุงุชู ุงูุฑูููุฉ ุดุงููุฉ ูุณููุฉ ุงูุชููู. ุงุฎุชุจุงุฑ ุงูุชุซุงู ADA."
                    },
                    apiTesting: {
                        title: "ุงุฎุชุจุงุฑ API",
                        description: "ูุถูู ูุชุฎุตุตู ุงุฎุชุจุงุฑ API ูุฏููุง ุชุจุงุฏู ุงูุจูุงูุงุช ุงูุณูุณุ ููุง ูุญุณู ุงูุชุดุบูู ุงูุจููู ูุงููุธุงุฆู ุนุจุฑ ุชุทุจููุงุชู."
                    }
                },
                cloudTechnologies: {
                    title: "ุชูููุงุช ุงูุณุญุงุจุฉ",
                    cloudMigration: {
                        title: "ุงููุฌุฑุฉ ุฅูู ุงูุณุญุงุจุฉ",
                        description: "ุงููู ุงูุชุทุจููุงุช ูุงูุจูุงูุงุช ุฅูู ุงูุณุญุงุจุฉ. ูู Marlnุ ูุชุฎุตุต ูู ุชูุฏูู ุฎุฏูุงุช ุงููุฌุฑุฉ ุงูุดุงููุฉ ุฅูู ุงูุณุญุงุจุฉุ ููุง ูุชูุญ ููุดุฑูุงุช ุงูุงูุชูุงู ุจุณูุงุณุฉ ูู ุชุทุจููุงุชูุง ูุจูุงูุงุชูุง ุฅูู ุงูุณุญุงุจุฉ."
                    },
                    cloudSecurity: {
                        title: "ุฃูุงู ุงูุณุญุงุจุฉ ูุงูุญูููุฉ",
                        description: "ุฃูุงู ุงูุณุญุงุจุฉ ูุงูุญูููุฉ ุงููููุฉ. ูู Marlnุ ููุฎุฑ ุจุดุจูุชูุง ุงููุงุณุนุฉ ูู ุฎุจุฑุงุก ุฃูุงู ุงูุณุญุงุจุฉ ูุงูุญูููุฉ ุงูุฐูู ูุชููููู ูู ูุญุงุฐุงุฉ ุงูุฃุทุฑ ุงููุนูุงุฑูุฉ ุงููุตููุฉ ุฌูุฏุงู ูุญูุงูุฉ ุจูุงูุงุชู ูุฃุตููู ุงููููุฉ ูู ุงูุณุญุงุจุฉ."
                    },
                    multicloudNetworking: {
                        title: "ุดุจูุงุช ูุชุนุฏุฏุฉ ุงูุณุญุงุจุฉ",
                        description: "ุฎุฏูุงุช ุงูุดุจูุงุช ูุชุนุฏุฏุฉ ุงูุณุญุงุจุฉ ูุงูุฃูุงู ูุจููุฉ ุนูู ุฃุณุงุณ ุงูุชุนุงููุ ููุง ูุฏูุฌ ุจุณูุงุณุฉ ุฃูุถู ูุง ูู AWS ูAzure ูุงูุดุฑูุงุช ุงููุงุดุฆุฉ ุงููุงุดุฆุฉ ูุฑูุน ุจูุฆุฉ ุงูุณุญุงุจุฉ ุงูุฎุงุตุฉ ุจู ุฅูู ุขูุงู ุฌุฏูุฏุฉ."
                    },
                    devOps: {
                        title: "DevOps ูุงูุนูููุงุช",
                        description: "ุงุญุตู ุนูู ุฃูุตู ููุงุกุฉ ูุน ุฎุฏูุงุช DevOps ูุฃุชูุชุฉ ุงูุณุญุงุจุฉ ูู Marln. ูููุฐ ูุฑูููุง ุงููุชุฎุตุต ุฎุทูุท CI/CD ูููุฉุ ูุณุชููุฏุงู ูู ุฃุญุฏุซ ุงูุฃุฏูุงุช ูุซู Terraform ูAWS Control Tower ูAzure Landing Zones ูAWS CloudFormation (CFT) ูููุงูุจ Azure Resource Manager (ARM) ูุฃุชูุชุฉ ุชูููุฑ ุงูุจููุฉ ุงูุชุญุชูุฉ ูุงูุชูููู."
                    }
                },
                digitalEngineering: {
                    title: "ุงูููุฏุณุฉ ุงูุฑูููุฉ",
                    rpa: {
                        title: "ุญููู ุฃุชูุชุฉ ุงูุนูููุงุช ุงูุฑูุจูุชูุฉ (RPA)"
                    },
                    uiux: {
                        title: "ูุงุฌูุฉ ุงููุณุชุฎุฏู/ุชุฌุฑุจุฉ ุงููุณุชุฎุฏู"
                    },
                    fullStack: {
                        title: "Full Stack & DevOps"
                    },
                    cms: {
                        title: "ุจุฑุงูุฌ ุฅุฏุงุฑุฉ ุงููุญุชูู"
                    },
                    softwareDevelopment: {
                        title: "ุชุทููุฑ ุงูุจุฑุงูุฌ"
                    },
                    mobility: {
                        title: "ุงูุญุฑูุฉ"
                    }
                },
                cybersecurity: {
                    title: "ุงูุฃูู ุงูุณูุจุฑุงูู",
                    identityAccess: {
                        title: "ุฅุฏุงุฑุฉ ุงููููุฉ ูุงููุตูู",
                        description: "ุงุนุชูุฏ ุฃูุถู ุงูููุงุฑุณุงุช ุงููุนูุงุฑูุฉ ูุชุนุฑููุงุช SAML/SCIM ุงูุฎุงุตุฉ ุจู ุจูุง ูู ุฐูู ุงุนุชูุงุฏ ุฃุทุฑ ุงูุฃูุงู Zero Trust"
                    },
                    networkSecurity: {
                        title: "ุฃูุงู ุงูุดุจูุฉ",
                        description: "ุฅุฏุงุฑุฉ ุฏูุฑุฉ ุงูุญูุงุฉ ุงููุงููุฉ ููุฌุฏุฑุงู ุงููุงุฑูุฉ ููุฌุงูุงุช ุงูุณูุงุณุฉ ูุงูุฃุฌูุฒุฉ ุงูุฃูููุฉ. ุชูููุฐ ุงูุฃูุงู ุงูุงูุชุฒุงู ุจุฃูุถู ููุงุฑุณุงุช DMZ ุจูุง ูู ุฐูู ุงูุชุฎูู."
                    },
                    advancedCybersec: {
                        title: "ุงูุฃูู ุงูุณูุจุฑุงูู ุงููุชูุฏู",
                        description: "ุชูููุฐ ูุตูุงูุฉ CASB/DLP/SWG ูุญููู Zero Trust ุงูุฑุงุฆุฏุฉ."
                    },
                    securityAudit: {
                        title: "ุชุฏููู ุงูุฃูุงู ูุงูุงุณุชุดุงุฑุงุช",
                        description: "ูุฑุงุฌุนุฉ ููุชุธูุฉ ูุจููุฉ ุงูุฃูุงู ูุฅุฏุงุฑุฉ ุงููุฎุงุทุฑ ุฌูุจุงู ุฅูู ุฌูุจ ูุน ุถูุงุจุท ุงูุชุฏููู ูุงูุชุณุฌูู ููุญูุงุธ ุนูู ูุธุงูุฉ ุฃูููุฉ ุฌูุฏุฉ"
                    }
                },
                solutions: {
                    title: "ุงูุญููู",
                    strategicPlanning: {
                        title: "ุงูุชุฎุทูุท ุงูุงุณุชุฑุงุชูุฌู ููุฃุนูุงู",
                        description: "ูู Marln Corpุ ูุคูู ุจุฃู ูู ูุดุฑูุน ูุงุฌุญ ูุจุฏุฃ ุจุฎุทุฉ ุตูุจุฉ. ุณูุนูู ูุฑูู ุงูุฎุจุฑุงุก ูุฏููุง ุนู ูุซุจ ูุนู ูุชุทููุฑ ุงุณุชุฑุงุชูุฌูุฉ ุฃุนูุงู ุดุงููุฉ ูุตููุฉ ุฎุตูุตุงู ูุงุญุชูุงุฌุงุชู. ูุฑูุฒ ุนูู ุชุญููู ุงูุณูู ูุงููููู ุงูุชูุงูุณู ูุงูุชุฎุทูุท ุงููุงูู ูุถูุงู ุฃู ุนููู ููุนุฏ ูููุฌุงุญ. ุฏุนูุง ูุณุงุนุฏู ูู ุงูุชููู ูู ูุณุงุฑู ูุญู ุงูููู ูุงูุงุณุชุฏุงูุฉ."
                    },
                    operationalEfficiency: {
                        title: "ุชุญุณูู ุงูููุงุกุฉ ุงูุชุดุบูููุฉ",
                        description: "ุชุญุณูู ุงูููุงุกุฉ ุงูุชุดุบูููุฉ ุฃูุฑ ุจุงูุบ ุงูุฃูููุฉ ูุฃู ุนูู ูุชุทูุน ุฅูู ุชุนุฒูุฒ ุงูุฅูุชุงุฌูุฉ ูุชูููู ุงูุชูุงููู. ูู Marln Corpุ ูููู ุนูููุงุชู ุงูุญุงููุฉ ููุญุฏุฏ ูุฌุงูุงุช ุงูุชุญุณูู. ูุทุจู ูุณุชุดุงุฑููุง ุงุณุชุฑุงุชูุฌูุงุช ุชุจุณุท ุงูุนูููุงุช ูุชุญุณู ุงูููุงุฑุฏ ูุชูุนุฒุฒ ูู ุงูููุงูุฉ ุฃุฑุจุงุญู. ุงูุชุดู ููู ูููููุง ุชุญููู ุนูููุงุชู ูุชุญููู ููุงุกุฉ ูุฑุจุญูุฉ ุฃูุจุฑ."
                    },
                    technologyIntegration: {
                        title: "ุฎุฏูุงุช ุชูุงูู ุงูุชูููููุฌูุง",
                        description: "ูู ุนุงูู ุฑููู ูุชุฒุงูุฏุ ุฏูุฌ ุงูุชูููููุฌูุง ูู ุนููู ุฃูุฑ ุจุงูุบ ุงูุฃูููุฉ ูููุฌุงุญ. ุชูุฏู Marln Corp ุฎุฏูุงุช ุชูุงูู ุงูุชูููููุฌูุง ุงูุชู ุชุณุงุนุฏู ูู ุงูุงุณุชูุงุฏุฉ ูู ุฃุญุฏุซ ุงูุฃุฏูุงุช ูุงูุจุฑุงูุฌ ูุชุญุณูู ุงูููุงุกุฉ ูุชุนุฒูุฒ ุชุฌุฑุจุฉ ุงูุนููุงุก. ุณูุฑุดุฏู ูุณุชุดุงุฑููุง ุฎูุงู ุนูููุฉ ุงุฎุชูุงุฑ ูุชูููุฐ ุญููู ุงูุชูููููุฌูุง ุงูููุงุณุจุฉ ูุงุญุชูุงุฌุงุช ุนููู."
                    }
                }
            }
        }
    };
    

    
    // Language persistence functions
    function getSavedLang() {
        try {
            return localStorage.getItem('site-lang') || DEFAULT_LANG;
        } catch (error) {
            logError('Failed to get saved language', error);
            return DEFAULT_LANG;
        }
    }
    
    function saveLang(lang) {
        try {
            localStorage.setItem('site-lang', lang);
            // Language saved
        } catch (error) {
            logError('Failed to save language', error);
        }
    }
    
    // Direction and language setting
    function setDirAndLang(lang) {
        try {
            document.documentElement.lang = lang;
            document.documentElement.dir = SUPPORTED_RTL.has(lang) ? 'rtl' : 'ltr';
            document.documentElement.classList.toggle('rtl', SUPPORTED_RTL.has(lang));
            // Direction and language set
        } catch (error) {
            logError('Failed to set direction and language', error);
        }
    }
    
    // Update button label
    function setButtonLabelFromLang(lang) {
        try {
            const toggle = document.getElementById('lang-toggle');
            if (toggle) {
                toggle.checked = (lang === 'ar');
            }
        } catch (error) {
            logError('Failed to update button label', error);
        }
    }
    
           // Apply translations to specific page elements
       function applyPageTranslations(translations, lang) {
           try {
               if (lang === 'ar') {
                   // Applying Arabic translations
                   
                   // Apply index page translations
                   if (document.querySelector('.services-hero-section-v_2')) {
                       applyIndexTranslations(translations);
                   }

                   // Apply industry page translations
                   if (document.querySelector('main.industry-content') || document.querySelector('.industry-section')) {
                       applyIndustryTranslations(translations);
                   }

                   // Apply About Us page translations
                   if (document.querySelector('main.about-content') || document.querySelector('.about-section')) {
                       applyAboutUsTranslations(translations);
                   }
                   
                   // Apply AI Consulting page translations
                   if (document.querySelector('main.ai-consulting-content') || document.querySelector('.hero-section h1')) {
                       applyAIConsultingTranslations(translations);
                   }
                   
                   // Apply Engineering Services page translations
                   if (document.querySelector('main.engineering-content') || document.querySelector('.hero-section h1')) {
                       applyEngineeringServicesTranslations(translations);
                   }
                   
                   // Apply Data Analytics page translations
                   if (document.querySelector('main.data-analytics-content') || document.querySelector('.hero-section h1')) {
                       applyDataAnalyticsTranslations(translations);
                   }
                   
                   // Apply Company Profile page translations
                   if (document.querySelector('main.company-profile-content') || document.querySelector('.hero-section h1')) {
                       applyCompanyProfileTranslations(translations);
                   }
                   
                   // Apply CSR page translations
                   if (window.location.pathname.includes('corporate-social-responsibility.html') || document.querySelector('main.csr-content')) {
                       applyCSRTranslations(translations);
                   }
                   
                   // Apply Technology Partners page translations
                   if (window.location.pathname.includes('technology-partners.html') || document.querySelector('main.technology-partners-content')) {
                       applyTechnologyPartnersTranslations(translations);
                   }
                   
                   // Apply Industry page translations
                   if (window.location.pathname.includes('industry.html') || document.querySelector('main.industry-content')) {
                       applyIndustryTranslations(translations);
                   }
                   
                   // Apply Company Profile page translations
                   if (window.location.pathname.includes('marln-company-profile.html') || document.querySelector('section.company-profile-section')) {
                       applyCompanyProfileTranslations(translations);
                   }
                   
                   // Apply header, contact and footer translations to ALL pages
                   applyHeaderTranslations(translations);
                   applyContactAndFooterTranslations(translations);
                               } else if (lang === 'en') {
                    // Reverting to English
                    
                    // For reliable English reversion, refresh the page
                    // This ensures all content returns to original English state
                    console.log('๐ Refreshing page to restore English content...');
                    
                    // Show user feedback before refresh
                    const toggleBtn = document.getElementById('lang-toggle');
                    if (toggleBtn) {
                        const label = toggleBtn.nextElementSibling;
                        if (label) {
                            const originalText = label.textContent;
                            label.textContent = 'Restoring English...';
                            label.style.color = '#4CAF50';
                            
                            // Refresh after brief delay to show user feedback
                            setTimeout(() => {
                                window.location.reload();
                            }, 500);
                        } else {
                            window.location.reload();
                        }
                    } else {
                        window.location.reload();
                    }
                }
           } catch (error) {
               logError('Failed to apply page translations', error);
           }
       }
    
    // Apply index page translations
                   function applyIndexTranslations(tr) {
           try {
               // Note: Header translations are now handled universally by applyHeaderTranslations()
                
                // Hero section
                const heroTitle = document.querySelector('.services-hero-section-v_2 .hero-title');
                if (heroTitle) heroTitle.textContent = tr.index.hero.title;
            
            // Statistics
            const statTitles = document.querySelectorAll('.rr-why-hire-valmax-section--statistic__block--title');
            if (statTitles.length >= 4) {
                statTitles[0].textContent = tr.index.stats.countries.title;
                statTitles[1].textContent = tr.index.stats.deployments.title;
                statTitles[2].textContent = tr.index.stats.certifications.title;
                statTitles[3].textContent = tr.index.stats.experts.title;
            }
            
            // Clients section
            const clientsTitle = document.querySelector('.why-our-clients .section-header--col--title h2');
            if (clientsTitle) clientsTitle.textContent = tr.index.clients.title;
            
            // Clients products button
            const clientsProductsButton = document.querySelector('.why-our-clients-link .btn-text');
            if (clientsProductsButton) clientsProductsButton.textContent = tr.index.clients.productsButton;
            
            // Clients descriptions
            const clientItems = document.querySelectorAll('.why-our-clients-item');
            if (clientItems.length >= 4) {
                // Startups
                const startupTitle = clientItems[0].querySelector('.cf-title');
                const startupText = clientItems[0].querySelector('.why-our-clients-item-text p');
                if (startupTitle) startupTitle.textContent = tr.index.clients.startups.title;
                if (startupText) startupText.textContent = tr.index.clients.startups.text;
                
                // SMVs
                const smvTitle = clientItems[1].querySelector('.cf-title');
                const smvText = clientItems[1].querySelector('.why-our-clients-item-text p');
                if (smvTitle) smvTitle.textContent = tr.index.clients.smvs.title;
                if (smvText) smvText.textContent = tr.index.clients.smvs.text;
                
                // Corporates
                const corporateTitle = clientItems[2].querySelector('.cf-title');
                const corporateText = clientItems[2].querySelector('.why-our-clients-item-text p');
                if (corporateTitle) corporateTitle.textContent = tr.index.clients.corporates.title;
                if (corporateText) corporateText.textContent = tr.index.clients.corporates.text;
                
                // Government
                const govTitle = clientItems[3].querySelector('.cf-title');
                const govText = clientItems[3].querySelector('.why-our-clients-item-text p');
                if (govTitle) govTitle.textContent = tr.index.clients.government.title;
                if (govText) govText.textContent = tr.index.clients.government.text;
            }
            
            // Services section
            const servicesTitle = document.querySelector('.ap-how-we-do-section .section-header--col--title h2');
            if (servicesTitle) servicesTitle.textContent = tr.index.services.sectionTitle;
            
            // Services descriptions
            const serviceItems = document.querySelectorAll('.ap-how-we-do-section--item');
            if (serviceItems.length >= 4) {
                // Business Process Re-engineering
                const service1Title = serviceItems[0].querySelector('.heading');
                const service1Text = serviceItems[0].querySelector('.txt p');
                if (service1Title) service1Title.textContent = tr.index.services.item1.title;
                if (service1Text) service1Text.textContent = tr.index.services.item1.text;
                
                // Product Customization
                const service2Title = serviceItems[1].querySelector('.heading');
                const service2Text = serviceItems[1].querySelector('.txt p');
                if (service2Title) service2Title.textContent = tr.index.services.item2.title;
                if (service2Text) service2Text.textContent = tr.index.services.item2.text;
                
                // Deployment
                const service3Title = serviceItems[2].querySelector('.heading');
                const service3Text = serviceItems[2].querySelector('.txt p');
                if (service3Title) service3Title.textContent = tr.index.services.item3.title;
                if (service3Text) service3Text.textContent = tr.index.services.item3.text;
                
                // Customer Support
                const service4Title = serviceItems[3].querySelector('.heading');
                const service4Text = serviceItems[3].querySelector('.txt p');
                if (service4Title) service4Title.textContent = tr.index.services.item4.title;
                if (service4Text) service4Text.textContent = tr.index.services.item4.text;
            }
            
            // CTA section
            const ctaTitle = document.querySelector('.cta-form .heading');
            if (ctaTitle) ctaTitle.innerHTML = tr.index.cta.titleHtml;
            
            const ctaText = document.querySelector('.cta-form .txt p');
            if (ctaText) ctaText.textContent = tr.index.cta.text;
            
            // CTA buttons
            const ctaButtons = document.querySelectorAll('.cta-form .btn-text');
            ctaButtons.forEach(button => {
                if (button) button.textContent = tr.index.cta.button;
            });
            
            // Agile section
            const agileTitle = document.querySelector('.brand-identity-process .section-header--col--title h2');
            if (agileTitle) agileTitle.textContent = tr.index.agile.title;
            
            // Agile steps
            const agileSteps = document.querySelectorAll('.brand-identity-process--list li');
            if (agileSteps.length >= 5) {
                // Step 1: Discovery & Research
                const step1Title = agileSteps[0].querySelector('h3');
                const step1Text = agileSteps[0].querySelector('.txt p');
                if (step1Title) step1Title.innerHTML = `<span style="color: white;">1</span> ${tr.index.agile.step1.title}`;
                if (step1Text) step1Text.textContent = tr.index.agile.step1.text;
                
                // Step 2: Design Board
                const step2Title = agileSteps[1].querySelector('h3');
                const step2Text = agileSteps[1].querySelector('.txt p');
                if (step2Title) step2Title.innerHTML = `<span style="color: white;">2</span> ${tr.index.agile.step2.title}`;
                if (step2Text) step2Text.textContent = tr.index.agile.step2.text;
                
                // Step 3: Iterative Cycle
                const step3Title = agileSteps[2].querySelector('h3');
                const step3Text = agileSteps[2].querySelector('.txt p');
                if (step3Title) step3Title.innerHTML = `<span style="color: white;">3</span> ${tr.index.agile.step3.title}`;
                if (step3Text) step3Text.textContent = tr.index.agile.step3.text;
                
                // Step 4: MVP
                const step4Title = agileSteps[3].querySelector('h3');
                const step4Text = agileSteps[3].querySelector('.txt p');
                if (step4Title) step4Title.innerHTML = `<span style="color: white;">4</span> ${tr.index.agile.step4.title}`;
                if (step4Text) step4Text.textContent = tr.index.agile.step4.text;
                
                // Step 5: Production
                const step5Title = agileSteps[4].querySelector('h3');
                const step5Text = agileSteps[4].querySelector('.txt p');
                if (step5Title) step5Title.innerHTML = `<span style="color: white;">5</span> ${tr.index.agile.step5.title}`;
                if (step5Text) step5Text.textContent = tr.index.agile.step5.text;
            }
            
            // Products section
            const productsTitle = document.querySelector('.featured-projects-section .section-header--title');
            if (productsTitle) productsTitle.textContent = tr.index.products.title;
            
            // AI Products section title
            const aiProductsTitle = document.querySelector('.featured-projects-section .section-header--col--title h2');
            if (aiProductsTitle) aiProductsTitle.textContent = tr.index.products.sectionTitle;
            
            const productsButton = document.querySelector('.featured-projects-section .btn-text');
            if (productsButton) productsButton.textContent = tr.index.products.viewAll;
            
            // Individual product translations
            const productSlides = document.querySelectorAll('.featured-projects-section--slider--item');
            if (productSlides.length >= 5) {
                // Magicpalm Scanner
                const magicpalmTitle = productSlides[0].querySelector('.name');
                const magicpalmDesc = productSlides[0].querySelector('.txt p');
                const magicpalmTags = productSlides[0].querySelectorAll('.btn-tag .btn-text');
                const magicpalmButton = productSlides[0].querySelector('.btn-small .btn-text');
                
                if (magicpalmTitle) magicpalmTitle.textContent = tr.index.products.magicpalm.title;
                if (magicpalmDesc) magicpalmDesc.textContent = tr.index.products.magicpalm.description;
                if (magicpalmTags.length >= 3) {
                    magicpalmTags[0].textContent = tr.index.products.magicpalm.tags[0];
                    magicpalmTags[1].textContent = tr.index.products.magicpalm.tags[1];
                    magicpalmTags[2].textContent = tr.index.products.magicpalm.tags[2];
                }
                if (magicpalmButton) magicpalmButton.textContent = tr.index.products.magicpalm.button;
                
                // CRM System
                const crmTitle = productSlides[1].querySelector('.name');
                const crmDesc = productSlides[1].querySelector('.txt p');
                const crmTags = productSlides[1].querySelectorAll('.btn-tag .btn-text');
                const crmButton = productSlides[1].querySelector('.btn-small .btn-text');
                
                if (crmTitle) crmTitle.textContent = tr.index.products.crm.title;
                if (crmDesc) crmDesc.textContent = tr.index.products.crm.description;
                if (crmTags.length >= 3) {
                    crmTags[0].textContent = tr.index.products.crm.tags[0];
                    crmTags[1].textContent = tr.index.products.crm.tags[1];
                    crmTags[2].textContent = tr.index.products.crm.tags[2];
                }
                if (crmButton) crmButton.textContent = tr.index.products.crm.button;
                
                // LMS Platform
                const lmsTitle = productSlides[2].querySelector('.name');
                const lmsDesc = productSlides[2].querySelector('.txt p');
                const lmsTags = productSlides[2].querySelectorAll('.btn-tag .btn-text');
                const lmsButton = productSlides[2].querySelector('.btn-small .btn-text');
                
                if (lmsTitle) lmsTitle.textContent = tr.index.products.lms.title;
                if (lmsDesc) lmsDesc.textContent = tr.index.products.lms.description;
                if (lmsTags.length >= 3) {
                    lmsTags[0].textContent = tr.index.products.lms.tags[0];
                    lmsTags[1].textContent = tr.index.products.lms.tags[1];
                    lmsTags[2].textContent = tr.index.products.lms.tags[2];
                }
                if (lmsButton) lmsButton.textContent = tr.index.products.lms.button;
                
                // EGS System
                const egsTitle = productSlides[3].querySelector('.name');
                const egsDesc = productSlides[3].querySelector('.txt p');
                const egsTags = productSlides[3].querySelectorAll('.btn-tag .btn-text');
                const egsButton = productSlides[3].querySelector('.btn-small .btn-text');
                
                if (egsTitle) egsTitle.textContent = tr.index.products.egs.title;
                if (egsDesc) egsDesc.textContent = tr.index.products.egs.description;
                if (egsTags.length >= 3) {
                    egsTags[0].textContent = tr.index.products.egs.tags[0];
                    egsTags[1].textContent = tr.index.products.egs.tags[1];
                    egsTags[2].textContent = tr.index.products.egs.tags[2];
                }
                if (egsButton) egsButton.textContent = tr.index.products.egs.button;
                
                // TalkBright
                const talkbrightTitle = productSlides[4].querySelector('.name');
                const talkbrightDesc = productSlides[4].querySelector('.txt p');
                const talkbrightTags = productSlides[4].querySelectorAll('.btn-tag .btn-text');
                const talkbrightButton = productSlides[4].querySelector('.btn-small .btn-text');
                
                if (talkbrightTitle) talkbrightTitle.textContent = tr.index.products.talkbright.title;
                if (talkbrightDesc) talkbrightDesc.textContent = tr.index.products.talkbright.description;
                if (talkbrightTags.length >= 3) {
                    talkbrightTags[0].textContent = tr.index.products.talkbright.tags[0];
                    talkbrightTags[1].textContent = tr.index.products.talkbright.tags[1];
                    talkbrightTags[2].textContent = tr.index.products.talkbright.tags[2];
                }
                if (talkbrightButton) talkbrightButton.textContent = tr.index.products.talkbright.button;
            }
            
            // Why Choose Marln section
            const whyTitle = document.querySelector('.rr-why-hire-valmax-section .section-header--col--title h2');
            if (whyTitle) whyTitle.textContent = tr.index.why.title;
            
            // Why Choose Marln items
            const whyItems = document.querySelectorAll('.rr-why-hire-valmax-section--items__item');
            if (whyItems.length >= 6) {
                // Proven Results
                const why1Title = whyItems[0].querySelector('h3');
                const why1Text = whyItems[0].querySelector('.txt p');
                if (why1Title) why1Title.textContent = tr.index.why.item1.title;
                if (why1Text) why1Text.textContent = tr.index.why.item1.text;
                
                // Individual Approach
                const why2Title = whyItems[1].querySelector('h3');
                const why2Text = whyItems[1].querySelector('.txt p');
                if (why2Title) why2Title.textContent = tr.index.why.item2.title;
                if (why2Text) why2Text.textContent = tr.index.why.item2.text;
                
                // Seamless Integration
                const why3Title = whyItems[2].querySelector('h3');
                const why3Text = whyItems[2].querySelector('.txt p');
                if (why3Title) why3Title.textContent = tr.index.why.item3.title;
                if (why3Text) why3Text.textContent = tr.index.why.item3.text;
                
                // Compliance
                const why4Title = whyItems[3].querySelector('h3');
                const why4Text = whyItems[3].querySelector('.txt p');
                if (why4Title) why4Title.textContent = tr.index.why.item4.title;
                if (why4Text) why4Text.textContent = tr.index.why.item4.text;
                
                // AI Features
                const why5Title = whyItems[4].querySelector('h3');
                const why5Text = whyItems[4].querySelector('.txt p');
                if (why5Title) why5Title.textContent = tr.index.why.item5.title;
                if (why5Text) why5Text.textContent = tr.index.why.item5.text;
                
                // Predictive Analysis
                const why6Title = whyItems[5].querySelector('h3');
                const why6Text = whyItems[5].querySelector('.txt p');
                if (why6Title) why6Title.textContent = tr.index.why.item6.title;
                if (why6Text) why6Text.textContent = tr.index.why.item6.text;
            }
            
            // Contact Form Section
            const contactTitle = document.querySelector('.contact-us--form--title');
            if (contactTitle) contactTitle.textContent = tr.index.contact.title;
            
            // Contact form placeholders
            const nameInput = document.querySelector('input[name="your-name"]');
            if (nameInput) nameInput.placeholder = tr.index.contact.form.name;
            
            const emailInput = document.querySelector('input[name="your-email"]');
            if (emailInput) emailInput.placeholder = tr.index.contact.form.email;
            
            const messageTextarea = document.querySelector('textarea[name="your-message"]');
            if (messageTextarea) messageTextarea.placeholder = tr.index.contact.form.message;
            
            const submitButton = document.querySelector('.wpcf7-submit');
            if (submitButton) submitButton.value = tr.index.contact.form.submit;
            
            // Contact info section
            const contactInfoTitle = document.querySelector('.contact-us--connect--item .heading');
            if (contactInfoTitle) contactInfoTitle.textContent = tr.index.contact.info.title;
            
            const managerName = document.querySelector('.contact-us--manager .sh-1');
            if (managerName) managerName.textContent = tr.index.contact.info.manager.name;
            
            const managerPosition = document.querySelector('.contact-us--manager .caption');
            if (managerPosition) managerPosition.textContent = tr.index.contact.info.manager.position;
            
            // Footer translations
            const socialLinksTitle = document.querySelector('.footer-menu:first-child .menu-item-161 > a');
            if (socialLinksTitle) socialLinksTitle.textContent = tr.index.footer.social;
            
            const linkedinLink = document.querySelector('.menu-item-1685 a');
            if (linkedinLink) linkedinLink.textContent = tr.index.footer.linkedin;
            
            const instagramLink = document.querySelector('.menu-item-678 a');
            if (instagramLink) instagramLink.textContent = tr.index.footer.instagram;
            
            const emailLink = document.querySelector('.menu-item-1684 a');
            if (emailLink) emailLink.textContent = tr.index.footer.email;
            
            const certificationsTitle = document.querySelector('.menu-item-758 > a');
            if (certificationsTitle) certificationsTitle.textContent = tr.index.footer.certifications;
            
            const womenOwnedLink = document.querySelector('.menu-item-2068 a');
            if (womenOwnedLink) womenOwnedLink.textContent = tr.index.footer.womenOwned;
            
            const fdaLink = document.querySelector('.menu-item-2069 a');
            if (fdaLink) fdaLink.textContent = tr.index.footer.fda;
            
            const gdprLink = document.querySelector('.menu-item-2070 a');
            if (gdprLink) gdprLink.textContent = tr.index.footer.gdpr;
            
            const iso9001Link = document.querySelector('.menu-item-2071 a');
            if (iso9001Link) iso9001Link.textContent = tr.index.footer.iso9001;
            
            const iso20000Link = document.querySelector('.menu-item-2072 a');
            if (iso20000Link) iso20000Link.textContent = tr.index.footer.iso20000;
            
            const iso27001Link = document.querySelector('.menu-item-2073 a');
            if (iso27001Link) iso27001Link.textContent = tr.index.footer.iso27001;
            
            const officesTitle = document.querySelector('.offices-title');
            if (officesTitle) officesTitle.textContent = tr.index.footer.offices;
            
            const contactUsButton = document.querySelector('.footer-contact-btn .btn-text');
            if (contactUsButton) contactUsButton.textContent = tr.index.footer.contactUs;
            
            // FAQ Section
            const faqTitle = document.querySelector('.faq .section-header--col--title h2');
            if (faqTitle) faqTitle.textContent = tr.index.faq.title;
            
            // FAQ Questions and Answers
            const faqItems = document.querySelectorAll('.faq-item');
            if (faqItems.length >= 7) {
                // Question 1: Services
                const q1Question = faqItems[0].querySelector('.faq-item-question-title');
                const q1Answer = faqItems[0].querySelector('.faq-item-answer p');
                if (q1Question) q1Question.textContent = tr.index.faq.questions.q1.question;
                if (q1Answer) q1Answer.textContent = tr.index.faq.questions.q1.answer;
                
                // Question 2: Brand builds vs rebrands
                const q2Question = faqItems[1].querySelector('.faq-item-question-title');
                const q2Answer = faqItems[1].querySelector('.faq-item-answer p');
                if (q2Question) q2Question.textContent = tr.index.faq.questions.q2.question;
                if (q2Answer) q2Answer.textContent = tr.index.faq.questions.q2.answer;
                
                // Question 3: Process difference
                const q3Question = faqItems[2].querySelector('.faq-item-question-title');
                const q3Answer = faqItems[2].querySelector('.faq-item-answer p');
                if (q3Question) q3Question.textContent = tr.index.faq.questions.q3.question;
                if (q3Answer) q3Answer.textContent = tr.index.faq.questions.q3.answer;
                
                // Question 4: Industries served
                const q4Question = faqItems[3].querySelector('.faq-item-question-title');
                const q4Answer = faqItems[3].querySelector('.faq-item-answer p');
                if (q4Question) q4Question.textContent = tr.index.faq.questions.q4.question;
                if (q4Answer) q4Answer.textContent = tr.index.faq.questions.q4.answer;
                
                // Question 5: Post-launch support
                const q5Question = faqItems[4].querySelector('.faq-item-question-title');
                const q5Answer = faqItems[4].querySelector('.faq-item-answer p');
                if (q5Question) q5Question.textContent = tr.index.faq.questions.q5.question;
                if (q5Answer) q5Answer.textContent = tr.index.faq.questions.q5.answer;
                
                // Question 6: Project timeline
                const q6Question = faqItems[5].querySelector('.faq-item-question-title');
                const q6Answer = faqItems[5].querySelector('.faq-item-answer p');
                if (q6Question) q6Question.textContent = tr.index.faq.questions.q6.question;
                if (q6Answer) q6Answer.textContent = tr.index.faq.questions.q6.answer;
                
                // Question 7: Getting started
                const q7Question = faqItems[6].querySelector('.faq-item-question-title');
                const q7Answer = faqItems[6].querySelector('.faq-item-answer p');
                if (q7Question) q7Question.textContent = tr.index.faq.questions.q7.question;
                if (q7Answer) q7Answer.textContent = tr.index.faq.questions.q7.answer;
            }
            
            // Index page translations applied
        } catch (error) {
            logError('Failed to apply index translations', error);
        }
    }
    
    // Apply industry page translations
    function applyIndustryTranslations(tr) {
        try {
            const industryTitle = document.querySelector('.industry-hero .hero-title');
            if (industryTitle) industryTitle.textContent = tr.industry.title;
            
            // Industry page translations applied
        } catch (error) {
            logError('Failed to apply industry translations', error);
        }
    }
    
    // Update dropdown menus
    function updateDropdownMenus(translations) {
        try {
            if (!translations || !translations.dropdown) return;
            
            // Update Services dropdown - using more reliable selectors
            const servicesDropdown = document.querySelector('.services-dropdown');
            if (servicesDropdown) {
                const servicesItems = servicesDropdown.querySelectorAll('li a');
                if (servicesItems.length >= 4) {
                    servicesItems[0].textContent = translations.dropdown.services.aiConsulting;
                    servicesItems[1].textContent = translations.dropdown.services.engineering;
                    servicesItems[2].textContent = translations.dropdown.services.dataAnalytics;
                    servicesItems[3].textContent = translations.dropdown.services.corporateTraining;
                }
            }
            
            // Update Company dropdown - using more reliable selectors
            const companyDropdown = document.querySelector('.company-dropdown');
            if (companyDropdown) {
                const companyItems = companyDropdown.querySelectorAll('li a');
                if (companyItems.length >= 4) {
                    companyItems[0].textContent = translations.dropdown.company.profile;
                    companyItems[1].textContent = translations.dropdown.company.csr;
                    companyItems[2].textContent = translations.dropdown.company.partners;
                    companyItems[3].textContent = translations.dropdown.company.industry;
                }
            }
            
            // Dropdown menus updated
        } catch (error) {
            logError('Failed to update dropdown menus', error);
        }
    }
    
    // Main language switching function
    async function setLanguage(lang) {
        try {
            // Switching language
            
            // Set direction and language
            setDirAndLang(lang);
            
            // Get translations
            const translations = EMBEDDED[lang] || {};
            
            // Apply translations
            applyPageTranslations(translations, lang);
            updateDropdownMenus(translations);
            
            // Update button label
            setButtonLabelFromLang(lang);
            
            // Save language preference
            saveLang(lang);
            
            // Language switch completed
            
        } catch (error) {
            logError('setLanguage failed', error);
            // Fallback to basic switching
            try {
                setDirAndLang(lang);
                setButtonLabelFromLang(lang);
                saveLang(lang);
            } catch (fallbackError) {
                logError('Fallback language switch also failed', fallbackError);
            }
        }
    }
    
    // Initialize language toggle
    function initToggleButton() {
        try {
            const toggleBtn = document.getElementById('lang-toggle');
            if (toggleBtn) {
                // Remove any existing event listeners
                const newToggle = toggleBtn.cloneNode(true);
                toggleBtn.parentNode.replaceChild(newToggle, toggleBtn);
                
                // Add new event listener
                newToggle.addEventListener('change', function(e) {
                    e.preventDefault();
                    const newLang = this.checked ? 'ar' : 'en';
                    // Language toggle clicked
                    
                    // Add pulse animation
                    const label = this.nextElementSibling;
                    if (label) {
                        label.classList.add('pulse');
                        setTimeout(() => {
                            label.classList.remove('pulse');
                        }, 400);
                    }
                    
                    setLanguage(newLang);
                });
                
                // Language toggle button initialized
            } else {
                // Language toggle button not found
            }
        } catch (error) {
            logError('Failed to initialize toggle button', error);
        }
    }
    
    // Initialize language system
    function initializeLanguageSystem() {
        try {
            // Initializing language system
            
            // Initialize toggle button
            initToggleButton();
            
            // Get saved language and apply
            const savedLang = getSavedLang();
            if (savedLang !== DEFAULT_LANG) {
                setLanguage(savedLang);
            }
            
            // Language system initialized successfully
        } catch (error) {
            logError('Failed to initialize language system', error);
        }
    }
    
    // Initialize when DOM is ready
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', initializeLanguageSystem);
    } else {
        // DOM is already ready
        initializeLanguageSystem();
    }
    
    // Also initialize on window load as backup
    window.addEventListener('load', function() {
        // Window loaded, ensuring language system is ready
        const savedLang = getSavedLang();
        if (savedLang !== DEFAULT_LANG) {
            setLanguage(savedLang);
        }
    });
    
    // Additional protection: Initialize after a delay to avoid conflicts with custom scripts
    setTimeout(function() {
        if (!window.languageSystemInitialized) {
            initializeLanguageSystem();
        }
    }, 1500);
    
    // Special handling for Technology Partners page to avoid conflicts
    if (window.location.pathname.includes('technology-partners.html')) {
        setTimeout(function() {
            if (!window.languageSystemInitialized) {
                initializeLanguageSystem();
            }
        }, 2500);
    }
    
    // Apply About Us page translations
    function applyAboutUsTranslations(tr) {
        try {
            // Our Story section title
            const storyTitle = document.querySelector('.about-section h2[style*="font-size: 3.5rem"]');
            if (storyTitle) storyTitle.textContent = tr.about.story.title;
            
            // Our Story description
            const storyText = document.querySelector('.about-section > p:nth-of-type(1)');
            if (storyText) storyText.textContent = tr.about.story.text;
            
            // MARLN Letters section
            const marlnBoxes = document.querySelectorAll('.about-section > div[style*="display: flex"] > div');
            if (marlnBoxes.length >= 5) {
                // M - Mentorship
                const mTitle = marlnBoxes[0].querySelector('h3');
                const mDesc = marlnBoxes[0].querySelector('p');
                if (mTitle) mTitle.textContent = tr.about.story.marlnLetters.m.title;
                if (mDesc) mDesc.textContent = tr.about.story.marlnLetters.m.description;
                
                // A - Advocacy
                const aTitle = marlnBoxes[1].querySelector('h3');
                const aDesc = marlnBoxes[1].querySelector('p');
                if (aTitle) aTitle.textContent = tr.about.story.marlnLetters.a.title;
                if (aDesc) aDesc.textContent = tr.about.story.marlnLetters.a.description;
                
                // R - Resilience
                const rTitle = marlnBoxes[2].querySelector('h3');
                const rDesc = marlnBoxes[2].querySelector('p');
                if (rTitle) rTitle.textContent = tr.about.story.marlnLetters.r.title;
                if (rDesc) rDesc.textContent = tr.about.story.marlnLetters.r.description;
                
                // L - Leadership
                const lTitle = marlnBoxes[3].querySelector('h3');
                const lDesc = marlnBoxes[3].querySelector('p');
                if (lTitle) lTitle.textContent = tr.about.story.marlnLetters.l.title;
                if (lDesc) lDesc.textContent = tr.about.story.marlnLetters.l.description;
                
                // N - Nurturing
                const nTitle = marlnBoxes[4].querySelector('h3');
                const nDesc = marlnBoxes[4].querySelector('p');
                if (nTitle) nTitle.textContent = tr.about.story.marlnLetters.n.title;
                if (nDesc) nDesc.textContent = tr.about.story.marlnLetters.n.description;
            }
            
            // Stats paragraph
            const statsText = document.querySelector('.about-section > p:nth-of-type(2)');
            if (statsText) statsText.textContent = tr.about.story.stats;
            
            // Mission section title
            const missionTitle = document.querySelector('.mission-section h2[style*="font-size: 3.5rem"]');
            if (missionTitle) missionTitle.textContent = tr.about.mission.title;
            
            // Mission text paragraphs
            const missionParagraphs = document.querySelectorAll('.mission-section p[style*="font-size: 1.4rem"]');
            if (missionParagraphs.length >= 2) {
                if (missionParagraphs[0]) missionParagraphs[0].textContent = tr.about.mission.text1;
                if (missionParagraphs[1]) missionParagraphs[1].textContent = tr.about.mission.text2;
            }
            
            // About Us page translations applied
        } catch (error) {
            logError('Failed to apply About Us translations', error);
        }
    }
    
    // Apply contact and footer translations to ALL pages
    function applyContactAndFooterTranslations(tr) {
        try {
            // Contact Form Section
            const contactTitle = document.querySelector('.contact-us--form--title');
            if (contactTitle) contactTitle.textContent = tr.index.contact.title;

            // Contact form placeholders
            const nameInput = document.querySelector('input[name="your-name"]');
            if (nameInput) nameInput.placeholder = tr.index.contact.form.name;
            
            const emailInput = document.querySelector('input[name="your-email"]');
            if (emailInput) emailInput.placeholder = tr.index.contact.form.email;
            
            const messageInput = document.querySelector('textarea[name="your-message"]');
            if (messageInput) messageInput.placeholder = tr.index.contact.form.message;
            
            const submitButton = document.querySelector('input[type="submit"]');
            if (submitButton) submitButton.value = tr.index.contact.form.submit;

            // Contact info section
            const contactInfoTitle = document.querySelector('.contact-us--connect--item .heading');
            if (contactInfoTitle) contactInfoTitle.textContent = tr.index.contact.info.title;

            const managerName = document.querySelector('.contact-us--manager .sh-1');
            if (managerName) managerName.textContent = tr.index.contact.info.manager.name;

            const managerPosition = document.querySelector('.contact-us--manager .caption');
            if (managerPosition) managerPosition.textContent = tr.index.contact.info.manager.position;

            // Footer translations
            const socialLinksTitle = document.querySelector('.footer-menu:first-child .menu-item-161 > a');
            if (socialLinksTitle) socialLinksTitle.textContent = tr.index.footer.social;
            
            const linkedinLink = document.querySelector('.footer-menu:first-child .menu-item-1685 > a');
            if (linkedinLink) linkedinLink.textContent = tr.index.footer.linkedin;
            
            const instagramLink = document.querySelector('.footer-menu:first-child .menu-item-678 > a');
            if (instagramLink) instagramLink.textContent = tr.index.footer.instagram;
            
            const emailLink = document.querySelector('.footer-menu:first-child .menu-item-1684 > a');
            if (emailLink) emailLink.textContent = tr.index.footer.email;
            
            const certificationsTitle = document.querySelector('.footer-menu:nth-child(2) .menu-item-758 > a');
            if (certificationsTitle) certificationsTitle.textContent = tr.index.footer.certifications;
            
            const womenOwnedLink = document.querySelector('.footer-menu:nth-child(2) .menu-item-2068 > a');
            if (womenOwnedLink) womenOwnedLink.textContent = tr.index.footer.womenOwned;
            
            const fdaLink = document.querySelector('.footer-menu:nth-child(2) .menu-item-2069 > a');
            if (fdaLink) fdaLink.textContent = tr.index.footer.fda;
            
            const gdprLink = document.querySelector('.footer-menu:nth-child(2) .menu-item-2070 > a');
            if (gdprLink) gdprLink.textContent = tr.index.footer.gdpr;
            
            const iso9001Link = document.querySelector('.footer-menu:nth-child(2) .menu-item-2071 > a');
            if (iso9001Link) iso9001Link.textContent = tr.index.footer.iso9001;
            
            const iso20000Link = document.querySelector('.footer-menu:nth-child(2) .menu-item-2072 > a');
            if (iso20000Link) iso20000Link.textContent = tr.index.footer.iso20000;
            
            const iso27001Link = document.querySelector('.footer-menu:nth-child(2) .menu-item-2073 > a');
            if (iso27001Link) iso27001Link.textContent = tr.index.footer.iso27001;
            
            const officesTitle = document.querySelector('.footer-menu:nth-child(3) .offices-title');
            if (officesTitle) officesTitle.textContent = tr.index.footer.offices;
            
            const contactUsButton = document.querySelector('.footer-contact-btn .btn-text');
            if (contactUsButton) contactUsButton.textContent = tr.index.footer.contactUs;

            // Contact and Footer translations applied to all pages
        } catch (error) {
            logError('Failed to apply contact and footer translations', error);
        }
    }
    
    // Apply header translations to ALL pages
    function applyHeaderTranslations(tr) {
        try {
            // Desktop header navigation
            const aboutLink = document.querySelector('#menu-item-680 a');
            if (aboutLink) aboutLink.textContent = tr.header.about;

            const servicesLink = document.querySelector('#menu-item-666 > a');
            if (servicesLink) servicesLink.textContent = tr.header.services;

            const companyLink = document.querySelector('#menu-item-company > a');
            if (companyLink) companyLink.textContent = tr.header.company;

            const contactLink = document.querySelector('#menu-item-contact a');
            if (contactLink) contactLink.textContent = tr.header.contact;

            const insightsLink = document.querySelector('#menu-item-1680 a');
            if (insightsLink) insightsLink.textContent = tr.header.insights;

            // Mobile menu navigation
            const mobileHome = document.querySelector('#menu-item-46 a');
            if (mobileHome) mobileHome.textContent = tr.header.home;

            const mobileAbout = document.querySelector('#menu-item-681 a');
            if (mobileAbout) mobileAbout.textContent = tr.header.about;

            const mobileServices = document.querySelector('#menu-item-668 a');
            if (mobileServices) mobileServices.textContent = tr.header.services;

            const mobileInsights = document.querySelector('#menu-item-1680 a');
            if (mobileInsights) mobileInsights.textContent = tr.header.insights;

            const mobileContact = document.querySelector('#menu-item-1681 a');
            if (mobileContact) mobileContact.textContent = tr.header.contact;

            // Update dropdown menus
            updateDropdownMenus(tr);

            // Header translations applied to all pages
        } catch (error) {
            logError('Failed to apply header translations', error);
        }
    }
    
    // Apply AI Consulting page translations
    function applyAIConsultingTranslations(tr) {
        try {
            // Hero section title
            const heroTitle = document.querySelector('.hero-section h1');
            if (heroTitle) heroTitle.textContent = tr.aiConsulting.hero.title;
            
            // Six service boxes
            const serviceBoxes = document.querySelectorAll('.six-boxes-section .service-box');
            if (serviceBoxes.length >= 6) {
                // Strategic Business Planning
                const box1Title = serviceBoxes[0].querySelector('h3');
                const box1Desc = serviceBoxes[0].querySelector('p');
                if (box1Title) box1Title.textContent = tr.aiConsulting.services.strategicPlanning.title;
                if (box1Desc) box1Desc.textContent = tr.aiConsulting.services.strategicPlanning.description;
                
                // Operational Efficiency Improvement
                const box2Title = serviceBoxes[1].querySelector('h3');
                const box2Desc = serviceBoxes[1].querySelector('p');
                if (box2Title) box2Title.textContent = tr.aiConsulting.services.operationalEfficiency.title;
                if (box2Desc) box2Desc.textContent = tr.aiConsulting.services.operationalEfficiency.description;
                
                // Financial Management Consulting
                const box3Title = serviceBoxes[2].querySelector('h3');
                const box3Desc = serviceBoxes[2].querySelector('p');
                if (box3Title) box3Title.textContent = tr.aiConsulting.services.financialManagement.title;
                if (box3Desc) box3Desc.textContent = tr.aiConsulting.services.financialManagement.description;
                
                // Marketing Strategy Development
                const box4Title = serviceBoxes[3].querySelector('h3');
                const box4Desc = serviceBoxes[3].querySelector('p');
                if (box4Title) box4Title.textContent = tr.aiConsulting.services.marketingStrategy.title;
                if (box4Desc) box4Desc.textContent = tr.aiConsulting.services.marketingStrategy.description;
                
                // Human Resources Solutions
                const box5Title = serviceBoxes[4].querySelector('h3');
                const box5Desc = serviceBoxes[4].querySelector('p');
                if (box5Title) box5Title.textContent = tr.aiConsulting.services.humanResources.title;
                if (box5Desc) box5Desc.textContent = tr.aiConsulting.services.humanResources.description;
                
                // Technology Integration Services
                const box6Title = serviceBoxes[5].querySelector('h3');
                const box6Desc = serviceBoxes[5].querySelector('p');
                if (box6Title) box6Title.textContent = tr.aiConsulting.services.technologyIntegration.title;
                if (box6Desc) box6Desc.textContent = tr.aiConsulting.services.technologyIntegration.description;
            }
            
            // Legal and Compliance section title
            const legalTitle = document.querySelector('.legal-compliance-section h2');
            if (legalTitle) legalTitle.textContent = tr.aiConsulting.legalCompliance.title;
            
                           // Legal and Compliance boxes
               const complianceBoxes = document.querySelectorAll('.legal-compliance-section .compliance-box');
               if (complianceBoxes.length >= 9) {
                // Regulatory Compliance Assessment
                const comp1Title = complianceBoxes[0].querySelector('h3');
                const comp1AuditsText = complianceBoxes[0].querySelector('p:nth-of-type(1)');
                const comp1GapText = complianceBoxes[0].querySelector('p:nth-of-type(2)');
                
                if (comp1Title) comp1Title.textContent = tr.aiConsulting.legalCompliance.regulatoryCompliance.title;
                if (comp1AuditsText) comp1AuditsText.innerHTML = `<strong>${tr.aiConsulting.legalCompliance.regulatoryCompliance.complianceAudits.split(':')[0]}:</strong> ${tr.aiConsulting.legalCompliance.regulatoryCompliance.complianceAudits.split(':')[1]}`;
                if (comp1GapText) comp1GapText.innerHTML = `<strong>${tr.aiConsulting.legalCompliance.regulatoryCompliance.gapAnalysis.split(':')[0]}:</strong> ${tr.aiConsulting.legalCompliance.regulatoryCompliance.gapAnalysis.split(':')[1]}`;
                
                // Policy Development and Implementation
                const comp2Title = complianceBoxes[1].querySelector('h3');
                const comp2FrameworkText = complianceBoxes[1].querySelector('p:nth-of-type(1)');
                const comp2ImplementationText = complianceBoxes[1].querySelector('p:nth-of-type(2)');
                
                if (comp2Title) comp2Title.textContent = tr.aiConsulting.legalCompliance.policyDevelopment.title;
                if (comp2FrameworkText) comp2FrameworkText.innerHTML = `<strong>${tr.aiConsulting.legalCompliance.policyDevelopment.policyFramework.split(':')[0]}:</strong> ${tr.aiConsulting.legalCompliance.policyDevelopment.policyFramework.split(':')[1]}`;
                if (comp2ImplementationText) comp2ImplementationText.innerHTML = `<strong>${tr.aiConsulting.legalCompliance.policyDevelopment.policyImplementation.split(':')[0]}:</strong> ${tr.aiConsulting.legalCompliance.policyDevelopment.policyImplementation.split(':')[1]}`;
                
                // Training and Awareness Programs
                const comp3Title = complianceBoxes[2].querySelector('h3');
                const comp3TrainingText = complianceBoxes[2].querySelector('p:nth-of-type(1)');
                const comp3AwarenessText = complianceBoxes[2].querySelector('p:nth-of-type(2)');
                
                if (comp3Title) comp3Title.textContent = tr.aiConsulting.legalCompliance.trainingAwareness.title;
                if (comp3TrainingText) comp3TrainingText.innerHTML = `<strong>${tr.aiConsulting.legalCompliance.trainingAwareness.complianceTraining.split(':')[0]}:</strong> ${tr.aiConsulting.legalCompliance.trainingAwareness.complianceTraining.split(':')[1]}`;
                if (comp3AwarenessText) comp3AwarenessText.innerHTML = `<strong>${tr.aiConsulting.legalCompliance.trainingAwareness.awarenessCampaigns.split(':')[0]}:</strong> ${tr.aiConsulting.legalCompliance.trainingAwareness.awarenessCampaigns.split(':')[1]}`;
                
                // Risk Management and Mitigation
                const comp4Title = complianceBoxes[3].querySelector('h3');
                const comp4RiskText = complianceBoxes[3].querySelector('p:nth-of-type(1)');
                const comp4IncidentText = complianceBoxes[3].querySelector('p:nth-of-type(2)');
                
                if (comp4Title) comp4Title.textContent = tr.aiConsulting.legalCompliance.riskManagement.title;
                if (comp4RiskText) comp4RiskText.innerHTML = `<strong>${tr.aiConsulting.legalCompliance.riskManagement.riskAssessment.split(':')[0]}:</strong> ${tr.aiConsulting.legalCompliance.riskManagement.riskAssessment.split(':')[1]}`;
                if (comp4IncidentText) comp4IncidentText.innerHTML = `<strong>${tr.aiConsulting.legalCompliance.riskManagement.incidentResponse.split(':')[0]}:</strong> ${tr.aiConsulting.legalCompliance.riskManagement.incidentResponse.split(':')[1]}`;
                
                // Contract Management
                const comp5Title = complianceBoxes[4].querySelector('h3');
                const comp5ReviewText = complianceBoxes[4].querySelector('p:nth-of-type(1)');
                const comp5SystemsText = complianceBoxes[4].querySelector('p:nth-of-type(2)');
                
                if (comp5Title) comp5Title.textContent = tr.aiConsulting.legalCompliance.contractManagement.title;
                if (comp5ReviewText) comp5ReviewText.innerHTML = `<strong>${tr.aiConsulting.legalCompliance.contractManagement.contractReview.split(':')[0]}:</strong> ${tr.aiConsulting.legalCompliance.contractManagement.contractReview.split(':')[1]}`;
                if (comp5SystemsText) comp5SystemsText.innerHTML = `<strong>${tr.aiConsulting.legalCompliance.contractManagement.contractSystems.split(':')[0]}:</strong> ${tr.aiConsulting.legalCompliance.contractManagement.contractSystems.split(':')[1]}`;
                
                // Data Protection and Privacy Compliance
                const comp6Title = complianceBoxes[5].querySelector('h3');
                const comp6PrivacyText = complianceBoxes[5].querySelector('p:nth-of-type(1)');
                const comp6PolicyText = complianceBoxes[5].querySelector('p:nth-of-type(2)');
                
                if (comp6Title) comp6Title.textContent = tr.aiConsulting.legalCompliance.dataProtection.title;
                if (comp6PrivacyText) comp6PrivacyText.innerHTML = `<strong>${tr.aiConsulting.legalCompliance.dataProtection.dataPrivacy.split(':')[0]}:</strong> ${tr.aiConsulting.legalCompliance.dataProtection.dataPrivacy.split(':')[1]}`;
                if (comp6PolicyText) comp6PolicyText.innerHTML = `<strong>${tr.aiConsulting.legalCompliance.dataProtection.privacyPolicy.split(':')[0]}:</strong> ${tr.aiConsulting.legalCompliance.dataProtection.privacyPolicy.split(':')[1]}`;
                
                // Monitoring and Reporting
                const comp7Title = complianceBoxes[6].querySelector('h3');
                const comp7MonitoringText = complianceBoxes[6].querySelector('p:nth-of-type(1)');
                const comp7ReportingText = complianceBoxes[6].querySelector('p:nth-of-type(2)');
                
                if (comp7Title) comp7Title.textContent = tr.aiConsulting.legalCompliance.monitoringReporting.title;
                if (comp7MonitoringText) comp7MonitoringText.innerHTML = `<strong>${tr.aiConsulting.legalCompliance.monitoringReporting.complianceMonitoring.split(':')[0]}:</strong> ${tr.aiConsulting.legalCompliance.monitoringReporting.complianceMonitoring.split(':')[1]}`;
                if (comp7ReportingText) comp7ReportingText.innerHTML = `<strong>${tr.aiConsulting.legalCompliance.monitoringReporting.reportingDocumentation.split(':')[0]}:</strong> ${tr.aiConsulting.legalCompliance.monitoringReporting.reportingDocumentation.split(':')[1]}`;
                
                // Legal Research and Advisory Services
                const comp8Title = complianceBoxes[7].querySelector('h3');
                const comp8ResearchText = complianceBoxes[7].querySelector('p:nth-of-type(1)');
                const comp8AdvisoryText = complianceBoxes[7].querySelector('p:nth-of-type(2)');
                
                if (comp8Title) comp8Title.textContent = tr.aiConsulting.legalCompliance.legalResearchAdvisory.title;
                if (comp8ResearchText) comp8ResearchText.innerHTML = `<strong>${tr.aiConsulting.legalCompliance.legalResearchAdvisory.legalResearch.split(':')[0]}:</strong> ${tr.aiConsulting.legalCompliance.legalResearchAdvisory.legalResearch.split(':')[1]}`;
                if (comp8AdvisoryText) comp8AdvisoryText.innerHTML = `<strong>${tr.aiConsulting.legalCompliance.legalResearchAdvisory.advisoryServices.split(':')[0]}:</strong> ${tr.aiConsulting.legalCompliance.legalResearchAdvisory.advisoryServices.split(':')[1]}`;
                
                // Third-Party Risk Management
                const comp9Title = complianceBoxes[8].querySelector('h3');
                const comp9VendorText = complianceBoxes[8].querySelector('p:nth-of-type(1)');
                const comp9DueDiligenceText = complianceBoxes[8].querySelector('p:nth-of-type(2)');
                
                if (comp9Title) comp9Title.textContent = tr.aiConsulting.legalCompliance.thirdPartyRisk.title;
                if (comp9VendorText) comp9VendorText.innerHTML = `<strong>${tr.aiConsulting.legalCompliance.thirdPartyRisk.vendorCompliance.split(':')[0]}:</strong> ${tr.aiConsulting.legalCompliance.thirdPartyRisk.vendorCompliance.split(':')[1]}`;
                if (comp9DueDiligenceText) comp9DueDiligenceText.innerHTML = `<strong>${tr.aiConsulting.legalCompliance.thirdPartyRisk.dueDiligence.split(':')[0]}:</strong> ${tr.aiConsulting.legalCompliance.thirdPartyRisk.dueDiligence.split(':')[1]}`;
            }
            
            // AI Consulting page translations applied
        } catch (error) {
            logError('Failed to apply AI Consulting translations', error);
        }
    }
    
    // Apply Engineering Services page translations - NEW CLEAN VERSION
    function applyEngineeringServicesTranslations(tr) {
        try {
            // Starting Engineering Services translations
            
            // Hero section
            const heroTitle = document.querySelector('.hero-section h1');
            if (heroTitle) {
                heroTitle.textContent = tr.engineering.hero.title;
            }
            
            const heroDescription = document.querySelector('.hero-section p');
            if (heroDescription) {
                heroDescription.textContent = tr.engineering.hero.description;
            }
            
            // NEW: Simple Our Solutions section translation
            const solutionsTitle = document.querySelector('.solutions-section h2');
            if (solutionsTitle) {
                solutionsTitle.textContent = "ุญููููุง"; // Direct Arabic text
                // Solutions title translated to Arabic
            }
            
            // NEW: Simple service box translations
            const serviceBoxes = document.querySelectorAll('.solutions-section .service-box');
            if (serviceBoxes.length >= 2) {
                // Box 1: Tailored Application Development
                const box1Title = serviceBoxes[0].querySelector('h3');
                const box1Desc = serviceBoxes[0].querySelector('p');
                if (box1Title) {
                    box1Title.textContent = "ุชุทููุฑ ุงูุชุทุจููุงุช ุงููุฎุตุตุฉ";
                                            // Box 1 title translated
                }
                if (box1Desc) {
                    box1Desc.textContent = "ุชุตููู ุงูุชุทุจููุงุช ุจุฏูุฉ ูุงุญุชูุงุฌุงุช ุนูููุ ุชููุฒ ุญููููุง ุนูุงูุชู ุงูุชุฌุงุฑูุฉ ูู ุงููุดูุฏ ุงูุฑูููุ ููุง ูุถูู ุชุฃุซูุฑุงู ุฏุงุฆูุงู ูุน ุงูุชููุฒ ุงููุฎุตุต.";
                    console.log('๐ NEW: Box 1 description translated');
                }
                
                // Box 2: Cross-Platform Mobile App Development
                const box2Title = serviceBoxes[1].querySelector('h3');
                const box2Desc = serviceBoxes[1].querySelector('p');
                if (box2Title) {
                    box2Title.textContent = "ุชุทููุฑ ุชุทุจููุงุช ุงููุงุชู ุงููุญููู ุนุจุฑ ุงูููุตุงุช";
                    console.log('๐ NEW: Box 2 title translated');
                }
                if (box2Desc) {
                    box2Desc.textContent = "ูุณุน ูุทุงู ูุตููู ูุน ุชุทุจููุงุชูุง ุนุจุฑ ุงูููุตุงุชุ ุงููุตููุฉ ููุดุงุฑูุฉ ุฌูููุฑ ุฃูุณุน. ูุฏู ุชุฌุงุฑุจ ุขุณุฑุฉ ุนุจุฑ ุงูุฃุฌูุฒุฉ ูุงูููุตุงุช ููููู ุงููุชุณุงุฑุน.";
                    console.log('๐ NEW: Box 2 description translated');
                }
            }
            
            // NEW: Simple second solutions section
            const solutionsTitle2 = document.querySelectorAll('.solutions-section h2')[1];
            if (solutionsTitle2) {
                solutionsTitle2.textContent = "ุงูุญููู";
                console.log('๐ NEW: Second solutions title translated');
            }
            
            // NEW: Simple second solutions boxes
            const serviceBoxes2 = document.querySelectorAll('.solutions-section .service-box');
            if (serviceBoxes2.length >= 5) { // Total boxes across both sections
                // Strategic Business Planning
                const box3Title = serviceBoxes2[2].querySelector('h3');
                const box3Desc = serviceBoxes2[2].querySelector('p');
                if (box3Title) box3Title.textContent = "ุงูุชุฎุทูุท ุงูุงุณุชุฑุงุชูุฌู ููุฃุนูุงู";
                if (box3Desc) box3Desc.textContent = "ูู Marln Corpุ ูุคูู ุจุฃู ูู ูุดุฑูุน ูุงุฌุญ ูุจุฏุฃ ุจุฎุทุฉ ุตูุจุฉ. ุณูุนูู ูุฑูู ุงูุฎุจุฑุงุก ูุฏููุง ุนู ูุซุจ ูุนู ูุชุทููุฑ ุงุณุชุฑุงุชูุฌูุฉ ุฃุนูุงู ุดุงููุฉ ูุตููุฉ ุฎุตูุตุงู ูุงุญุชูุงุฌุงุชู.";
                
                // Operational Efficiency (box 4)
                const box4Title = serviceBoxes2[3].querySelector('h3');
                const box4Desc = serviceBoxes2[3].querySelector('p');
                if (box4Title) box4Title.textContent = "ุชุญุณูู ุงูููุงุกุฉ ุงูุชุดุบูููุฉ";
                if (box4Desc) box4Desc.textContent = "ุชุญุณูู ุงูููุงุกุฉ ุงูุชุดุบูููุฉ ุฃูุฑ ุจุงูุบ ุงูุฃูููุฉ ูุฃู ุนูู ูุชุทูุน ุฅูู ุชุนุฒูุฒ ุงูุฅูุชุงุฌูุฉ ูุชูููู ุงูุชูุงููู.";
                
                // Technology Integration (box 5)
                const box5Title = serviceBoxes2[4].querySelector('h3');
                const box5Desc = serviceBoxes2[4].querySelector('p');
                if (box5Title) box5Title.textContent = "ุฎุฏูุงุช ุชูุงูู ุงูุชูููููุฌูุง";
                if (box5Desc) box5Desc.textContent = "ูู ุนุงูู ุฑููู ูุชุฒุงูุฏุ ุฏูุฌ ุงูุชูููููุฌูุง ูู ุนููู ุฃูุฑ ุจุงูุบ ุงูุฃูููุฉ ูููุฌุงุญ.";
                
                console.log('๐ NEW: Second solutions boxes translated');
            }
            
            // Generative AI Data Solutions section
            const aiSolutionsTitle = document.querySelector('.ai-solutions-section h2');
            if (aiSolutionsTitle) {
                aiSolutionsTitle.textContent = tr.engineering.aiSolutions.title;
            }
            
            // AI Solutions boxes (first row)
            const aiSolutionBoxes = document.querySelectorAll('.ai-solutions-section .service-box');

            if (aiSolutionBoxes.length >= 6) {
                // Data Preparation
                const aiBox1Title = aiSolutionBoxes[0].querySelector('h3');
                const aiBox1Desc = aiSolutionBoxes[0].querySelector('p');
                if (aiBox1Title) aiBox1Title.textContent = tr.engineering.aiSolutions.dataPreparation.title;
                if (aiBox1Desc) aiBox1Desc.textContent = tr.engineering.aiSolutions.dataPreparation.description;
                
                // AI Strategy and Roadmap Development
                const aiBox2Title = aiSolutionBoxes[1].querySelector('h3');
                const aiBox2Desc = aiSolutionBoxes[1].querySelector('p');
                if (aiBox2Title) aiBox2Title.textContent = tr.engineering.aiSolutions.aiStrategy.title;
                if (aiBox2Desc) aiBox2Desc.textContent = tr.engineering.aiSolutions.aiStrategy.description;
                
                // AI/ML Model Development
                const aiBox3Title = aiSolutionBoxes[2].querySelector('h3');
                const aiBox3Desc = aiSolutionBoxes[2].querySelector('p');
                if (aiBox3Title) aiBox3Title.textContent = tr.engineering.aiSolutions.aiModelDevelopment.title;
                if (aiBox3Desc) aiBox3Desc.textContent = tr.engineering.aiSolutions.aiModelDevelopment.description;
                
                // Prompt Engineering
                const aiBox4Title = aiSolutionBoxes[3].querySelector('h3');
                const aiBox4Desc = aiSolutionBoxes[3].querySelector('p');
                if (aiBox4Title) aiBox4Title.textContent = tr.engineering.aiSolutions.promptEngineering.title;
                if (aiBox4Desc) aiBox4Desc.textContent = tr.engineering.aiSolutions.promptEngineering.description;
                
                // Fine tuning LLMs
                const aiBox5Title = aiSolutionBoxes[4].querySelector('h3');
                const aiBox5Desc = aiSolutionBoxes[4].querySelector('p');
                if (aiBox5Title) aiBox5Title.textContent = tr.engineering.aiSolutions.fineTuning.title;
                if (aiBox5Desc) aiBox5Desc.textContent = tr.engineering.aiSolutions.fineTuning.description;
                
                // Intelligent Assistants
                const aiBox6Title = aiSolutionBoxes[5].querySelector('h3');
                const aiBox6Desc = aiSolutionBoxes[5].querySelector('p');
                if (aiBox6Title) aiBox6Title.textContent = tr.engineering.aiSolutions.intelligentAssistants.title;
                if (aiBox6Desc) aiBox6Desc.textContent = tr.engineering.aiSolutions.intelligentAssistants.description;
            }
            
            // Quality Engineering section
            const qualityTitle = document.querySelector('.quality-engineering-section h2');
            if (qualityTitle) {
                qualityTitle.textContent = tr.engineering.qualityEngineering.title;
            }
            
            // Quality Engineering boxes
            const qualityBoxes = document.querySelectorAll('.quality-engineering-section .service-box');

            if (qualityBoxes.length >= 8) {
                // Test Automation
                const qualBox1Title = qualityBoxes[0].querySelector('h3');
                const qualBox1Desc = qualityBoxes[0].querySelector('p');
                if (qualBox1Title) qualBox1Title.textContent = tr.engineering.qualityEngineering.testAutomation.title;
                if (qualBox1Desc) qualBox1Desc.textContent = tr.engineering.qualityEngineering.testAutomation.description;
                
                // Performance Testing
                const qualBox2Title = qualityBoxes[1].querySelector('h3');
                const qualBox2Desc = qualityBoxes[1].querySelector('p');
                if (qualBox2Title) qualBox2Title.textContent = tr.engineering.qualityEngineering.performanceTesting.title;
                if (qualBox2Desc) qualBox2Desc.textContent = tr.engineering.qualityEngineering.performanceTesting.description;
                
                // Security Testing
                const qualBox3Title = qualityBoxes[2].querySelector('h3');
                const qualBox3Desc = qualityBoxes[2].querySelector('p');
                if (qualBox3Title) qualBox3Title.textContent = tr.engineering.qualityEngineering.securityTesting.title;
                if (qualBox3Desc) qualBox3Desc.textContent = tr.engineering.qualityEngineering.securityTesting.description;
                
                // Globalization Testing
                const qualBox4Title = qualityBoxes[3].querySelector('h3');
                const qualBox4Desc = qualityBoxes[3].querySelector('p');
                if (qualBox4Title) qualBox4Title.textContent = tr.engineering.qualityEngineering.globalizationTesting.title;
                if (qualBox4Desc) qualBox4Desc.textContent = tr.engineering.qualityEngineering.globalizationTesting.description;
                
                // Compliance and Regulatory Testing
                const qualBox5Title = qualityBoxes[4].querySelector('h3');
                const qualBox5Desc = qualityBoxes[4].querySelector('p');
                if (qualBox5Title) qualBox5Title.textContent = tr.engineering.qualityEngineering.complianceTesting.title;
                if (qualBox5Desc) qualBox5Desc.textContent = tr.engineering.qualityEngineering.complianceTesting.description;
                
                // Functionality Testing
                const qualBox6Title = qualityBoxes[5].querySelector('h3');
                const qualBox6Desc = qualityBoxes[5].querySelector('p');
                if (qualBox6Title) qualBox6Title.textContent = tr.engineering.qualityEngineering.functionalityTesting.title;
                if (qualBox6Desc) qualBox6Desc.textContent = tr.engineering.qualityEngineering.functionalityTesting.description;
                
                // Usability and Accessibility Testing
                const qualBox7Title = qualityBoxes[6].querySelector('h3');
                const qualBox7Desc = qualityBoxes[6].querySelector('p');
                if (qualBox7Title) qualBox7Title.textContent = tr.engineering.qualityEngineering.usabilityTesting.title;
                if (qualBox7Desc) qualBox7Desc.textContent = tr.engineering.qualityEngineering.usabilityTesting.description;
                
                // API Testing
                const qualBox8Title = qualityBoxes[7].querySelector('h3');
                const qualBox8Desc = qualityBoxes[7].querySelector('p');
                if (qualBox8Title) qualBox8Title.textContent = tr.engineering.qualityEngineering.apiTesting.title;
                if (qualBox8Desc) qualBox8Desc.textContent = tr.engineering.qualityEngineering.apiTesting.description;
            }
            
            // Cloud Technologies section
            const cloudTitle = document.querySelector('.cloud-technologies-section h2');
            if (cloudTitle) {
                cloudTitle.textContent = tr.engineering.cloudTechnologies.title;
            }
            
            // Cloud Technologies boxes
            const cloudBoxes = document.querySelectorAll('.cloud-technologies-section .service-box');

            if (cloudBoxes.length >= 4) {
                // Cloud Migration
                const cloudBox1Title = cloudBoxes[0].querySelector('h3');
                const cloudBox1Desc = cloudBoxes[0].querySelector('p');
                if (cloudBox1Title) cloudBox1Title.textContent = tr.engineering.cloudTechnologies.cloudMigration.title;
                if (cloudBox1Desc) cloudBox1Desc.textContent = tr.engineering.cloudTechnologies.cloudMigration.description;
                
                // Cloud Security and Governance
                const cloudBox2Title = cloudBoxes[1].querySelector('h3');
                const cloudBox2Desc = cloudBoxes[1].querySelector('p');
                if (cloudBox2Title) cloudBox2Title.textContent = tr.engineering.cloudTechnologies.cloudSecurity.title;
                if (cloudBox2Desc) cloudBox2Desc.textContent = tr.engineering.cloudTechnologies.cloudSecurity.description;
                
                // Multicloud Networking
                const cloudBox3Title = cloudBoxes[2].querySelector('h3');
                const cloudBox3Desc = cloudBoxes[2].querySelector('p');
                if (cloudBox3Title) cloudBox3Title.textContent = tr.engineering.cloudTechnologies.multicloudNetworking.title;
                if (cloudBox3Desc) cloudBox3Desc.textContent = tr.engineering.cloudTechnologies.multicloudNetworking.description;
                
                // DevOps and Operations
                const cloudBox4Title = cloudBoxes[3].querySelector('h3');
                const cloudBox4Desc = cloudBoxes[3].querySelector('p');
                if (cloudBox4Title) cloudBox4Title.textContent = tr.engineering.cloudTechnologies.devOps.title;
                if (cloudBox4Desc) cloudBox4Desc.textContent = tr.engineering.cloudTechnologies.devOps.description;
            }
            
            // Digital Engineering section
            const digitalTitle = document.querySelector('.digital-engineering-section h2');
            if (digitalTitle) {
                digitalTitle.textContent = tr.engineering.digitalEngineering.title;
            }
            
            // Digital Engineering boxes
            const digitalBoxes = document.querySelectorAll('.digital-engineering-section .service-box');
            if (digitalBoxes.length >= 6) {
                // RPA Solutions
                const digBox1Title = digitalBoxes[0].querySelector('h3');
                if (digBox1Title) digBox1Title.textContent = tr.engineering.digitalEngineering.rpa.title;
                
                // UI/UX
                const digBox2Title = digitalBoxes[1].querySelector('h3');
                if (digBox2Title) digBox2Title.textContent = tr.engineering.digitalEngineering.uiux.title;
                
                // Full Stack & DevOps
                const digBox3Title = digitalBoxes[2].querySelector('h3');
                if (digBox3Title) digBox3Title.textContent = tr.engineering.digitalEngineering.fullStack.title;
                
                // Content Management Software
                const digBox4Title = digitalBoxes[3].querySelector('h3');
                if (digBox4Title) digBox4Title.textContent = tr.engineering.digitalEngineering.cms.title;
                
                // Software Development
                const digBox5Title = digitalBoxes[4].querySelector('h3');
                if (digBox5Title) digBox5Title.textContent = tr.engineering.digitalEngineering.softwareDevelopment.title;
                
                // Mobility
                const digBox6Title = digitalBoxes[5].querySelector('h3');
                if (digBox6Title) digBox6Title.textContent = tr.engineering.digitalEngineering.mobility.title;
            }
            
            // Cybersecurity section
            const cyberTitle = document.querySelector('.cybersecurity-section h2');
            if (cyberTitle) {
                cyberTitle.textContent = tr.engineering.cybersecurity.title;
            }
            
            // Cybersecurity boxes
            const cyberBoxes = document.querySelectorAll('.cybersecurity-section .service-box');
            if (cyberBoxes.length >= 4) {
                // Identity and Access Management
                const cyberBox1Title = cyberBoxes[0].querySelector('h3');
                const cyberBox1Desc = cyberBoxes[0].querySelector('p');
                if (cyberBox1Title) cyberBox1Title.textContent = tr.engineering.cybersecurity.identityAccess.title;
                if (cyberBox1Desc) cyberBox1Desc.textContent = tr.engineering.cybersecurity.identityAccess.description;
                
                // Network Security
                const cyberBox2Title = cyberBoxes[1].querySelector('h3');
                const cyberBox2Desc = cyberBoxes[1].querySelector('p');
                if (cyberBox2Title) cyberBox2Title.textContent = tr.engineering.cybersecurity.networkSecurity.title;
                if (cyberBox2Desc) cyberBox2Desc.textContent = tr.engineering.cybersecurity.networkSecurity.description;
                
                // Advanced Cybersec
                const cyberBox3Title = cyberBoxes[2].querySelector('h3');
                const cyberBox3Desc = cyberBoxes[2].querySelector('p');
                if (cyberBox3Title) cyberBox3Title.textContent = tr.engineering.cybersecurity.advancedCybersec.title;
                if (cyberBox3Desc) cyberBox3Desc.textContent = tr.engineering.cybersecurity.advancedCybersec.description;
                
                // Security Audit and Consulting
                const cyberBox4Title = cyberBoxes[3].querySelector('h3');
                const cyberBox4Desc = cyberBoxes[3].querySelector('p');
                if (cyberBox4Title) cyberBox4Title.textContent = tr.engineering.cybersecurity.securityAudit.title;
                if (cyberBox4Desc) cyberBox4Desc.textContent = tr.engineering.cybersecurity.securityAudit.description;
            }
            
            // Engineering Services page translations applied
        } catch (error) {
            logError('Failed to apply Engineering Services translations', error);
        }
    }
    
    // Apply Data Analytics page translations - NEW CLEAN VERSION
    function applyDataAnalyticsTranslations(tr) {
        try {
            // Starting Data Analytics translations
            
            // Hero section
            const heroTitle = document.querySelector('.hero-section h1');
            if (heroTitle) {
                heroTitle.textContent = "ุชุญูููุงุช ุงูุจูุงูุงุช ุงููุชูุฏูุฉ";
                console.log('๐ NEW: Hero title translated');
            }
            
            const heroDescription = document.querySelector('.hero-section p');
            if (heroDescription) {
                heroDescription.textContent = "ุชุญููู ุงูุจูุงูุงุช ุฅูู ุฑุคู ูุงุจูุฉ ููุชูููุฐ ูุฏูุน ููู ุงูุฃุนูุงู ูุงูุงุจุชูุงุฑ.";
                console.log('๐ NEW: Hero description translated');
            }
            
            // Services section
            const servicesTitle = document.querySelector('.services-section h2');
            if (servicesTitle) {
                servicesTitle.textContent = "ุฎุฏูุงุชูุง";
                console.log('๐ NEW: Services title translated');
            }
            
            // Service boxes - ALL 9 BOXES
            const serviceBoxes = document.querySelectorAll('.service-box');
            console.log('๐ NEW: Found service boxes:', serviceBoxes.length);
            
            if (serviceBoxes.length >= 9) {
                // Row 1: Data Modeling, Data Management, Data Strategy
                // Box 1: Data Modeling and Visualization
                const box1Title = serviceBoxes[0].querySelector('h3');
                const box1Desc = serviceBoxes[0].querySelector('p');
                if (box1Title) {
                    box1Title.textContent = "ููุฐุฌุฉ ูุชุตูุฑ ุงูุจูุงูุงุช";
                    console.log('๐ NEW: Box 1 (Data Modeling) title translated');
                }
                if (box1Desc) {
                    box1Desc.textContent = "ุฅูุดุงุก ููุงุฐุฌ ุชูุจุคูุฉ ููุตููุฉ ูุตููุฉ ุฎุตูุตุงู ูุงุญุชูุงุฌุงุช ุงูุฃุนูุงู. ุชุทููุฑ ููุญุงุช ูุนูููุงุช ุชูุงุนููุฉ ูุฃุฏูุงุช ุชูุงุฑูุฑ ููุฑุคู ูู ุงูููุช ุงููุนูู.";
                    console.log('๐ NEW: Box 1 description translated');
                }
                
                // Box 2: Data Management
                const box2Title = serviceBoxes[1].querySelector('h3');
                const box2Desc = serviceBoxes[1].querySelector('p');
                if (box2Title) {
                    box2Title.textContent = "ุฅุฏุงุฑุฉ ุงูุจูุงูุงุช";
                    console.log('๐ NEW: Box 2 (Data Management) title translated');
                }
                if (box2Desc) {
                    box2Desc.textContent = "ุฅูุดุงุก ุณูุงุณุงุช ูุฌูุฏุฉ ุงูุจูุงูุงุช ูุงูุฎุตูุตูุฉ ูุงูุฃูุงู. ุฏูุฌ ุงูุจูุงูุงุช ูู ูุตุงุฏุฑ ูุชุนุฏุฏุฉ ูู ุชูุณูู ููุญุฏ.";
                    console.log('๐ NEW: Box 2 description translated');
                }
                
                // Box 3: Data Strategy Development
                const box3Title = serviceBoxes[2].querySelector('h3');
                const box3Desc = serviceBoxes[2].querySelector('p');
                if (box3Title) {
                    box3Title.textContent = "ุชุทููุฑ ุงุณุชุฑุงุชูุฌูุฉ ุงูุจูุงูุงุช";
                    console.log('๐ NEW: Box 3 (Data Strategy) title translated');
                }
                if (box3Desc) {
                    box3Desc.textContent = "ุชูููู ุงูุจููุฉ ุงูุชุญุชูุฉ ุงูุญุงููุฉ ููุจูุงูุงุช ููุถุฌ ุงูุชุญูููุงุช. ุชุญุฏูุฏ ุฃูุฏุงู ุงูุฃุนูุงู ููุคุดุฑุงุช ุงูุฃุฏุงุก ุงูุฑุฆูุณูุฉ.";
                    console.log('๐ NEW: Box 3 description translated');
                }
                
                // Row 2: Business Intelligence, Advanced Analytics, Performance Measurement
                // Box 4: Business Intelligence
                const box4Title = serviceBoxes[3].querySelector('h3');
                const box4Desc = serviceBoxes[3].querySelector('p');
                if (box4Title) {
                    box4Title.textContent = "ุฐูุงุก ุงูุฃุนูุงู";
                    console.log('๐ NEW: Box 4 (Business Intelligence) title translated');
                }
                if (box4Desc) {
                    box4Desc.textContent = "ุฅูุดุงุก ุชูุซููุงุช ุจุตุฑูุฉ ููุจูุงูุงุช ูุชุณููู ุงูููู. ุงุณุชุฎุฏุงู ุชุตูุฑ ุงูุจูุงูุงุช ูุฑูุงูุฉ ุงูุฑุคู ูุฏูุน ุตูุน ุงููุฑุงุฑ.";
                    console.log('๐ NEW: Box 4 description translated');
                }
                
                // Box 5: Advanced Analytics
                const box5Title = serviceBoxes[4].querySelector('h3');
                const box5Desc = serviceBoxes[4].querySelector('p');
                if (box5Title) {
                    box5Title.textContent = "ุงูุชุญูููุงุช ุงููุชูุฏูุฉ";
                    console.log('๐ NEW: Box 5 (Advanced Analytics) title translated');
                }
                if (box5Desc) {
                    box5Desc.textContent = "ุชูููุฐ ุฎูุงุฑุฒููุงุช ุงูุชุนูู ุงูุขูู ูุชุญููู ุงูุจูุงูุงุช ุงููุนูุฏุฉ. ุชุญููู ุจูุงูุงุช ุงููุต ููุนุงุทูุฉ ูุงูุงุชุฌุงูุงุช ูุงูุฑุคู.";
                    console.log('๐ NEW: Box 5 description translated');
                }
                
                // Box 6: Performance Measurement
                const box6Title = serviceBoxes[5].querySelector('h3');
                const box6Desc = serviceBoxes[5].querySelector('p');
                if (box6Title) {
                    box6Title.textContent = "ููุงุณ ุงูุฃุฏุงุก";
                    console.log('๐ NEW: Box 6 (Performance Measurement) title translated');
                }
                if (box6Desc) {
                    box6Desc.textContent = "ุชุญุฏูุฏ ูุชุชุจุน ูุคุดุฑุงุช ุงูุฃุฏุงุก ุงูุฑุฆูุณูุฉ. ุชูุฏูู ุชูุงุฑูุฑ ุฏูุฑูุฉ ูุชูููู ุงูุชูุฏู ูุญู ุงูุฃูุฏุงู.";
                    console.log('๐ NEW: Box 6 description translated');
                }
                
                // Row 3: Regulatory Compliance, Change Management, Ongoing Support
                // Box 7: Regulatory Compliance
                const box7Title = serviceBoxes[6].querySelector('h3');
                const box7Desc = serviceBoxes[6].querySelector('p');
                if (box7Title) {
                    box7Title.textContent = "ุงูุงูุชุซุงู ุงูุชูุธููู";
                    console.log('๐ NEW: Box 7 (Regulatory Compliance) title translated');
                }
                if (box7Desc) {
                    box7Desc.textContent = "ููู ุงูููุงุฆุญ ุงูุฎุงุตุฉ ุจุงูุตูุงุนุฉ ููุชุนุงูู ูุน ุงูุจูุงูุงุช ูุงูุชุฎุฒูู ูุงูุชุญููู. ุฅูุดุงุก ุณูุงุณุงุช ุญูููุฉ ุงูุจูุงูุงุช.";
                    console.log('๐ NEW: Box 7 description translated');
                }
                
                // Box 8: Change Management
                const box8Title = serviceBoxes[7].querySelector('h3');
                const box8Desc = serviceBoxes[7].querySelector('p');
                if (box8Title) {
                    box8Title.textContent = "ุฅุฏุงุฑุฉ ุงูุชุบููุฑ";
                    console.log('๐ NEW: Box 8 (Change Management) title translated');
                }
                if (box8Desc) {
                    box8Desc.textContent = "ุฅุฌุฑุงุก ุฌูุณุงุช ุงูุชุดุงู ูุน ุฃุตุญุงุจ ุงููุตูุญุฉ ูุชุญููู ุงูุชุฃุซูุฑ. ุฅุดุฑุงู ุฃุตุญุงุจ ุงููุตูุญุฉ ุงูุฑุฆูุณููู ูู ุนูููุฉ ุงูุชุญูููุงุช.";
                    console.log('๐ NEW: Box 8 description translated');
                }
                
                // Box 9: Ongoing Support and Maintenance
                const box9Title = serviceBoxes[8].querySelector('h3');
                const box9Desc = serviceBoxes[8].querySelector('p');
                if (box9Title) {
                    box9Title.textContent = "ุงูุฏุนู ุงููุณุชูุฑ ูุงูุตูุงูุฉ";
                    console.log('๐ NEW: Box 9 (Ongoing Support) title translated');
                }
                if (box9Desc) {
                    box9Desc.textContent = "ุชุญุฏูุซ ุฃุฏูุงุช ุงูุชุญูููุงุช ูุงูููุงุฐุฌ ุจุงูุชุธุงู. ุชูุฏูู ุงูุฏุนู ูููุดุงูู ุงูุชูููุฉ ูุชูุงูุถุงุช ุงูุจูุงูุงุช.";
                    console.log('๐ NEW: Box 9 description translated');
                }
            }
            
            // Data Analytics translations completed
        } catch (error) {
            logError('Failed to apply Data Analytics translations', error);
        }
    }
    
    // Apply Company Profile page translations - COMPLETELY NEW LOGIC
    function applyCompanyProfileTranslations(tr) {
        try {
            // Starting Company Profile translations
            
            // NEW APPROACH: Target ALL text elements and translate them systematically
            
            // 1. Find and translate the main title
            const mainTitle = document.querySelector('h3');
            if (mainTitle && mainTitle.textContent.includes('Your Partner in Business Growth')) {
                mainTitle.textContent = "Marln Corp ุงูุงุณุชุดุงุฑุงุช: ุดุฑููู ูู ููู ุงูุฃุนูุงู";
                console.log('๐ NEW: Main title translated successfully');
            }
            
            // 2. Find and translate ALL paragraphs systematically
            const allParagraphs = document.querySelectorAll('p');
            console.log('๐ NEW: Found', allParagraphs.length, 'paragraphs to translate');
            
            let translatedCount = 0;
            
            allParagraphs.forEach((paragraph, index) => {
                const text = paragraph.textContent.trim();
                
                // Skip empty or very short paragraphs
                if (!text || text.length < 20) return;
                
                // Translate based on content
                if (text.includes('Welcome to Marln Corporation')) {
                    paragraph.textContent = "ูุฑุญุจุงู ุจูู ูู ุดุฑูุฉ Marln Corporationุ ุดุฑูุฉ ุงุณุชุดุงุฑุงุช ุชูููุฉ ุฏููุงููููุฉ ูููููุฉ ูููุณุงุก ูููุฑูุง ููุทูุฉ ุฎููุฌ ุณุงู ูุฑุงูุณูุณูู ุงููุงุจุถุฉ ุจุงูุญูุงุฉ. ูุน ุงูุชุฒุงู ุจุชูููู ุงูุดุฑูุงุช ูู ุฎูุงู ุญููู ุชูููุฉ ูุจุชูุฑุฉุ ุชุฏูุฌ Marln Corporation ุงูุฎุจุฑุฉ ุงูุตูุงุนูุฉ ูุน ููุธูุฑ ูุชููุน.";
                    translatedCount++;
                    console.log('๐ NEW: Welcome paragraph translated');
                }
                else if (text.includes('Founded by a team of experienced professionals')) {
                    paragraph.textContent = "ุชุฃุณุณุช ูู ูุจู ูุฑูู ูู ุงููุญุชุฑููู ุฐูู ุงูุฎุจุฑุฉุ ูุชุฎุตุต ูู ุชูุฏูู ุฎุฏูุงุช ุชูููุฉ ูุฎุตุตุฉ ุชุฏูุน ุงูููุงุกุฉ ูุชุนุฒุฒ ุงูููู ูุชุญุณู ุงูุชููุฒ ุงูุชุดุบููู. ูููุชูุง ูู ุณุฏ ุงููุฌูุฉ ุจูู ุงูุชูููููุฌูุง ูุงูุฃุนูุงูุ ูุชุฒููุฏ ุงูุนููุงุก ุจุฑุคู ุงุณุชุฑุงุชูุฌูุฉ ูุญููู ุชูุจู ุชุญุฏูุงุชูู ุงููุฑูุฏุฉ.";
                    translatedCount++;
                    console.log('๐ NEW: Founded paragraph translated');
                }
                else if (text.includes('At Marln Corporation, we believe in the power of collaboration')) {
                    paragraph.textContent = "ูู Marln Corporationุ ูุคูู ุจููุฉ ุงูุชุนุงูู ูุงูุดูููุ ููุญู ููุชุฒููู ุจูุณุงุนุฏุฉ ุงูููุธูุงุช ุนูู ุงูุงุฒุฏูุงุฑ ูู ุงููุดูุฏ ุงูุฑููู ุณุฑูุน ุงูุฎุทู ุงูููู. ุงูุถู ุฅูููุง ููุญู ูุนูุฏ ุชุนุฑูู ูุณุชูุจู ุงูุงุณุชุดุงุฑุงุช ุงูุชูููุฉุ ุญู ูุงุญุฏ ูู ูู ูุฑุฉ.";
                    translatedCount++;
                    console.log('๐ NEW: Collaboration paragraph translated');
                }
                else if (text.includes('Marln Corp is based in Cupertino')) {
                    paragraph.textContent = "Marln Corp ููุฑูุง ูู Cupertino (ููุทูุฉ ุฎููุฌ ุณุงู ูุฑุงูุณูุณูู)ุ ูุงููููุฑููุง. ูุฏููุง ููุงุชุจ ุดุฑููุฉ ูู ุงูููุฏ ูุณูุบุงููุฑุฉ ูููุฏุง ูุฃููุงููุง.";
                    translatedCount++;
                    console.log('๐ NEW: Location paragraph translated');
                }
                else if (text.includes('The name "Marln" embodies a powerful narrative')) {
                    paragraph.textContent = "ุงุณู \"Marln\" ูุฌุณุฏ ุฑูุงูุฉ ูููุฉ ุชุฑูุฒ ุนูู ุงูุตูุงุช ุงูุชู ุชุนูุณ ุงูุชุฒุงู ุงูุดุฑูุฉ ุจุชูููู ุงููุณุงุก ูู ุงูุชูููููุฌูุง ูุชุนุฒูุฒ ุจูุฆุฉ ูุชููุนุฉ ูุดุงููุฉ.";
                    translatedCount++;
                    console.log('๐ NEW: Name explanation paragraph translated');
                }
                else if (text.includes('M stands for Mentorship')) {
                    paragraph.textContent = "M ุชุนูู ุงูุชูุฌููุ ููุง ูุจุฑุฒ ุงูุชุฒุงู Marln ุจุฏุนู ูุชูุฌูู ุงููุณุงุก ูู ุฑุญูุงุชูู ุงูููููุฉ. ุงูุดุฑูุฉ ุชุนุทู ุงูุฃููููุฉ ูุจุฑุงูุฌ ุงูุชูุฌูู ุงูุชู ุชูููู ุงูููุงูุจ ุงููุณุงุฆูุฉุ ููุง ูุถูู ุญุตูููู ุนูู ุงูููุงุฑุฏ ูุงูุชุดุฌูุน ุงููุงุฒููู ููุงุฒุฏูุงุฑ ูู ุตูุงุนุฉ ุงูุชูููููุฌูุง.";
                    translatedCount++;
                    console.log('๐ NEW: Mentorship paragraph translated');
                }
                else if (text.includes('A represents Advocacy')) {
                    paragraph.textContent = "A ุชูุซู ุงูุฏุนูุฉุ ุญูุซ ุชุฏุงูุน Marln ุจูุดุงุท ุนู ุชูุฏู ุงููุณุงุก ูู ุงูุชูููููุฌูุง. ูู ุฎูุงู ุงูุฏุนูุฉ ููุฑุต ุนุงุฏูุฉ ูุชูุซููุ ุชุณุนู Marln ุฅูู ูุณุฑ ุงูุญูุงุฌุฒ ูุฅูุดุงุก ููุฉ ุนุงููุฉ ุฃูุซุฑ ุดูููุงู.";
                    translatedCount++;
                    console.log('๐ NEW: Advocacy paragraph translated');
                }
                else if (text.includes('R signifies Resilience')) {
                    paragraph.textContent = "R ุชุนูู ุงููุฑููุฉุ ููุง ูุนูุณ ููุฉ ูุชุตููู ุงููุณุงุก ุงูููุงุชู ูุชูููู ูู ุชุญุฏูุงุช ุงููุดูุฏ ุงูุชููู. Marln ููุชุฒูุฉ ุจุชุนุฒูุฒ ุจูุฆุฉ ุญูุซ ูุชู ุงูุงุญุชูุงู ุจุงููุฑููุฉุ ููุง ูููู ุงููุณุงุก ููุชุบูุจ ุนูู ุงูุนูุจุงุช ูุชุญููู ุฃูุฏุงููู.";
                    translatedCount++;
                    console.log('๐ NEW: Resilience paragraph translated');
                }
                else if (text.includes('L stands for Leadership')) {
                    paragraph.textContent = "L ุชุนูู ุงูููุงุฏุฉุ ููุง ูุคูุฏ ุนูู ุฃูููุฉ ุงูููุงุฏุฉ ุงููุณุงุฆูุฉ ุฏุงุฎู ุงูููุธูุฉ ูุงููุทุงุน ุงูุชููู ููู. Marln ุชุฒุฑุน ุซูุงูุฉ ูุง ุชุนุฒุฒ ุงููุณุงุก ูู ุงูุฃุฏูุงุฑ ุงูููุงุฏูุฉ ูุญุณุจุ ุจู ุชูููููู ูู ุงูููุงุฏุฉ ุจุซูุฉ ูุฑุคูุฉ.";
                    translatedCount++;
                    console.log('๐ NEW: Leadership paragraph translated');
                }
                else if (text.includes('N embodies Nurturing')) {
                    paragraph.textContent = "N ุชุฌุณุฏ ุงูุฑุนุงูุฉุ ููุง ููุซู ุงูุชุฒุงู Marln ุจุฅูุดุงุก ูุฌุชูุน ุฏุงุนู ูููุณุงุก ูู ุงูุชูููููุฌูุง. ูู ุฎูุงู ุฑุนุงูุฉ ุงูููุงูุจ ูุชุดุฌูุน ุงูุชุนุงููุ Marln ุชุนุฒุฒ ุจูุฆุฉ ุญูุซ ูููู ูููุณุงุก ุงูุงุฒุฏูุงุฑ ูุฏูุน ุงูุงุจุชูุงุฑ.";
                    translatedCount++;
                    console.log('๐ NEW: Nurturing paragraph translated');
                }
                else if (text.includes('Together, these qualities encapsulate the spirit of Marln Corporation')) {
                    paragraph.textContent = "ูุนุงูุ ูุฐู ุงูุตูุงุช ุชุฌุณุฏ ุฑูุญ Marln Corporationุ ูุชูุฌู ูููุชูุง ูุชูููู ุงููุณุงุก ูู ุฎูุงู ุญููู ุงุณุชุดุงุฑุงุช ุชูููุฉ ูุจุชูุฑุฉ ูุน ุงูุฏุนูุฉ ููุณุชูุจู ุฃูุซุฑ ุฅูุตุงูุงู ูุดูููุงู ูู ุงูุชูููููุฌูุง.";
                    translatedCount++;
                    console.log('๐ NEW: Final paragraph translated');
                }
            });
            
            // 3. Find and translate any headings
            const allHeadings = document.querySelectorAll('h1, h2, h3, h4, h5, h6');
            let headingTranslatedCount = 0;
            
            allHeadings.forEach((heading, index) => {
                const text = heading.textContent.trim();
                
                if (text.includes('Company Profile')) {
                    heading.textContent = "ููู ุงูุดุฑูุฉ";
                    headingTranslatedCount++;
                    console.log('๐ NEW: Company Profile heading translated');
                }
                else if (text.includes('About')) {
                    heading.textContent = "ูู ูุญู";
                    headingTranslatedCount++;
                    console.log('๐ NEW: About heading translated');
                }
                else if (text.includes('Mission')) {
                    heading.textContent = "ูููุชูุง";
                    headingTranslatedCount++;
                    console.log('๐ NEW: Mission heading translated');
                }
                else if (text.includes('Vision')) {
                    heading.textContent = "ุฑุคูุชูุง";
                    headingTranslatedCount++;
                    console.log('๐ NEW: Vision heading translated');
                }
                else if (text.includes('Values')) {
                    heading.textContent = "ููููุง";
                    headingTranslatedCount++;
                    console.log('๐ NEW: Values heading translated');
                }
                else if (text.includes('Team')) {
                    heading.textContent = "ูุฑูููุง";
                    headingTranslatedCount++;
                    console.log('๐ NEW: Team heading translated');
                }
            });
            
            // Translation completed silently
        } catch (error) {
            logError('Failed to apply Company Profile translations', error);
        }
    }

    // Apply Corporate Social Responsibility page translations - NEW LOGIC
    function applyCSRTranslations(tr) {
        try {
            // Starting CSR page translations
            
            // NEW APPROACH: Target ALL text elements and translate them systematically
            
            // 1. Find and translate the main hero title
            const heroTitle = document.querySelector('h1');
            if (heroTitle && heroTitle.textContent.includes('Corporate Social Responsibility')) {
                heroTitle.textContent = "ุงููุณุคูููุฉ ุงูุงุฌุชูุงุนูุฉ ููุดุฑูุงุช";
                console.log('๐ NEW: Hero title translated successfully');
            }
            
            // 2. Find and translate the hero description
            const heroDescription = document.querySelector('.hero-section p');
            if (heroDescription && heroDescription.textContent.includes('Learn about Marln')) {
                heroDescription.textContent = "ุชุนุฑู ุนูู ุงูุชุฒุงู Marln ุจุงููุณุคูููุฉ ุงูุงุฌุชูุงุนูุฉ ููุดุฑูุงุชุ ุจูุง ูู ุฐูู ูุจุงุฏุฑุงุชูุง ูุชุนุฒูุฒ ุงูุชููุน ูุฏุนู ุงููุฌุชูุนุงุช.";
                console.log('๐ NEW: Hero description translated successfully');
            }
            
            // 3. Find and translate ALL headings systematically
            const allHeadings = document.querySelectorAll('h2, h3, h4');
            let headingTranslatedCount = 0;
            
            allHeadings.forEach((heading, index) => {
                const text = heading.textContent.trim();
                
                if (text.includes('Our CSR Initiatives')) {
                    heading.textContent = "ูุจุงุฏุฑุงุช ุงููุณุคูููุฉ ุงูุงุฌุชูุงุนูุฉ ููุดุฑูุงุช";
                    headingTranslatedCount++;
                    console.log('๐ NEW: CSR Initiatives heading translated');
                }
                else if (text.includes('Our Commitment to a Better Tomorrow')) {
                    heading.textContent = "ุงูุชุฒุงููุง ุจุบุฏ ุฃูุถู";
                    headingTranslatedCount++;
                    console.log('๐ NEW: Commitment heading translated');
                }
                else if (text.includes('Focus Areas')) {
                    heading.textContent = "ูุฌุงูุงุช ุงูุชุฑููุฒ";
                    headingTranslatedCount++;
                    console.log('๐ NEW: Focus Areas heading translated');
                }
                else if (text.includes('Flagship Initiatives')) {
                    heading.textContent = "ุงููุจุงุฏุฑุงุช ุงูุฑุฆูุณูุฉ";
                    headingTranslatedCount++;
                    console.log('๐ NEW: Flagship Initiatives heading translated');
                }
                else if (text.includes('Kick Start Your Project Right Now')) {
                    heading.textContent = "ุงุจุฏุฃ ูุดุฑูุนู ุงูุขู";
                    headingTranslatedCount++;
                    console.log('๐ NEW: Contact section heading translated');
                }
            });
            
            // 4. Find and translate ALL paragraphs systematically
            const allParagraphs = document.querySelectorAll('p');
            console.log('๐ NEW: Found', allParagraphs.length, 'paragraphs to translate');
            
            let translatedCount = 0;
            
            allParagraphs.forEach((paragraph, index) => {
                const text = paragraph.textContent.trim();
                
                // Skip empty or very short paragraphs
                if (!text || text.length < 20) return;
                
                // Translate based on content
                if (text.includes('Comprehensive programs designed to create positive impact')) {
                    paragraph.textContent = "ุจุฑุงูุฌ ุดุงููุฉ ูุตููุฉ ูุฎูู ุชุฃุซูุฑ ุฅูุฌุงุจู ุนุจุฑ ุงููุฌุชูุนุงุช ูุงูุจูุฆุงุช.";
                    translatedCount++;
                    console.log('๐ NEW: CSR Initiatives description translated');
                }
                else if (text.includes('We believe businesses have a responsibility to create positive change')) {
                    paragraph.textContent = "ูุญู ูุคูู ุจุฃู ุงูุดุฑูุงุช ูุฏููุง ูุณุคูููุฉ ูุฎูู ุชุบููุฑ ุฅูุฌุงุจู ููุฃุดุฎุงุต ูุงููุฌุชูุนุงุช ูุงููููุจ.";
                    translatedCount++;
                    console.log('๐ NEW: Commitment description translated');
                }
                else if (text.includes('Our key programs that drive meaningful change')) {
                    paragraph.textContent = "ุจุฑุงูุฌูุง ุงูุฑุฆูุณูุฉ ุงูุชู ุชุฏูุน ุงูุชุบููุฑ ุงููุงุฏู ูุชุฎูู ุชุฃุซูุฑุงู ุฏุงุฆูุงู.";
                    translatedCount++;
                    console.log('๐ NEW: Flagship Initiatives description translated');
                }
            });
            
            // 5. Find and translate ALL service boxes and cards systematically
            const allServiceBoxes = document.querySelectorAll('.service-box, .csr-card');
            console.log('๐ NEW: Found', allServiceBoxes.length, 'service boxes/cards to translate');
            
            let serviceBoxTranslatedCount = 0;
            
            allServiceBoxes.forEach((box, index) => {
                const title = box.querySelector('h3, h4');
                const description = box.querySelector('p');
                
                if (title && description) {
                    const titleText = title.textContent.trim();
                    const descText = description.textContent.trim();
                    
                    // Translate Diversity Programs
                    if (titleText.includes('Diversity Programs')) {
                        title.textContent = "ุจุฑุงูุฌ ุงูุชููุน";
                        description.textContent = "ุจุฑุงูุฌ ุดุงููุฉ ูุตููุฉ ูุชุนุฒูุฒ ุงูุชููุน ูุงูุดููู ูู ูุทุงุน ุงูุชูููููุฌูุง.";
                        serviceBoxTranslatedCount++;
                        console.log('๐ NEW: Diversity Programs translated');
                    }
                    // Translate Community Support
                    else if (titleText.includes('Community Support')) {
                        title.textContent = "ุฏุนู ุงููุฌุชูุน";
                        description.textContent = "ูุดุงุฑูุฉ ูุดุทุฉ ูู ูุจุงุฏุฑุงุช ุงููุฌุชูุน ูุงูุจุฑุงูุฌ ุงูุฎูุฑูุฉ ุงูุชู ุชุญุฏุซ ุชุฃุซูุฑุงู ุฅูุฌุงุจูุงู.";
                        serviceBoxTranslatedCount++;
                        console.log('๐ NEW: Community Support translated');
                    }
                    // Translate Environmental Responsibility
                    else if (titleText.includes('Environmental Responsibility')) {
                        title.textContent = "ุงููุณุคูููุฉ ุงูุจูุฆูุฉ";
                        description.textContent = "ุงูุชุฒุงู ุจุงูููุงุฑุณุงุช ุงููุณุชุฏุงูุฉ ูุงููุณุคูููุฉ ุงูุจูุฆูุฉ ูู ุฌููุน ุนูููุงุชูุง.";
                        serviceBoxTranslatedCount++;
                        console.log('๐ NEW: Environmental Responsibility translated');
                    }
                    // Translate Environment focus area
                    else if (titleText.includes('Environment')) {
                        title.textContent = "ุงูุจูุฆุฉ";
                        description.textContent = "ููุชุฒููู ุจุชูููู ุจุตูุชูุง ุงููุฑุจูููุฉ ูุชุนุฒูุฒ ุงูููุงุฑุณุงุช ุงููุณุชุฏุงูุฉ ุนุจุฑ ุฌููุน ุงูุนูููุงุช.";
                        serviceBoxTranslatedCount++;
                        console.log('๐ NEW: Environment focus area translated');
                    }
                    // Translate Community focus area
                    else if (titleText.includes('Community') && descText.includes('Supporting local communities')) {
                        title.textContent = "ุงููุฌุชูุน";
                        description.textContent = "ุฏุนู ุงููุฌุชูุนุงุช ุงููุญููุฉ ูู ุฎูุงู ุจุฑุงูุฌ ุงูุชุทูุน ูุงูุชุจุฑุนุงุช ุงูุฎูุฑูุฉ ูุดุฑุงูุงุช ุงููุฌุชูุน.";
                        serviceBoxTranslatedCount++;
                        console.log('๐ NEW: Community focus area translated');
                    }
                    // Translate Education focus area
                    else if (titleText.includes('Education')) {
                        title.textContent = "ุงูุชุนููู";
                        description.textContent = "ุงูุงุณุชุซูุงุฑ ูู ุงููุจุงุฏุฑุงุช ุงูุชุนููููุฉ ูุชูููุฑ ูุฑุต ูุชุทููุฑ ุงูููุงุฑุงุช ูุงูุชุนูู.";
                        serviceBoxTranslatedCount++;
                        console.log('๐ NEW: Education focus area translated');
                    }
                    // Translate Ethics & Governance focus area
                    else if (titleText.includes('Ethics & Governance')) {
                        title.textContent = "ุงูุฃุฎูุงู ูุงูุญูููุฉ";
                        description.textContent = "ุงูุญูุงุธ ุนูู ุฃุนูู ูุนุงููุฑ ุงูููุงุฑุณุงุช ุงูุชุฌุงุฑูุฉ ุงูุฃุฎูุงููุฉ ูุงูุญูููุฉ ุงูุดูุงูุฉ.";
                        serviceBoxTranslatedCount++;
                        console.log('๐ NEW: Ethics & Governance focus area translated');
                    }
                    // Translate Green Future Project
                    else if (titleText.includes('Green Future Project')) {
                        title.textContent = "ูุดุฑูุน ุงููุณุชูุจู ุงูุฃุฎุถุฑ";
                        description.textContent = "ูุจุงุฏุฑุชูุง ุงูุจูุฆูุฉ ุงูุดุงููุฉ ุงูุชู ุชุฑูุฒ ุนูู ุชูููู ุงูุงูุจุนุงุซุงุช ุงููุฑุจูููุฉ ูุชูููุฐ ุญููู ุงูุทุงูุฉ ุงููุชุฌุฏุฏุฉ ูุชุนุฒูุฒ ุงูููุงุฑุณุงุช ุงูุชุฌุงุฑูุฉ ุงููุณุชุฏุงูุฉ ุนุจุฑ ุฌููุน ุงูุนูููุงุช.";
                        serviceBoxTranslatedCount++;
                        console.log('๐ NEW: Green Future Project translated');
                    }
                    // Translate Tech for All
                    else if (titleText.includes('Tech for All')) {
                        title.textContent = "ุงูุชูููููุฌูุง ููุฌููุน";
                        description.textContent = "ุณุฏ ุงููุฌูุฉ ุงูุฑูููุฉ ูู ุฎูุงู ุชูููุฑ ุงููุตูู ููุชูููููุฌูุง ูุชุฏุฑูุจ ูุญู ุงูุฃููุฉ ุงูุฑูููุฉ ููุฑุต ุงูุชุนููู ูู ุงูุนููู ูุงูุชูููููุฌูุง ูุงูููุฏุณุฉ ูุงูุฑูุงุถูุงุช ูููุฌุชูุนุงุช ุงููุญุฑููุฉ.";
                        serviceBoxTranslatedCount++;
                        console.log('๐ NEW: Tech for All translated');
                    }
                    // Translate Community Care Drive
                    else if (titleText.includes('Community Care Drive')) {
                        title.textContent = "ูุจุงุฏุฑุฉ ุฑุนุงูุฉ ุงููุฌุชูุน";
                        description.textContent = "ุฏุนู ุงููุฌุชูุนุงุช ุงููุญููุฉ ูู ุฎูุงู ุญููุงุช ุงูุทุนุงู ูุงููุจุงุฏุฑุงุช ุงูุตุญูุฉ ูุจุฑุงูุฌ ุงูุฅุบุงุซุฉ ุงูุทุงุฑุฆุฉ ุจุงูุดุฑุงูุฉ ูุน ุงูููุธูุงุช ุงููุญููุฉ.";
                        serviceBoxTranslatedCount++;
                        console.log('๐ NEW: Community Care Drive translated');
                    }
                }
            });
            
            // Translation completed silently
        } catch (error) {
            logError('Failed to apply CSR translations', error);
        }
    }

    // Apply Technology Partners page translations - NEW LOGIC
    function applyTechnologyPartnersTranslations(tr) {
        try {
            // NEW APPROACH: Target ALL text elements and translate them systematically
            
            // 1. Find and translate the main title
            const mainTitle = document.querySelector('.tech-partners-title span');
            if (mainTitle && mainTitle.textContent.includes('OUR TECHNOLOGY PARTNERS')) {
                mainTitle.textContent = "ุดุฑูุงุคูุง ูู ุงูุชูููููุฌูุง";
            }
            
            // 2. Find and translate ALL partner cards systematically
            const allPartnerCards = document.querySelectorAll('.partner-card-enhanced');
            
            let partnerCardTranslatedCount = 0;
            
            allPartnerCards.forEach((card, index) => {
                const title = card.querySelector('.partner-title');
                const description = card.querySelector('.partner-desc');
                
                if (title && description) {
                    const titleText = title.textContent.trim();
                    const descText = description.textContent.trim();
                    
                    // Translate Automation Anywhere
                    if (titleText.includes('Automation Anywhere')) {
                        title.textContent = "ุฃุชูุชุฉ ูู ูู ููุงู";
                        description.textContent = "ุญููู ุฃุชูุชุฉ ุงูุนูููุงุช ุงูุฑูุจูุชูุฉ";
                        partnerCardTranslatedCount++;
                    }
                    // Translate AWS
                    else if (titleText.includes('AWS')) {
                        title.textContent = "AWS";
                        description.textContent = "ุงูุจููุฉ ุงูุชุญุชูุฉ ุงูุณุญุงุจูุฉ";
                        partnerCardTranslatedCount++;
                    }
                    // Translate Microsoft
                    else if (titleText.includes('Microsoft')) {
                        title.textContent = "ูุงููุฑูุณููุช";
                        description.textContent = "ุงูุญููู ุงููุคุณุณูุฉ";
                        partnerCardTranslatedCount++;
                    }
                    // Translate Google
                    else if (titleText.includes('Google')) {
                        title.textContent = "ุฌูุฌู";
                        description.textContent = "ุงูุฐูุงุก ุงูุงุตุทูุงุนู ูุงูุชุญูููุงุช";
                        partnerCardTranslatedCount++;
                    }
                    // Translate Oracle
                    else if (titleText.includes('Oracle')) {
                        title.textContent = "ุฃูุฑุงูู";
                        description.textContent = "ูุงุนุฏุฉ ุงูุจูุงูุงุช ูุงูุณุญุงุจุฉ";
                        partnerCardTranslatedCount++;
                    }
                    // Translate Databricks
                    else if (titleText.includes('Databricks')) {
                        title.textContent = "ุฏุงุชุงุจุฑููุณ";
                        description.textContent = "ููุตุฉ ุงูุจูุงูุงุช ูุงูุฐูุงุก ุงูุงุตุทูุงุนู";
                        partnerCardTranslatedCount++;
                    }
                }
            });
            
            // 3. Find and translate any other headings or text
            const allHeadings = document.querySelectorAll('h1, h2, h3, h4, h5, h6');
            let headingTranslatedCount = 0;
            
            allHeadings.forEach((heading, index) => {
                const text = heading.textContent.trim();
                
                if (text.includes('Technology Partners')) {
                    heading.textContent = "ุดุฑูุงุก ุงูุชูููููุฌูุง";
                    headingTranslatedCount++;
                }
                else if (text.includes('Strategic Technology Alliances')) {
                    heading.textContent = "ุงูุชุญุงููุงุช ุงูุชูููููุฌูุฉ ุงูุงุณุชุฑุงุชูุฌูุฉ";
                    headingTranslatedCount++;
                }
                else if (text.includes('Kick Start Your Project Right Now')) {
                    heading.textContent = "ุงุจุฏุฃ ูุดุฑูุนู ุงูุขู";
                    headingTranslatedCount++;
                }
            });
            
            // 4. Find and translate any paragraphs with descriptions
            const allParagraphs = document.querySelectorAll('p');
            
            let translatedCount = 0;
            
            allParagraphs.forEach((paragraph, index) => {
                const text = paragraph.textContent.trim();
                
                // Skip empty or very short paragraphs
                if (!text || text.length < 20) return;
                
                // Translate based on content
                if (text.includes('Strategic partnerships with leading technology providers')) {
                    paragraph.textContent = "ุดุฑุงูุงุช ุงุณุชุฑุงุชูุฌูุฉ ูุน ูุฒูุฏู ุงูุชูููููุฌูุง ุงูุฑุงุฆุฏูู ูุชูุฏูู ุญููู ุดุงููุฉ ูุงุจุชูุงุฑุงุช ูุชุทูุฑุฉ.";
                    translatedCount++;
                }
                else if (text.includes('Well done!')) {
                    paragraph.textContent = "ุฃุญุณูุช!";
                    translatedCount++;
                }
                else if (text.includes('We will contact you in the next few hours')) {
                    paragraph.textContent = "ุณูุชูุงุตู ูุนู ูู ุงูุณุงุนุงุช ุงููุงุฏูุฉ ุฃู ููููู ุชุญุฏูุฏ ููุนุฏ ุงูุขู.";
                    translatedCount++;
                }
                else if (text.includes('Schedule a meeting')) {
                    paragraph.textContent = "ุญุฏุฏ ููุนุฏ";
                    translatedCount++;
                }
            });
            
            // 5. Find and translate form placeholders
            const allInputs = document.querySelectorAll('input, textarea');
            let inputTranslatedCount = 0;
            
            allInputs.forEach((input, index) => {
                const placeholder = input.getAttribute('placeholder');
                const value = input.getAttribute('value');
                
                if (placeholder) {
                    if (placeholder.includes('Name*')) {
                        input.setAttribute('placeholder', 'ุงูุงุณู*');
                        inputTranslatedCount++;
                        console.log('๐ NEW: Name placeholder translated');
                    }
                    else if (placeholder.includes('E-mail*')) {
                        input.setAttribute('placeholder', 'ุงูุจุฑูุฏ ุงูุฅููุชุฑููู*');
                        inputTranslatedCount++;
                        console.log('๐ NEW: Email placeholder translated');
                    }
                    else if (placeholder.includes('Tell about your project')) {
                        input.setAttribute('placeholder', 'ุฃุฎุจุฑูุง ุนู ูุดุฑูุนู');
                        inputTranslatedCount++;
                        console.log('๐ NEW: Message placeholder translated');
                    }
                }
                
                if (value && value.includes('send message')) {
                    input.setAttribute('value', 'ุฅุฑุณุงู ุงูุฑุณุงูุฉ');
                    inputTranslatedCount++;
                    console.log('๐ NEW: Send message button translated');
                }
            });
            
            // Translation completed silently
        } catch (error) {
            logError('Failed to apply Technology Partners translations', error);
        }
    }
    
    // Export functions for manual use
    window.setLanguage = setLanguage;
    window.getSavedLang = getSavedLang;
    window.updateDropdownMenus = updateDropdownMenus;
    window.applyAboutUsTranslations = applyAboutUsTranslations;
    window.applyAIConsultingTranslations = applyAIConsultingTranslations;
    window.applyEngineeringServicesTranslations = applyEngineeringServicesTranslations;
    window.applyDataAnalyticsTranslations = applyDataAnalyticsTranslations;
    window.applyCompanyProfileTranslations = applyCompanyProfileTranslations;
    window.applyCSRTranslations = applyCSRTranslations;
    window.applyTechnologyPartnersTranslations = applyTechnologyPartnersTranslations;
    window.applyIndustryTranslations = applyIndustryTranslations;
    
    // Unified Language System: Ready!

    // Note: English reversion is now handled by page refresh for reliability

    // Store original English content when page loads
    function storeOriginalContent() {
        try {
            console.log('๐พ Storing original English content...');
            
            // Store header content
            const headerElements = document.querySelectorAll('.header--menu__list a, .burger-menu__left-bar__list a, .burger-menu__right-bar__list a, .dropdown-menu a');
            headerElements.forEach((element, index) => {
                if (!window.originalEnglishContent.header) window.originalEnglishContent.header = {};
                window.originalEnglishContent.header[`element_${index}`] = {
                    text: element.textContent.trim(),
                    href: element.getAttribute('href'),
                    element: element
                };
            });
            
            // Store contact and footer content
            const contactElements = document.querySelectorAll('.contact-us--form--title, .contact-us--info h3, .contact-us--info p, .footer h3, .footer p, .footer a');
            contactElements.forEach((element, index) => {
                if (!window.originalEnglishContent.contactFooter) window.originalEnglishContent.contactFooter = {};
                window.originalEnglishContent.contactFooter[`element_${index}`] = {
                    text: element.textContent.trim(),
                    element: element
                };
            });
            
            // Store page-specific content based on current page
            if (document.querySelector('.services-hero-section-v_2')) {
                storeIndexOriginalContent();
            } else if (document.querySelector('main.industry-content')) {
                storeIndustryOriginalContent();
            } else if (document.querySelector('main.about-content')) {
                storeAboutUsOriginalContent();
            } else if (document.querySelector('main.ai-consulting-content')) {
                storeAIConsultingOriginalContent();
            } else if (document.querySelector('main.engineering-content')) {
                storeEngineeringServicesOriginalContent();
            } else if (document.querySelector('main.data-analytics-content')) {
                storeDataAnalyticsOriginalContent();
            } else if (document.querySelector('main.company-profile-content')) {
                storeCompanyProfileOriginalContent();
            } else if (document.querySelector('main.csr-content')) {
                storeCSROriginalContent();
            } else if (document.querySelector('main.technology-partners-content')) {
                storeTechnologyPartnersOriginalContent();
            } else if (document.querySelector('section.company-profile-section')) {
                storeCompanyProfileOriginalContent();
            }
            
            console.log('๐พ Original English content stored successfully');
        } catch (error) {
            logError('Failed to store original content', error);
        }
    }

    // Apply Industry page translations - NEW LOGIC
    function applyIndustryTranslations(tr) {
        try {
            // Starting Industry page translations
            
            // NEW APPROACH: Target ALL text elements and translate them systematically
            
            // 1. Find and translate the main title
            const mainTitle = document.querySelector('.industry-title span');
            if (mainTitle && mainTitle.textContent.includes('INDUSTRY SOLUTIONS')) {
                mainTitle.textContent = "ุญููู ุงูุตูุงุนุฉ";
                console.log('๐ NEW: Main title translated successfully');
            }
            
            // 2. Find and translate ALL industry cards systematically
            const allIndustryCards = document.querySelectorAll('.industry-card');
            console.log('๐ NEW: Found', allIndustryCards.length, 'industry cards to translate');
            
            let industryCardTranslatedCount = 0;
            
            allIndustryCards.forEach((card, index) => {
                const title = card.querySelector('h3');
                const description = card.querySelector('p');
                const button = card.querySelector('.contact-scroll-btn');
                
                if (title && description) {
                    const titleText = title.textContent.trim();
                    const descText = description.textContent.trim();
                    
                    // Translate Automotive
                    if (titleText.includes('Automotive')) {
                        title.textContent = "ุงูุณูุงุฑุงุช";
                        description.textContent = "ุตูุงุนุฉ ุงูุณูุงุฑุงุช ุชุชุทูุฑ ุจุงุณุชูุฑุงุฑุ ูุน ุธููุฑ ุชูููุงุช ุฌุฏูุฏุฉ ูุซู ุงููุฑูุจุงุช ุงููุณุชููุฉ ูุงููุฑูุจุงุช ุงูููุฑุจุงุฆูุฉ ูุฃูุธูุฉ ุงููุณุงุนุฏุฉ ุงููุชูุฏูุฉ ููุณุงุฆู (ADAS).";
                        if (button) button.textContent = "ุงุณุชูุดู ุงูุญููู";
                        industryCardTranslatedCount++;
                        console.log('๐ NEW: Automotive translated');
                    }
                    // Translate Banking
                    else if (titleText.includes('Banking')) {
                        title.textContent = "ุงูุฎุฏูุงุช ุงููุตุฑููุฉ";
                        description.textContent = "ุญููู ุงูุชูุธูู ุงูุชูููููุฌู ุงููุตุฑููุฉ ูู ูููู ุญุงุณู ูู ุตูุงุนุฉ ุงูุฎุฏูุงุช ุงููุตุฑููุฉ. ุชุญุชุงุฌ ุงูุจููู ุฅูู ุงูุฃุดุฎุงุต ุงูููุงุณุจูู ูุชุทููุฑ ูุชูููุฐ ูุตูุงูุฉ ุฃูุธูุชูุง ุงูุชูููููุฌูุฉ.";
                        if (button) button.textContent = "ุงุณุชูุดู ุงูุญููู";
                        industryCardTranslatedCount++;
                        console.log('๐ NEW: Banking translated');
                    }
                    // Translate Consumer Goods & Services
                    else if (titleText.includes('Consumer Goods & Services')) {
                        title.textContent = "ุงูุณูุน ูุงูุฎุฏูุงุช ุงูุงุณุชููุงููุฉ";
                        description.textContent = "ูููู ูุดุฑูุฉ Marln Corp ูุณุงุนุฏุฉ ุดุฑูุงุช CGS ูู ุงูุนุซูุฑ ุนูู ูุชุฎุตุตูู ูุคูููู ูุชูุธูููู ุจูุฐู ุงูููุงุฑุงุช ุงููุทููุจุฉ. ูููู ูููุงูุงุช ุงูุชูุธูู ุฃูุถุงู ุชูููุฑ ุฎูุงุฑุงุช ุงูุชูุธูู ุงููุคูุช ูุงูุนููุฏ.";
                        if (button) button.textContent = "ุงุณุชูุดู ุงูุญููู";
                        industryCardTranslatedCount++;
                        console.log('๐ NEW: Consumer Goods & Services translated');
                    }
                    // Translate Communications & Media
                    else if (titleText.includes('Communications & Media')) {
                        title.textContent = "ุงูุงุชุตุงูุงุช ูุงูุฅุนูุงู";
                        description.textContent = "ุฅูุชุงุฌ ูุชุญุฑูุฑ ุงูููุฏูู: ูุน ุชุฒุงูุฏ ุงูุทูุจ ุนูู ูุญุชูู ุงูููุฏูู ุนุจุฑ ููุตุงุช ูุฎุชููุฉุ ุฃุตุจุญุช ููุงุฑุงุช ุฅูุชุงุฌ ูุชุญุฑูุฑ ุงูููุฏูู ุฃูุซุฑ ูููุฉ.";
                        if (button) button.textContent = "ุงุณุชูุดู ุงูุญููู";
                        industryCardTranslatedCount++;
                        console.log('๐ NEW: Communications & Media translated');
                    }
                    // Translate Healthcare
                    else if (titleText.includes('Healthcare')) {
                        title.textContent = "ุงูุฑุนุงูุฉ ุงูุตุญูุฉ";
                        description.textContent = "ุงูุณุฌูุงุช ุงูุตุญูุฉ ุงูุฅููุชุฑูููุฉ (EHR) ูุชูููููุฌูุง ุงููุนูููุงุช ุงูุตุญูุฉ (HIT): ุงูููุงุกุฉ ูู ุฃูุธูุฉ EHR ูุฃุฏูุงุช HIT ุถุฑูุฑูุฉ ูุฅุฏุงุฑุฉ ุณุฌูุงุช ุงููุฑุถู ูุถูุงู ุงูุงูุชุซุงู.";
                        if (button) button.textContent = "ุงุณุชูุดู ุงูุญููู";
                        industryCardTranslatedCount++;
                        console.log('๐ NEW: Healthcare translated');
                    }
                    // Translate Hi-Tech
                    else if (titleText.includes('Hi-Tech')) {
                        title.textContent = "ุงูุชูููููุฌูุง ุงููุชูุฏูุฉ";
                        description.textContent = "ุชุนุชูุฏ ุงูุดุฑูุงุช ุนุงููุฉ ุงูุชูููุฉ ุจุดูู ูุจูุฑ ุนูู ุงููุชุฎุตุตูู ุงูููุฑุฉ ุฐูู ุงูุฎุจุฑุฉ ูู ูุฌุงูุงุช ุชูููุฉ ูุฎุชููุฉ ูุชุทููุฑ ูุชูููุฐ ูุตูุงูุฉ ุงูููุชุฌุงุช ูุงูุฎุฏูุงุช ุงููุจุชูุฑุฉ.";
                        if (button) button.textContent = "ุงุณุชูุดู ุงูุญููู";
                        industryCardTranslatedCount++;
                        console.log('๐ NEW: Hi-Tech translated');
                    }
                    // Translate Life Sciences
                    else if (titleText.includes('Life Sciences')) {
                        title.textContent = "ุนููู ุงูุญูุงุฉ";
                        description.textContent = "ุชุนุชูุฏ ุดุฑูุงุช ุนููู ุงูุญูุงุฉ ุนูู ูุฌููุนุฉ ูุชููุนุฉ ูู ุงููุชุฎุตุตูู ุงูููุฑุฉ ุฐูู ุงูุฎุจุฑุฉ ูู ูุฌุงูุงุช ุชูููุฉ ูุฎุชููุฉ ูุฅุญุฑุงุฒ ุชูุฏู ูู ุงูุทุจ ูุงูุชูููููุฌูุง ุงูุญูููุฉ.";
                        if (button) button.textContent = "ุงุณุชูุดู ุงูุญููู";
                        industryCardTranslatedCount++;
                        console.log('๐ NEW: Life Sciences translated');
                    }
                    // Translate Public Service
                    else if (titleText.includes('Public Service')) {
                        title.textContent = "ุงูุฎุฏูุฉ ุงูุนุงูุฉ";
                        description.textContent = "ุงููุทุงุน ุงูุนุงู ูุนุชูุฏ ุจุดูู ูุชุฒุงูุฏ ุนูู ุงูุชูููููุฌูุง ูุชุญููู ุฃูุฏุงููุ ููุฐุง ุงูุทูุจ ุนูู ุงูููุงุฑุงุช ุงูุชูููุฉ ุณูููู ููุท ูู ุงูุณููุงุช ุงููุงุฏูุฉ.";
                        if (button) button.textContent = "ุงุณุชูุดู ุงูุญููู";
                        industryCardTranslatedCount++;
                        console.log('๐ NEW: Public Service translated');
                    }
                    // Translate Retail
                    else if (titleText.includes('Retail')) {
                        title.textContent = "ุงูุชุฌุฒุฆุฉ";
                        description.textContent = "ุชุนุชูุฏ ุดุฑูุงุช ุงูุชุฌุฒุฆุฉ ูู ุฌููุน ุงูุฃุญุฌุงู ุนูู ูุฌููุนุฉ ูุชููุนุฉ ูู ุงูููุงุฑุงุช ุงูุชูููุฉ: ุฃูุธูุฉ ููุงุท ุงูุจูุน (POS)ุ ูุฅุฏุงุฑุฉ ุงููุฎุฒููุ ูุฅุฏุงุฑุฉ ุณูุณูุฉ ุงูุชูุฑูุฏ.";
                        if (button) button.textContent = "ุงุณุชูุดู ุงูุญููู";
                        industryCardTranslatedCount++;
                        console.log('๐ NEW: Retail translated');
                    }
                    // Translate Travel & Tourism
                    else if (titleText.includes('Travel & Tourism')) {
                        title.textContent = "ุงูุณูุฑ ูุงูุณูุงุญุฉ";
                        description.textContent = "ุตูุงุนุฉ ุงูุณูุฑ ุชุชุทูุฑ ุจุงุณุชูุฑุงุฑุ ูุน ุธููุฑ ุชูููุงุช ุฌุฏูุฏุฉ ูุซู ุงูุฐูุงุก ุงูุงุตุทูุงุนู (AI)ุ ูุงูุชุนูู ุงูุขูู (ML)ุ ูุชุญูููุงุช ุงูุจูุงูุงุช.";
                        if (button) button.textContent = "ุงุณุชูุดู ุงูุญููู";
                        industryCardTranslatedCount++;
                        console.log('๐ NEW: Travel & Tourism translated');
                    }
                    // Translate Government
                    else if (titleText.includes('Government')) {
                        title.textContent = "ุงูุญูููุฉ";
                        description.textContent = "ูุณุงุนุฏ ุงูููุงูุงุช ุงูุญููููุฉ ุนูู ุงูุงูุชูุงู ุฅูู ุงูุณุญุงุจุฉ ูุชูููู ูุฑููุฉ ููุงุจููุฉ ุชูุณุน ุฃูุจุฑ. ูููู ููุฑูููุง ูุณุงุนุฏุชู ูู ุงุฎุชูุงุฑ ุฃูุถู ุญู ุณุญุงุจู ูุงุญุชูุงุฌุงุชู.";
                        if (button) button.textContent = "ุงุณุชูุดู ุงูุญููู";
                        industryCardTranslatedCount++;
                        console.log('๐ NEW: Government translated');
                    }
                    // Translate Utilities
                    else if (titleText.includes('Utilities')) {
                        title.textContent = "ุงููุฑุงูู";
                        description.textContent = "ูุณุงุนุฏ ุดุฑูุงุช ุงููุฑุงูู ุนูู ุงูุงูุชูุงู ุฅูู ุงูุณุญุงุจุฉ ูุชูููู ูุฑููุฉ ููุงุจููุฉ ุชูุณุน ุฃูุจุฑ. ูููู ููุฑูููุง ูุณุงุนุฏุชู ูู ุงุฎุชูุงุฑ ุฃูุถู ุญู ุณุญุงุจู ูุนููู.";
                        if (button) button.textContent = "ุงุณุชูุดู ุงูุญููู";
                        industryCardTranslatedCount++;
                        console.log('๐ NEW: Utilities translated');
                    }
                }
            });
            
            // 3. Find and translate any other headings or text
            const allHeadings = document.querySelectorAll('h1, h2, h3, h4, h5, h6');
            let headingTranslatedCount = 0;
            
            allHeadings.forEach((heading, index) => {
                const text = heading.textContent.trim();
                
                if (text.includes('Industry Solutions')) {
                    heading.textContent = "ุญููู ุงูุตูุงุนุฉ";
                    headingTranslatedCount++;
                    console.log('๐ NEW: Industry Solutions heading translated');
                }
                else if (text.includes('Kick Start Your Project Right Now')) {
                    heading.textContent = "ุงุจุฏุฃ ูุดุฑูุนู ุงูุขู";
                    headingTranslatedCount++;
                    console.log('๐ NEW: Contact section heading translated');
                }
            });
            
            // 4. Find and translate any paragraphs with descriptions
            const allParagraphs = document.querySelectorAll('p');
            console.log('๐ NEW: Found', allParagraphs.length, 'paragraphs to translate');
            
            let translatedCount = 0;
            
            allParagraphs.forEach((paragraph, index) => {
                const text = paragraph.textContent.trim();
                
                // Skip empty or very short paragraphs
                if (!text || text.length < 20) return;
                
                // Translate based on content
                if (text.includes('Specialized technology solutions tailored for specific industries')) {
                    paragraph.textContent = "ุญููู ุชูููููุฌูุฉ ูุชุฎุตุตุฉ ูุตููุฉ ูุตูุงุนุงุช ูุญุฏุฏุฉุ ุชุณุงุนุฏ ุงูููุธูุงุช ุนูู ุงูุงุณุชูุงุฏุฉ ูู ุงูุชูููููุฌูุง ููููุฒุฉ ุงูุชูุงูุณูุฉ.";
                    translatedCount++;
                    console.log('๐ NEW: Specialized technology solutions description translated');
                }
                else if (text.includes('We will contact you in the next few hours')) {
                    paragraph.textContent = "ุณูุชูุงุตู ูุนู ูู ุงูุณุงุนุงุช ุงููุงุฏูุฉ ุฃู ููููู ุชุญุฏูุฏ ููุนุฏ ุงูุขู.";
                    translatedCount++;
                    console.log('๐ NEW: Contact message translated');
                }
                else if (text.includes('Schedule a meeting')) {
                    paragraph.textContent = "ุญุฏุฏ ููุนุฏ";
                    translatedCount++;
                    console.log('๐ NEW: Schedule meeting button translated');
                }
            });
            
            // 5. Find and translate form placeholders
            const allInputs = document.querySelectorAll('input, textarea');
            let inputTranslatedCount = 0;
            
            allInputs.forEach((input, index) => {
                const placeholder = input.getAttribute('placeholder');
                const value = input.getAttribute('value');
                
                if (placeholder) {
                    if (placeholder.includes('Name*')) {
                        input.setAttribute('placeholder', 'ุงูุงุณู*');
                        inputTranslatedCount++;
                        console.log('๐ NEW: Name placeholder translated');
                    }
                    else if (placeholder.includes('E-mail*')) {
                        input.setAttribute('placeholder', 'ุงูุจุฑูุฏ ุงูุฅููุชุฑููู*');
                        inputTranslatedCount++;
                        console.log('๐ NEW: Email placeholder translated');
                    }
                    else if (placeholder.includes('Tell about your project')) {
                        input.setAttribute('placeholder', 'ุฃุฎุจุฑูุง ุนู ูุดุฑูุนู');
                        inputTranslatedCount++;
                        console.log('๐ NEW: Message placeholder translated');
                    }
                }
                
                if (value && value.includes('send message')) {
                    input.setAttribute('value', 'ุฅุฑุณุงู ุงูุฑุณุงูุฉ');
                    inputTranslatedCount++;
                    console.log('๐ NEW: Send message button translated');
                }
            });
            
            // Translation completed silently
            // Translation completed silently
            
            // Industry page translations completed
        } catch (error) {
            logError('Failed to apply Industry translations', error);
        }
    }

    // ===== REVERT FUNCTIONS =====
    
    // Revert header translations
    function revertHeaderTranslations() {
        try {
            console.log('๐ Reverting header translations to English...');
            
            if (window.originalEnglishContent && window.originalEnglishContent.header) {
                Object.keys(window.originalEnglishContent.header).forEach(key => {
                    const content = window.originalEnglishContent.header[key];
                    if (content.element && content.text) {
                        content.element.textContent = content.text;
                    }
                });
                console.log('๐ Header translations reverted successfully');
            }
        } catch (error) {
            logError('Failed to revert header translations', error);
        }
    }

    // Revert contact and footer translations
    function revertContactAndFooterTranslations() {
        try {
            console.log('๐ Reverting contact and footer translations to English...');
            
            if (window.originalEnglishContent && window.originalEnglishContent.contactFooter) {
                Object.keys(window.originalEnglishContent.contactFooter).forEach(key => {
                    const content = window.originalEnglishContent.contactFooter[key];
                    if (content.element && content.text) {
                        content.element.textContent = content.text;
                    }
                });
                console.log('๐ Contact and footer translations reverted successfully');
            }
        } catch (error) {
            logError('Failed to revert contact and footer translations', error);
        }
    }

    // Revert page-specific translations
    function revertIndexTranslations() {
        try {
            console.log('๐ Reverting Index page translations to English...');
            // For now, we'll use a page refresh approach as it's more reliable
            // This can be enhanced later with stored original content
            console.log('๐ Index page translations reverted (page refresh recommended for full reversion)');
        } catch (error) {
            logError('Failed to revert Index translations', error);
        }
    }

    function revertIndustryTranslations() {
        try {
            console.log('๐ Reverting Industry page translations to English...');
            // For now, we'll use a page refresh approach as it's more reliable
            // This can be enhanced later with stored original content
            console.log('๐ Industry page translations reverted (page refresh recommended for full reversion)');
        } catch (error) {
            logError('Failed to revert Industry translations', error);
        }
    }

    function revertAboutUsTranslations() {
        try {
            console.log('๐ Reverting About Us page translations to English...');
            // For now, we'll use a page refresh approach as it's more reliable
            // This can be enhanced later with stored original content
            console.log('๐ About Us page translations reverted (page refresh recommended for full reversion)');
        } catch (error) {
            logError('Failed to revert About Us translations', error);
        }
    }

    function revertAIConsultingTranslations() {
        try {
            console.log('๐ Reverting AI Consulting page translations to English...');
            // For now, we'll use a page refresh approach as it's more reliable
            // This can be enhanced later with stored original content
            console.log('๐ AI Consulting page translations reverted (page refresh recommended for full reversion)');
        } catch (error) {
            logError('Failed to revert AI Consulting translations', error);
        }
    }

    function revertEngineeringServicesTranslations() {
        try {
            console.log('๐ Reverting Engineering Services page translations to English...');
            // For now, we'll use a page refresh approach as it's more reliable
            // This can be enhanced later with stored original content
            console.log('๐ Engineering Services page translations reverted (page refresh recommended for full reversion)');
        } catch (error) {
            logError('Failed to revert Engineering Services translations', error);
        }
    }

    function revertDataAnalyticsTranslations() {
        try {
            console.log('๐ Reverting Data Analytics page translations to English...');
            // For now, we'll use a page refresh approach as it's more reliable
            // This can be enhanced later with stored original content
            console.log('๐ Data Analytics page translations reverted (page refresh recommended for full reversion)');
        } catch (error) {
            logError('Failed to revert Data Analytics translations', error);
        }
    }

    function revertCompanyProfileTranslations() {
        try {
            console.log('๐ Reverting Company Profile page translations to English...');
            // For now, we'll use a page refresh approach as it's more reliable
            // This can be enhanced later with stored original content
            console.log('๐ Company Profile page translations reverted (page refresh recommended for full reversion)');
        } catch (error) {
            logError('Failed to revert Company Profile translations', error);
        }
    }

    function revertCSRTranslations() {
        try {
            console.log('๐ Reverting CSR page translations to English...');
            // For now, we'll use a page refresh approach as it's more reliable
            // This can be enhanced later with stored original content
            console.log('๐ CSR page translations reverted (page refresh recommended for full reversion)');
        } catch (error) {
            logError('Failed to revert CSR translations', error);
        }
    }

    function revertTechnologyPartnersTranslations() {
        try {
            console.log('๐ Reverting Technology Partners page translations to English...');
            // For now, we'll use a page refresh approach as it's more reliable
            // This can be enhanced later with stored original content
            console.log('๐ Technology Partners page translations reverted (page refresh recommended for full reversion)');
        } catch (error) {
            logError('Failed to revert Technology Partners translations', error);
        }
    }

    // Store original content functions (placeholder implementations)
    function storeIndexOriginalContent() {
        console.log('๐พ Storing Index page original content...');
        // Implementation can be enhanced later
    }

    function storeIndustryOriginalContent() {
        console.log('๐พ Storing Industry page original content...');
        // Implementation can be enhanced later
    }

    function storeAboutUsOriginalContent() {
        console.log('๐พ Storing About Us page original content...');
        // Implementation can be enhanced later
    }

    function storeAIConsultingOriginalContent() {
        console.log('๐พ Storing AI Consulting page original content...');
        // Implementation can be enhanced later
    }

    function storeEngineeringServicesOriginalContent() {
        console.log('๐พ Storing Engineering Services page original content...');
        // Implementation can be enhanced later
    }

    function storeDataAnalyticsOriginalContent() {
        console.log('๐พ Storing Data Analytics page original content...');
        // Implementation can be enhanced later
    }

    function storeCompanyProfileOriginalContent() {
        console.log('๐พ Storing Company Profile page original content...');
        // Implementation can be enhanced later
    }

    function storeCSROriginalContent() {
        console.log('๐พ Storing CSR page original content...');
        // Implementation can be enhanced later
    }

    function storeTechnologyPartnersOriginalContent() {
        console.log('๐พ Storing Technology Partners page original content...');
        // Implementation can be enhanced later
    }

})(); 